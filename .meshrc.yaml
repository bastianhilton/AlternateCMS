## Postgresql Database Graphql

sources:
  - name: Main
    handler:
      postgraphile:
        connectionString: DATABASE_URL
        appendPlugins:
          - "@graphile/federation"
          - "@graphile/postgis"
          - "@graphile-contrib/pg-many-to-many"
        # You can also use environment variables like below
        # connectionString: postgres://{env.POSTGRES_USER}:{env.POSTGRES_PASSWORD}@localhost/postgres

## MySQL Database Graphql

#sources:
#  - name: Employees
#   handler:
#      mysql:
#        # You can use environment variables like
#        # host: "{env.MYSQL_HOST}"
#        # port: "{env.MYSQL_PORT}"
#        # user: "{env.MYSQL_USER}"
#        # password: "{env.MYSQL_PASSWORD}"
#        # database: "{env.MYSQL_DATABASE}"
#        host: localhost
#        port: 3306
#        user: root
#        password: passwd
#        database: employees

## OData / Microsoft Graph Graphql

#sources:
#  - name: TripPin
#    handler:
#      odata:
#        baseUrl: https://services.odata.org/TripPinRESTierService/

## Apache Thrift Graphql

#sources:
#    - name: Calculator
#      handler:
#        thrift:
#          idl: ./src/thrift/calculator.thrift
#          hostName: localhost
#          port: 8080
#          path: /thrift
#          serviceName: calculator-service

# Sqlite Database Graphql

#sources:
#  - name: MyDb
#    handler:
#      tuql:
#        db: path/to/database.sqlite

# Soap Graphql

#sources:
#  - name: CountryInfo
#    handler:
#      soap:
#        wsdl: http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL

additionalTypeDefs: |
  extend type File {
    thumbnailImage(width: Int, height: Int): String
  }
additionalResolvers:
  - targetTypeName: File
    targetFieldName: thumbnailImage
    requiredSelectionSet: '{ base64 }'
    sourceName: ResizeImages
    sourceTypeName: Query
    sourceFieldName: resizeImage
    sourceArgs:
      image: '{root.base64}'
      width: '{args.width}'
      height: '{args.height}'

serve:
  cors:
    origin: '*'