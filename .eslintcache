[{"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-quote.vue":"1","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\quotes\\_id.vue":"2","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-opportunity.vue":"3","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-case.vue":"4","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\opportunities\\_id.vue":"5","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\cases\\_id.vue":"6","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-contract.vue":"7","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Footer.vue":"8","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\contracts\\_id.vue":"9","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-lead.vue":"10","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\leads\\_id.vue":"11","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-task.vue":"12","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\tasks\\_id.vue":"13","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-meeting.vue":"14","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\meeting\\_id.vue":"15","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-target.vue":"16","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\target\\_id.vue":"17","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\ecommerce\\paypal.js":"18","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\main.js":"19","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\client.js":"20","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\ecommerce\\pa-dss.js":"21","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\index.vue":"22","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\search.vue":"23","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\test.vue":"24","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Auth\\Login.vue":"25","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Auth\\Register.vue":"26","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\User\\my-account.vue":"27","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-agreement.vue":"28","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-article.vue":"29","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-attribute.vue":"30","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-campaign.vue":"31","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-city.vue":"32","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-category.vue":"33","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-collection.vue":"34","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-coupon.vue":"35","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-country.vue":"36","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-customer.vue":"37","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-customergroup.vue":"38","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-gift-certificates.vue":"39","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-glossary.vue":"40","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-invoice.vue":"41","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-event.vue":"42","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-newsletter.vue":"43","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-newslettersubscriber copy.vue":"44","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-page.vue":"45","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-product.vue":"46","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-project.vue":"47","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-report.vue":"48","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-return.vue":"49","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-review.vue":"50","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-role.vue":"51","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-segment.vue":"52","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-shipment.vue":"53","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-staffmembers.vue":"54","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-state.vue":"55","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-survey.vue":"56","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-tag.vue":"57","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-taxrate.vue":"58","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-taxrule.vue":"59","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-visit.vue":"60","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-warehouse.vue":"61","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\blog.vue":"62","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\glossary.vue":"63","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\media-manager.vue":"64","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\pages.vue":"65","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\projects.vue":"66","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\tags.vue":"67","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\Email\\_id.vue":"68","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\warehouse\\_id.vue":"69","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\taxrule\\_id.vue":"70","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\nologin.vue":"71","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\default.vue":"72","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\dashboard.vue":"73","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-fullfilment.vue":"74","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-knowledgebase.vue":"75","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-pdftemplates.vue":"76","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-warehouse copy.vue":"77","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\store\\services\\index.js":"78","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\taxrate\\_id.vue":"79","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\formulate.config.js":"80","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\apollo\\clientConfig.js":"81","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\apollo-error-handler.js":"82","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\tag\\_id.vue":"83","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\state\\_id.vue":"84","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\shipment\\_id.vue":"85","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\segment\\_id.vue":"86","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\review\\_id.vue":"87","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\return\\_id.vue":"88","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\report\\_id.vue":"89","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\projects\\_id.vue":"90","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\product\\_id.vue":"91","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\page\\_id.vue":"92","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\newslettersubscriber\\_id.vue":"93","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\newsletter\\_id.vue":"94","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Header.vue":"95","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Breadcrumbs.vue":"96","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\invoice\\_id.vue":"97","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\customerslimit.vue":"98","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\reviewslimit.vue":"99","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Notification.vue":"100","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\newcustomers.vue":"101","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\glossary\\_id.vue":"102","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\toppicks.vue":"103","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\settings.vue":"104","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\shop.vue":"105","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\reports.vue":"106","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\sales.vue":"107","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\marketing.vue":"108","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\content.vue":"109","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\customers.vue":"110","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\gift-certificate\\_id.vue":"111","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\event\\_id.vue":"112","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\customergroup\\_id.vue":"113","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\coupon\\_id.vue":"114","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\country\\_id.vue":"115","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\collection\\_id.vue":"116","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\city\\_id.vue":"117","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\category\\_id.vue":"118","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\attribute\\_id.vue":"119","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\article\\_id.vue":"120","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\agreement\\_id.vue":"121","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\Product\\Edit\\_id.vue":"122","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\Email\\email-designer.vue":"123","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\providers\\id.vue":"124","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\customer\\newcustomer.vue":"125","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\settings.vue":"126","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\role-manager.vue":"127","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\integrations.vue":"128","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\help.vue":"129","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\general-settings.vue":"130","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\warehouses.vue":"131","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\tax-rule.vue":"132","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\tax-rate.vue":"133","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\states.vue":"134","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\products.vue":"135","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\multi-vendor.vue":"136","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\inventory.vue":"137","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\coupons.vue":"138","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\countries.vue":"139","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\collections.vue":"140","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\cities.vue":"141","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\categories.vue":"142","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\attributes.vue":"143","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\transactions.vue":"144","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\shipments.vue":"145","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\returns.vue":"146","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\quotes.vue":"147","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\orders.vue":"148","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\invoices.vue":"149","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\credit-memos.vue":"150","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\certificates.vue":"151","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\agreements.vue":"152","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\surveys.vue":"153","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\statistics.vue":"154","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\sales-reports.vue":"155","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\reviews.vue":"156","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\products-reports.vue":"157","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\marketing-reports.vue":"158","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\cases.vue":"159","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\calendars.vue":"160","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\seo.vue":"161","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\reviews.vue":"162","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\newsletter.vue":"163","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\invitations.vue":"164","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\events.vue":"165","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\contracts.vue":"166","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\communications.vue":"167","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\tasks.vue":"168","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\segments.vue":"169","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\opportunities.vue":"170","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\online-customers.vue":"171","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\meetings.vue":"172","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\leads.vue":"173","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\customer-groups.vue":"174","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\all-customers.vue":"175","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-rewards.vue":"176","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\colormode.vue":"177","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\ottotracker.vue":"178","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\visitsdisplay.vue":"179","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\error.vue":"180","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-deepdive.vue":"181","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-ooto.vue":"182","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-checklist.vue":"183","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-schedule.vue":"184","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-eosr.vue":"185","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\ooto\\_id.vue":"186","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\deep-dive\\_id.vue":"187","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\team-scheduler.vue":"188","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\eosr.vue":"189","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\deep-dive.vue":"190","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-emailtemplates.vue":"191","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\ooto.vue":"192","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\settings\\paymentsettings.vue":"193","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\settings\\providersettings.vue":"194","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\fullfillment\\_id.vue":"195","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\email_template\\_id.vue":"196","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\pdf_template\\_id.vue":"197","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\import-management.vue":"198","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\export-management.vue":"199","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\import\\import-products.vue":"200","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\import\\_id.vue":"201","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\extensions\\datatables.js":"202","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\reward\\_id.vue":"203","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\rewards.vue":"204","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\knowledgebase\\_id.vue":"205","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\knowledgebase.vue":"206"},{"size":20546,"mtime":1653110830199,"results":"207","hashOfConfig":"208"},{"size":12402,"mtime":1653604131627,"results":"209","hashOfConfig":"208"},{"size":8593,"mtime":1653359957349,"results":"210","hashOfConfig":"208"},{"size":5827,"mtime":1653274604909,"results":"211","hashOfConfig":"208"},{"size":5474,"mtime":1653604099464,"results":"212","hashOfConfig":"208"},{"size":4594,"mtime":1653604010543,"results":"213","hashOfConfig":"208"},{"size":12718,"mtime":1653279711731,"results":"214","hashOfConfig":"208"},{"size":796,"mtime":1653275260048,"results":"215","hashOfConfig":"208"},{"size":8998,"mtime":1653280411049,"results":"216","hashOfConfig":"208"},{"size":15610,"mtime":1653358748307,"results":"217","hashOfConfig":"208"},{"size":11003,"mtime":1653627628431,"results":"218","hashOfConfig":"208"},{"size":5840,"mtime":1653361635717,"results":"219","hashOfConfig":"208"},{"size":4559,"mtime":1653361821871,"results":"220","hashOfConfig":"208"},{"size":6912,"mtime":1653446959557,"results":"221","hashOfConfig":"208"},{"size":4703,"mtime":1653604032245,"results":"222","hashOfConfig":"208"},{"size":12889,"mtime":1653442223294,"results":"223","hashOfConfig":"208"},{"size":9410,"mtime":1653604171342,"results":"224","hashOfConfig":"208"},{"size":522,"mtime":1647650236201,"results":"225","hashOfConfig":"208"},{"size":841,"mtime":1653010842587,"results":"226","hashOfConfig":"208"},{"size":418,"mtime":1644478546107,"results":"227","hashOfConfig":"208"},{"size":605,"mtime":1653093186386,"results":"228","hashOfConfig":"208"},{"size":8917,"mtime":1647637440250,"results":"229","hashOfConfig":"208"},{"size":138,"mtime":1653532921693,"results":"230","hashOfConfig":"208"},{"size":398,"mtime":1645905570923,"results":"231","hashOfConfig":"208"},{"size":2730,"mtime":1652578596814,"results":"232","hashOfConfig":"208"},{"size":4025,"mtime":1652578611983,"results":"233","hashOfConfig":"208"},{"size":1729,"mtime":1651959279867,"results":"234","hashOfConfig":"208"},{"size":6911,"mtime":1652576793144,"results":"235","hashOfConfig":"208"},{"size":8028,"mtime":1652576749792,"results":"236","hashOfConfig":"208"},{"size":3754,"mtime":1652576749788,"results":"237","hashOfConfig":"208"},{"size":8029,"mtime":1652847111663,"results":"238","hashOfConfig":"208"},{"size":5583,"mtime":1652576749795,"results":"239","hashOfConfig":"208"},{"size":8563,"mtime":1652576749793,"results":"240","hashOfConfig":"208"},{"size":8630,"mtime":1652576749799,"results":"241","hashOfConfig":"208"},{"size":4778,"mtime":1652576749996,"results":"242","hashOfConfig":"208"},{"size":4974,"mtime":1652576749799,"results":"243","hashOfConfig":"208"},{"size":6247,"mtime":1652579913866,"results":"244","hashOfConfig":"208"},{"size":3184,"mtime":1652576749996,"results":"245","hashOfConfig":"208"},{"size":5442,"mtime":1652576749901,"results":"246","hashOfConfig":"208"},{"size":5605,"mtime":1652576749816,"results":"247","hashOfConfig":"208"},{"size":9679,"mtime":1652576749801,"results":"248","hashOfConfig":"208"},{"size":10084,"mtime":1652576749903,"results":"249","hashOfConfig":"208"},{"size":5273,"mtime":1652576749894,"results":"250","hashOfConfig":"208"},{"size":12055,"mtime":1652576749893,"results":"251","hashOfConfig":"208"},{"size":7769,"mtime":1652576749874,"results":"252","hashOfConfig":"208"},{"size":17494,"mtime":1652576749741,"results":"253","hashOfConfig":"208"},{"size":8028,"mtime":1652846876817,"results":"254","hashOfConfig":"208"},{"size":11804,"mtime":1652576749821,"results":"255","hashOfConfig":"208"},{"size":3975,"mtime":1652576749821,"results":"256","hashOfConfig":"208"},{"size":4680,"mtime":1652576749894,"results":"257","hashOfConfig":"208"},{"size":3181,"mtime":1652579740777,"results":"258","hashOfConfig":"208"},{"size":4019,"mtime":1652576749896,"results":"259","hashOfConfig":"208"},{"size":4931,"mtime":1652576807702,"results":"260","hashOfConfig":"208"},{"size":4047,"mtime":1652576749895,"results":"261","hashOfConfig":"208"},{"size":4937,"mtime":1652576749996,"results":"262","hashOfConfig":"208"},{"size":8028,"mtime":1652576749792,"results":"263","hashOfConfig":"208"},{"size":4254,"mtime":1652576749995,"results":"264","hashOfConfig":"208"},{"size":5149,"mtime":1652576749995,"results":"265","hashOfConfig":"208"},{"size":3047,"mtime":1652576749995,"results":"266","hashOfConfig":"208"},{"size":8026,"mtime":1653452619411,"results":"267","hashOfConfig":"208"},{"size":6654,"mtime":1653608692882,"results":"268","hashOfConfig":"208"},{"size":1409,"mtime":1652932578709,"results":"269","hashOfConfig":"208"},{"size":1398,"mtime":1652932578706,"results":"270","hashOfConfig":"208"},{"size":162,"mtime":1653532993150,"results":"271","hashOfConfig":"208"},{"size":1407,"mtime":1652932578611,"results":"272","hashOfConfig":"208"},{"size":1413,"mtime":1652932578571,"results":"273","hashOfConfig":"208"},{"size":1211,"mtime":1652932577599,"results":"274","hashOfConfig":"208"},{"size":150,"mtime":1645318559446,"results":"275","hashOfConfig":"208"},{"size":5090,"mtime":1653605178045,"results":"276","hashOfConfig":"208"},{"size":3064,"mtime":1647619568583,"results":"277","hashOfConfig":"208"},{"size":359,"mtime":1651957232555,"results":"278","hashOfConfig":"208"},{"size":635,"mtime":1647156324333,"results":"279","hashOfConfig":"208"},{"size":456,"mtime":1647637246988,"results":"280","hashOfConfig":"208"},{"size":8061,"mtime":1653608686475,"results":"281","hashOfConfig":"208"},{"size":4721,"mtime":1653627246120,"results":"282","hashOfConfig":"208"},{"size":6903,"mtime":1653604557915,"results":"283","hashOfConfig":"208"},{"size":8191,"mtime":1653608734573,"results":"284","hashOfConfig":"208"},{"size":47,"mtime":1645496611929,"results":"285","hashOfConfig":"208"},{"size":4038,"mtime":1647619665063,"results":"286","hashOfConfig":"208"},{"size":180,"mtime":1645588735718,"results":"287","hashOfConfig":"208"},{"size":496,"mtime":1645249455206,"results":"288","hashOfConfig":"208"},{"size":112,"mtime":1643494343391,"results":"289","hashOfConfig":"208"},{"size":4290,"mtime":1647573784751,"results":"290","hashOfConfig":"208"},{"size":4602,"mtime":1647573577206,"results":"291","hashOfConfig":"208"},{"size":4006,"mtime":1647573351101,"results":"292","hashOfConfig":"208"},{"size":3428,"mtime":1647619649573,"results":"293","hashOfConfig":"208"},{"size":4243,"mtime":1647577679832,"results":"294","hashOfConfig":"208"},{"size":3772,"mtime":1647577365926,"results":"295","hashOfConfig":"208"},{"size":7088,"mtime":1647573045363,"results":"296","hashOfConfig":"208"},{"size":0,"mtime":1652933810853,"results":"297","hashOfConfig":"208"},{"size":11820,"mtime":1647487726944,"results":"298","hashOfConfig":"208"},{"size":6807,"mtime":1647487887808,"results":"299","hashOfConfig":"208"},{"size":7802,"mtime":1647488338147,"results":"300","hashOfConfig":"208"},{"size":4621,"mtime":1647488539942,"results":"301","hashOfConfig":"208"},{"size":18451,"mtime":1653627874180,"results":"302","hashOfConfig":"208"},{"size":2343,"mtime":1647642249459,"results":"303","hashOfConfig":"208"},{"size":5740,"mtime":1647488783763,"results":"304","hashOfConfig":"208"},{"size":1430,"mtime":1647240027011,"results":"305","hashOfConfig":"208"},{"size":1422,"mtime":1647240026872,"results":"306","hashOfConfig":"208"},{"size":262,"mtime":1651814819278,"results":"307","hashOfConfig":"208"},{"size":1428,"mtime":1647312437986,"results":"308","hashOfConfig":"208"},{"size":5416,"mtime":1647487098702,"results":"309","hashOfConfig":"208"},{"size":2118,"mtime":1653010842348,"results":"310","hashOfConfig":"208"},{"size":2117,"mtime":1653010842317,"results":"311","hashOfConfig":"208"},{"size":2113,"mtime":1653010842334,"results":"312","hashOfConfig":"208"},{"size":2115,"mtime":1653010842312,"results":"313","hashOfConfig":"208"},{"size":2114,"mtime":1653010842316,"results":"314","hashOfConfig":"208"},{"size":2118,"mtime":1653010842302,"results":"315","hashOfConfig":"208"},{"size":2104,"mtime":1653010842299,"results":"316","hashOfConfig":"208"},{"size":2118,"mtime":1653010842301,"results":"317","hashOfConfig":"208"},{"size":4994,"mtime":1647486487212,"results":"318","hashOfConfig":"208"},{"size":7148,"mtime":1653603886236,"results":"319","hashOfConfig":"208"},{"size":3393,"mtime":1647485291976,"results":"320","hashOfConfig":"208"},{"size":4380,"mtime":1647484957514,"results":"321","hashOfConfig":"208"},{"size":4694,"mtime":1647484166190,"results":"322","hashOfConfig":"208"},{"size":7753,"mtime":1647483339509,"results":"323","hashOfConfig":"208"},{"size":5030,"mtime":1647482467480,"results":"324","hashOfConfig":"208"},{"size":7462,"mtime":1647482242487,"results":"325","hashOfConfig":"208"},{"size":3514,"mtime":1647481870228,"results":"326","hashOfConfig":"208"},{"size":7332,"mtime":1647481766442,"results":"327","hashOfConfig":"208"},{"size":6462,"mtime":1647239678327,"results":"328","hashOfConfig":"208"},{"size":19458,"mtime":1652576749776,"results":"329","hashOfConfig":"208"},{"size":505,"mtime":1648880888639,"results":"330","hashOfConfig":"208"},{"size":4175,"mtime":1652932578430,"results":"331","hashOfConfig":"208"},{"size":11805,"mtime":1652576749781,"results":"332","hashOfConfig":"208"},{"size":35515,"mtime":1645917345385,"results":"333","hashOfConfig":"208"},{"size":1292,"mtime":1652932577609,"results":"334","hashOfConfig":"208"},{"size":3655,"mtime":1653010842556,"results":"335","hashOfConfig":"208"},{"size":299,"mtime":1652761238718,"results":"336","hashOfConfig":"208"},{"size":4152,"mtime":1653611081250,"results":"337","hashOfConfig":"208"},{"size":1249,"mtime":1653608775936,"results":"338","hashOfConfig":"208"},{"size":1301,"mtime":1652932577638,"results":"339","hashOfConfig":"208"},{"size":1487,"mtime":1652932577644,"results":"340","hashOfConfig":"208"},{"size":1319,"mtime":1652932577653,"results":"341","hashOfConfig":"208"},{"size":1635,"mtime":1652932577669,"results":"342","hashOfConfig":"208"},{"size":1525,"mtime":1652932577669,"results":"343","hashOfConfig":"208"},{"size":1526,"mtime":1652932577674,"results":"344","hashOfConfig":"208"},{"size":1402,"mtime":1652932577682,"results":"345","hashOfConfig":"208"},{"size":1457,"mtime":1652932577736,"results":"346","hashOfConfig":"208"},{"size":1414,"mtime":1652932577764,"results":"347","hashOfConfig":"208"},{"size":1381,"mtime":1652932577798,"results":"348","hashOfConfig":"208"},{"size":1600,"mtime":1652932577820,"results":"349","hashOfConfig":"208"},{"size":1529,"mtime":1652932577833,"results":"350","hashOfConfig":"208"},{"size":1662,"mtime":1652932577938,"results":"351","hashOfConfig":"208"},{"size":1485,"mtime":1652932578012,"results":"352","hashOfConfig":"208"},{"size":1450,"mtime":1652932577970,"results":"353","hashOfConfig":"208"},{"size":1558,"mtime":1652935269976,"results":"354","hashOfConfig":"208"},{"size":1073,"mtime":1652932577996,"results":"355","hashOfConfig":"208"},{"size":1875,"mtime":1652932578029,"results":"356","hashOfConfig":"208"},{"size":1532,"mtime":1652932578116,"results":"357","hashOfConfig":"208"},{"size":1629,"mtime":1652932578131,"results":"358","hashOfConfig":"208"},{"size":1571,"mtime":1653622630955,"results":"359","hashOfConfig":"208"},{"size":1504,"mtime":1652934564519,"results":"360","hashOfConfig":"208"},{"size":1623,"mtime":1653010842543,"results":"361","hashOfConfig":"208"},{"size":1667,"mtime":1652932578153,"results":"362","hashOfConfig":"208"},{"size":1263,"mtime":1652932578172,"results":"363","hashOfConfig":"208"},{"size":1372,"mtime":1652932578254,"results":"364","hashOfConfig":"208"},{"size":1679,"mtime":1652932578389,"results":"365","hashOfConfig":"208"},{"size":1500,"mtime":1652933852036,"results":"366","hashOfConfig":"208"},{"size":3400,"mtime":1652849035136,"results":"367","hashOfConfig":"208"},{"size":1367,"mtime":1652932578167,"results":"368","hashOfConfig":"208"},{"size":1342,"mtime":1652932578242,"results":"369","hashOfConfig":"208"},{"size":1531,"mtime":1652932578274,"results":"370","hashOfConfig":"208"},{"size":1353,"mtime":1652932578300,"results":"371","hashOfConfig":"208"},{"size":1559,"mtime":1652932578380,"results":"372","hashOfConfig":"208"},{"size":1672,"mtime":1653010842539,"results":"373","hashOfConfig":"208"},{"size":1593,"mtime":1652932578404,"results":"374","hashOfConfig":"208"},{"size":1598,"mtime":1653010842506,"results":"375","hashOfConfig":"208"},{"size":2207,"mtime":1652932578460,"results":"376","hashOfConfig":"208"},{"size":1722,"mtime":1653010842446,"results":"377","hashOfConfig":"208"},{"size":873,"mtime":1652932578524,"results":"378","hashOfConfig":"208"},{"size":1715,"mtime":1653010842415,"results":"379","hashOfConfig":"208"},{"size":1566,"mtime":1653010842363,"results":"380","hashOfConfig":"208"},{"size":1463,"mtime":1652932578599,"results":"381","hashOfConfig":"208"},{"size":1602,"mtime":1652932578627,"results":"382","hashOfConfig":"208"},{"size":5463,"mtime":1653625183531,"results":"383","hashOfConfig":"208"},{"size":2927,"mtime":1653452617852,"results":"384","hashOfConfig":"208"},{"size":2386,"mtime":1653452617866,"results":"385","hashOfConfig":"208"},{"size":104,"mtime":1653452617875,"results":"386","hashOfConfig":"208"},{"size":997,"mtime":1653452619362,"results":"387","hashOfConfig":"208"},{"size":4326,"mtime":1653452619380,"results":"388","hashOfConfig":"208"},{"size":4287,"mtime":1653452619390,"results":"389","hashOfConfig":"208"},{"size":4326,"mtime":1653452619372,"results":"390","hashOfConfig":"208"},{"size":0,"mtime":1653452619398,"results":"391","hashOfConfig":"208"},{"size":0,"mtime":1653452619381,"results":"392","hashOfConfig":"208"},{"size":3569,"mtime":1653604058135,"results":"393","hashOfConfig":"208"},{"size":3878,"mtime":1653603972453,"results":"394","hashOfConfig":"208"},{"size":1216,"mtime":1653452619500,"results":"395","hashOfConfig":"208"},{"size":1204,"mtime":1653452619497,"results":"396","hashOfConfig":"208"},{"size":1558,"mtime":1653452619496,"results":"397","hashOfConfig":"208"},{"size":6555,"mtime":1653603440691,"results":"398","hashOfConfig":"208"},{"size":1443,"mtime":1653534255922,"results":"399","hashOfConfig":"208"},{"size":2927,"mtime":1653518996051,"results":"400","hashOfConfig":"208"},{"size":2848,"mtime":1653517593578,"results":"401","hashOfConfig":"208"},{"size":6031,"mtime":1653602554421,"results":"402","hashOfConfig":"208"},{"size":5291,"mtime":1653603952357,"results":"403","hashOfConfig":"208"},{"size":6228,"mtime":1653604767367,"results":"404","hashOfConfig":"208"},{"size":2694,"mtime":1653612709433,"results":"405","hashOfConfig":"208"},{"size":2692,"mtime":1653612703325,"results":"406","hashOfConfig":"208"},{"size":295,"mtime":1653613634483,"results":"407","hashOfConfig":"208"},{"size":296,"mtime":1653613623527,"results":"408","hashOfConfig":"208"},{"size":107,"mtime":1653619043664,"results":"409","hashOfConfig":"208"},{"size":4539,"mtime":1653625426069,"results":"410","hashOfConfig":"208"},{"size":1525,"mtime":1653627435025,"results":"411","hashOfConfig":"208"},{"size":4330,"mtime":1653627802231,"results":"412","hashOfConfig":"208"},{"size":1636,"mtime":1653627462274,"results":"413","hashOfConfig":"208"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"417"},"1o1ndlu",{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"417"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"417"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"417"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"417"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"417"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"417"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"417"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"417"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"417"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"417"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"477","usedDeprecatedRules":"417"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"484","usedDeprecatedRules":"417"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"487","usedDeprecatedRules":"417"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"490","usedDeprecatedRules":"417"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"493","usedDeprecatedRules":"417"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"496","usedDeprecatedRules":"417"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"499","usedDeprecatedRules":"417"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"502","usedDeprecatedRules":"417"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"505","usedDeprecatedRules":"417"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":"508","usedDeprecatedRules":"417"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"511","usedDeprecatedRules":"417"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"514","usedDeprecatedRules":"417"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"517","usedDeprecatedRules":"417"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"520","usedDeprecatedRules":"417"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"523","usedDeprecatedRules":"417"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"526","usedDeprecatedRules":"417"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"529","usedDeprecatedRules":"417"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":"532","usedDeprecatedRules":"417"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"535","usedDeprecatedRules":"417"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":"538","usedDeprecatedRules":"417"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"541","usedDeprecatedRules":"417"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"544","usedDeprecatedRules":"417"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"547","usedDeprecatedRules":"417"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"550","usedDeprecatedRules":"417"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"553","usedDeprecatedRules":"417"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"556","usedDeprecatedRules":"417"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"559","usedDeprecatedRules":"417"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"562","usedDeprecatedRules":"417"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":"565","usedDeprecatedRules":"417"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"487","usedDeprecatedRules":"417"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":"570","usedDeprecatedRules":"417"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"573","usedDeprecatedRules":"417"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"576","usedDeprecatedRules":"417"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"579","usedDeprecatedRules":"417"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"417"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"417"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"602","usedDeprecatedRules":"417"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"621","usedDeprecatedRules":"417"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"461"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"631","usedDeprecatedRules":"417"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"634","usedDeprecatedRules":"417"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"637","usedDeprecatedRules":"417"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"640","usedDeprecatedRules":"417"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"643","usedDeprecatedRules":"417"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"646","usedDeprecatedRules":"417"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"417"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"654","usedDeprecatedRules":"417"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"657","usedDeprecatedRules":"417"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"660","usedDeprecatedRules":"417"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"663","usedDeprecatedRules":"417"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"668","usedDeprecatedRules":"417"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"671","usedDeprecatedRules":"417"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"417"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"417"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"417"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"685","usedDeprecatedRules":"417"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"704","usedDeprecatedRules":"417"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"709","usedDeprecatedRules":"417"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"712","usedDeprecatedRules":"417"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"715","usedDeprecatedRules":"417"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"417"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"417"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"417"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"417"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"730","usedDeprecatedRules":"417"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"417"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":6,"source":"736","usedDeprecatedRules":"417"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"741","usedDeprecatedRules":"417"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"744","usedDeprecatedRules":"417"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"751","usedDeprecatedRules":"417"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"417"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"417"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"417"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"417"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"417"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"417"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"417"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"417"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"417"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"417"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"417"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"801","usedDeprecatedRules":"417"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"417"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"809","messages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"815","usedDeprecatedRules":"417"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"417"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"829","usedDeprecatedRules":"417"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"417"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"417"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"417"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"417"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"417"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"417"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"856","usedDeprecatedRules":"417"},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"417"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"417"},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"417"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"417"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"879","usedDeprecatedRules":"417"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"884","usedDeprecatedRules":"417"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"887","usedDeprecatedRules":"417"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"890","usedDeprecatedRules":"417"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"887","usedDeprecatedRules":"417"},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"921","messages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"935","usedDeprecatedRules":"936"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-quote.vue",["941","942","943","944"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" enctype=\"multipart/form-data\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"quoteAddOptions\">\r\n                <li><a href=\"/admin/add-new/add-new-opportunity\">\r\n                    <FormulateInput type=\"button\">Add New Opportunity</FormulateInput>\r\n                  </a></li>\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addQuote\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Title</td>\r\n              <td>\r\n                <FormulateInput v-model=\"name\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Opportunity</td>\r\n              <td>\r\n                <FormulateInput v-model=\"opportunity\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Valid Until</td>\r\n              <td>\r\n                <FormulateInput v-model=\"valid_until\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Quote Stage</td>\r\n              <td>\r\n                <FormulateInput v-model=\"quote_stage\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Assigned To</td>\r\n              <td>\r\n                <FormulateInput v-model=\"assigned_to\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Invoice Status</td>\r\n              <td>\r\n                <FormulateInput v-model=\"invoice_status\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Payment Terms</td>\r\n              <td>\r\n                <FormulateInput v-model=\"payment_terms\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Approval Status</td>\r\n              <td>\r\n                <FormulateInput v-model=\"approval_status\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Approval Issues:</td>\r\n              <td>\r\n                <FormulateInput v-model=\"approval_issues\" type=\"textarea\" />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Address Information\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table row\">\r\n                  <tbody>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Account</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"account\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Contact</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"contact\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        </tbody>\r\n                        <tbody class=\"col\">\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Billing Address</td>\r\n                          <td></td>\r\n                          </tr>\r\n                          <tr> \r\n                          <td style=\"text-align: right;\">Street Address</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"billing_street\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">City</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"billing_city\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">State/Region</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"billing_state\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Postal Code</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"billing_postal\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Country</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"billing_country\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                  </tbody>\r\n                  <tbody class=\"col\">\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Shipping Address</td>\r\n                          <td></td>\r\n                          </tr>\r\n                          <tr> \r\n                          <td style=\"text-align: right;\">Street Address</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"shipping_street\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">City</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"shipping_city\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">State/Region</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"shipping_state\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Postal Code</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"shipping_postal\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style=\"text-align: right;\">Country</td>\r\n                          <td>\r\n                            <FormulateInput v-model=\"shipping_country\" type=\"text\" />\r\n                          </td>\r\n                        </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingFive\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n              Line Items\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <tbody>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Currency</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"currency\" :options=\"{us: 'US Dollar:: $'}\" type=\"select\" />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Total:</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"total\" type=\"text\" label=\"0.00\"></FormulateInput>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Discount:</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"discount\" type=\"text\" label=\"0.00\"></FormulateInput>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Subtotal:</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"subtotal\" type=\"text\" label=\"0.00\"></FormulateInput>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Shipping:</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"shipping\" type=\"text\" label=\"0.00\"></FormulateInput>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Shipping Tax:</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"shipping_tax\" type=\"text\" label=\"0.00\"></FormulateInput>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align: right;\">Grand Total:</td>\r\n                  <td>\r\n                    <FormulateInput v-model=\"grand_total\" type=\"text\" label=\"0.00\"></FormulateInput>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gql from \"graphql-tag\";\r\n\r\n  import {\r\n    quotes\r\n  } from \"~/apollo/queries/sales/quotes\";\r\n  import categories from '~/apollo/queries/shop/categories'\r\n/* eslint-disable camelcase */\r\n\r\n  const ADD_QUOTES = gql `\r\n    mutation ($account: String!, $contact: String!, $name: String!, $grand_total: String!, $categories: String!, $quote_stage: String!, $valid_until: String!, $approval_issues: String!, $approval_status: String!, $assigned_to: String!, $billing_city: String!, $billing_country: String!, $billing_postal: String!, $billing_state: String!, $billing_street: String!, $contact: String!, $created_at: String!, $currency: String!, $cust_id: String!, $customers: String!, $discount: String!, $invoice_status: String!, $line_item_discount: String!, $line_item_group_total: String!, $line_item_name: String!, $name: String!, $line_item_total: String!, $line_item_tax: String!, $line_item_subtotal: String!, $prod_id: String!, $payment_terms: String!, $order_id: String!, $tax: String!, $subtotal: String!, $shipping_tax: String!, $shipping_street: String!, $shipping_state: String!, $shipping_postal: String!, $shipping_country: String!, $shipping_city: String!, $shipping: String!, $quote_stage: String!, $total: String!, $opportunity: String){\r\n    insert_quotes(objects: {account: $account, contact: $contact, name: $name, grand_total: $grand_total, categories: $categories, quote_stage: $quote_stage, valid_until: $valid_until, approval_issues: $approval_issues, approval_status: $approval_status, assigned_to: $assigned_to, billing_city: $billing_city, billing_country: $billing_country, billing_postal: $billing_postal, billing_state: $billing_state, billing_street: $billing_street, contact: $contact, created_at: $created_at, currency: $currency, cust_id: $cust_id, customers: $customers, discount: $discount, invoice_status: $invoice_status, line_item_discount: $line_item_discount, line_item_group_total: $line_item_group_total, line_item_name: $line_item_name, line_item_total: $line_item_total, line_item_tax: $line_item_tax, line_item_subtotal: $line_item_subtotal, prod_id: $prod_id, payment_terms: $payment_terms, order_id: $order_id, tax: $tax, subtotal: $subtotal, shipping_tax: $shipping_tax, shipping_street: $shipping_street, shipping_state: $shipping_state, shipping_postal: $shipping_postal, shipping_country: $shipping_country, shipping_city: $shipping_city, shipping: $shipping, total: $total, opportunity: $opportunity}) {\r\n        affected_rows\r\n        returning {\r\n            account\r\n            approval_issues\r\n            approval_status\r\n            assigned_to\r\n            billing_city\r\n            billing_country\r\n            billing_postal\r\n            billing_state\r\n            billing_street\r\n            categories\r\n            contact\r\n            created_at\r\n            currency\r\n            cust_id\r\n            customers\r\n            discount\r\n            grand_total\r\n            id\r\n            opportunity\r\n            invoice_status\r\n            line_item_discount\r\n            line_item_group_total\r\n            line_item_name\r\n            name\r\n            line_item_total\r\n            line_item_tax\r\n            line_item_subtotal\r\n            prod_id\r\n            payment_terms\r\n            order_id\r\n            tax\r\n            subtotal\r\n            shipping_tax\r\n            shipping_street\r\n            shipping_state\r\n            shipping_postal\r\n            shipping_country\r\n            shipping_city\r\n            shipping\r\n            quote_stage\r\n            total\r\n            valid_until\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        categories: [],\r\n        account: \" \",\r\n        name: \" \",\r\n        grand_total: \" \",\r\n        quote_stage: \" \",\r\n        valid_until: \" \",\r\n        approval_issues: \" \",\r\n        approval_status: \" \",\r\n        assigned_to: \" \",\r\n        billing_city: \" \",\r\n        billing_country: \" \",\r\n        billing_postal: \" \",\r\n        billing_state: \" \",\r\n        billing_street: \" \",\r\n        contact: \" \",\r\n        opportunity: \" \",\r\n        created_at: \" \",\r\n        currency: \" \",\r\n        cust_id: \" \",\r\n        customers: \" \",\r\n        discount: \" \",\r\n        invoice_status: \" \",\r\n        line_item_discount: \" \",\r\n        line_item_group_total: \" \",\r\n        line_item_name: \" \",\r\n        line_item_total: \" \",\r\n        line_item_tax: \" \",\r\n        line_item_subtotal: \" \",\r\n        prod_id: \" \",\r\n        payment_terms: \" \",\r\n        order_id: \" \",\r\n        tax: \" \",\r\n        subtotal: \" \",\r\n        shipping_tax: \" \",\r\n        shipping_street: \" \",\r\n        shipping_state: \" \",\r\n        shipping_postal: \" \",\r\n        shipping_country: \" \",\r\n        shipping_city: \" \",\r\n        shipping: \" \",\r\n        total: \" \",\r\n      }\r\n    },\r\n    methods: {\r\n      async addQuote() {\r\n        const name = this.name;\r\n        const grand_total = this.grand_total;\r\n        const categories = this.categories;\r\n        const quote_stage = this.quote_stage;\r\n        const valid_until = this.valid_until;\r\n        const approval_issues = this.approval_issues;\r\n        const approval_status = this.approval_status;\r\n        const assigned_to = this.assigned_to;\r\n        const billing_city = this.billing_city;\r\n        const billing_country = this.billing_country;\r\n        const billing_postal = this.billing_postal;\r\n        const billing_state = this.billing_state;\r\n        const billing_street = this.billing_street;\r\n        const account = this.account;\r\n        const contact = this.contact;\r\n        const created_at = this.created_at;\r\n        const currency = this.currency;\r\n        const cust_id = this.cust_id;\r\n        const customers = this.customers;\r\n        const discount = this.discount;\r\n        const opportunity = this.opportunity;\r\n        const invoice_status = this.invoice_status;\r\n        const line_item_discount = this.line_item_discount;\r\n        const line_item_group_total = this.line_item_group_total;\r\n        const line_item_name = this.line_item_name;\r\n        const line_item_total = this.line_item_total;\r\n        const line_item_tax = this.line_item_tax;\r\n        const line_item_subtotal = this.line_item_subtotal;\r\n        const prod_id = this.prod_id;\r\n        const payment_terms = this.payment_terms;\r\n        const order_id = this.order_id;\r\n        const tax = this.tax;\r\n        const subtotal = this.subtotal;\r\n        const shipping_tax = this.shipping_tax;\r\n        const shipping_street = this.shipping_street;\r\n        const shipping_state = this.shipping_state;\r\n        const shipping_postal = this.shipping_postal;\r\n        const shipping_country = this.shipping_country;\r\n        const shipping_city = this.shipping_city;\r\n        const shipping = this.shipping;\r\n        const total = this.total;\r\n\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_QUOTES,\r\n          variables: {\r\n            name,\r\n            opportunity,\r\n            grand_total,\r\n            categories,\r\n            quote_stage,\r\n            valid_until,\r\n            approval_issues,\r\n            approval_status,\r\n            assigned_to,\r\n            billing_city,\r\n            billing_country,\r\n            billing_postal,\r\n            billing_state,\r\n            billing_street,\r\n            contact,\r\n            created_at,\r\n            account,\r\n            currency,\r\n            cust_id,\r\n            customers,\r\n            discount,\r\n            invoice_status,\r\n            line_item_discount,\r\n            line_item_group_total,\r\n            line_item_name,\r\n            line_item_total,\r\n            line_item_tax,\r\n            line_item_subtotal,\r\n            prod_id,\r\n            payment_terms,\r\n            order_id,\r\n            tax,\r\n            subtotal,\r\n            shipping_tax,\r\n            shipping_street,\r\n            shipping_state,\r\n            shipping_postal,\r\n            shipping_country,\r\n            shipping_city,\r\n            shipping,\r\n            total,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertCategories\r\n            }\r\n          }) => {\r\n            // Read data from cache for this query\r\n            try {\r\n              const insertedCategory = insertCategories.returning;\r\n              console.log(insertedCategory)\r\n              cache.writeQuery({\r\n                query: quotes\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../sales/quotes'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.name = ' ';\r\n        this.grand_total = ' ';\r\n        this.categories = ' ';\r\n        this.quote_stage = ' ';\r\n        this.valid_until = ' ';\r\n        this.approval_issues = ' ';\r\n        this.approval_status = ' ';\r\n        this.assigned_to = ' ';\r\n        this.billing_city = ' ';\r\n        this.billing_country = ' ';\r\n        this.billing_postal = ' ';\r\n        this.billing_state = ' ';\r\n        this.billing_street = ' ';\r\n        this.categories = ' ';\r\n        this.contact = ' ';\r\n        this.account = ' ';\r\n        this.created_at = ' ';\r\n        this.currency = ' ';\r\n        this.cust_id = ' ';\r\n        this.customers = ' ';\r\n        this.discount = ' ';\r\n        this.grand_total = ' ';\r\n        this.invoice_status = ' ';\r\n        this.line_item_discount = ' ';\r\n        this.line_item_group_total = ' ';\r\n        this.line_item_name = ' ';\r\n        this.opportunity = ' ';\r\n        this.line_item_total = ' ';\r\n        this.line_item_tax = ' ';\r\n        this.line_item_subtotal = ' ';\r\n        this.prod_id = ' ';\r\n        this.payment_terms = ' ';\r\n        this.order_id = ' ';\r\n        this.tax = ' ';\r\n        this.subtotal = ' ';\r\n        this.shipping_tax = ' ';\r\n        this.shipping_street = ' ';\r\n        this.shipping_state = ' ';\r\n        this.shipping_postal = ' ';\r\n        this.shipping_country = ' ';\r\n        this.shipping_city = ' ';\r\n        this.shipping = ' ';\r\n        this.quote_stage = ' ';\r\n        this.total = ' ';\r\n        this.valid_until = ' ';\r\n      },\r\n\r\n    },\r\n    apollo: {\r\n      categories: {\r\n        prefetch: true,\r\n        query: categories\r\n      }\r\n    },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n      title: 'Add New Quote'\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n</style>\r\n",["945","946","947","948"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\quotes\\_id.vue",["949","950"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-opportunity.vue",["951","952","953","954"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" enctype=\"multipart/form-data\"  @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"opportunityAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-customer\"><FormulateInput type=\"button\">Add New Customer</FormulateInput></a></li>\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addOpportunity\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Currency</td>\r\n                        <td><FormulateInput v-model=\"currency\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Opportunity Amount</td>\r\n                        <td><FormulateInput v-model=\"amount\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Sales Stage</td>\r\n                        <td><FormulateInput v-model=\"sales_stage\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Probability (%)</td>\r\n                        <td><FormulateInput v-model=\"probability\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Next Step</td>\r\n                        <td><FormulateInput v-model=\"next_step\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput v-model=\"description\" type=\"textarea\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Expected Close Date</td>\r\n                        <td><FormulateInput v-model=\"expected_close_date\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Type</td>\r\n                        <td><FormulateInput v-model=\"type\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Lead Source</td>\r\n                        <td><FormulateInput v-model=\"lead_source\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Campaign</td>\r\n                        <td><FormulateInput v-model=\"campaign\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Assigned To</td>\r\n                        <td><FormulateInput v-model=\"assigned_to\" type=\"text\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n/* eslint-disable camelcase */\r\n\r\nimport { opportunities } from \"~/apollo/queries/customers/opportunities\";\r\nimport categories from '~/apollo/queries/shop/categories'\r\n\r\nconst ADD_OPPORTUNITIES = gql `\r\n    mutation ($name: String!, $next_step: String!, $name: String!, $grand_total: String!, $categories: String!, $quote_stage: String!, $valid_until: String!, $lead_source: String!, $expected_close_date: String!, $assigned_to: String!, $description: String!, $currency: String!, $campaign: String!, $amount: String!, $account_name: String!, $next_step: String!, $created_at: String!, $probability: String!, $sales_stage: String!, $type: String!){\r\n    insert_opportunities(objects: {name: $name, next_step: $next_step, name: $name, grand_total: $grand_total, categories: $categories, quote_stage: $quote_stage, valid_until: $valid_until, lead_source: $lead_source, expected_close_date: $expected_close_date, assigned_to: $assigned_to, description: $description, currency: $currency, campaign: $campaign, amount: $amount, account_name: $account_name, created_at: $created_at, probability: $probability, sales_stage: $sales_stage,type: $type,}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            lead_source\r\n            expected_close_date\r\n            assigned_to\r\n            description\r\n            currency\r\n            campaign\r\n            amount\r\n            account_name\r\n            categories\r\n            next_step\r\n            created_at\r\n            currency\r\n            probability\r\n            sales_stage\r\n            discount\r\n            grand_total\r\n            id\r\n            opportunity\r\n            type\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        categories: [],\r\n        name: \" \",\r\n        grand_total: \" \",\r\n        quote_stage: \" \",\r\n        valid_until: \" \",\r\n        lead_source: \" \",\r\n        expected_close_date: \" \",\r\n        assigned_to: \" \",\r\n        description: \" \",\r\n        currency: \" \",\r\n        campaign: \" \",\r\n        amount: \" \",\r\n        account_name: \" \",\r\n        next_step: \" \",\r\n        opportunity: \" \",\r\n        created_at: \" \",\r\n        probability: \" \",\r\n        sales_stage: \" \",\r\n        discount: \" \",\r\n        type: \" \",\r\n      }\r\n    },\r\n    methods: {\r\n      async addOpportunity() {\r\n        const name = this.name;\r\n        const categories = this.categories;\r\n        const lead_source = this.lead_source;\r\n        const expected_close_date = this.expected_close_date;\r\n        const assigned_to = this.assigned_to;\r\n        const description = this.description;\r\n        const currency = this.currency;\r\n        const campaign = this.campaign;\r\n        const amount = this.amount;\r\n        const account_name = this.account_name;\r\n        const next_step = this.next_step;\r\n        const created_at = this.created_at;\r\n        const probability = this.probability;\r\n        const sales_stage = this.sales_stage;\r\n        const discount = this.discount;\r\n        const opportunity = this.opportunity;\r\n        const type = this.type;\r\n\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_OPPORTUNITIES,\r\n          variables: {\r\n            name,\r\n            opportunity,\r\n            categories,\r\n            lead_source,\r\n            expected_close_date,\r\n            assigned_to,\r\n            description,\r\n            currency,\r\n            campaign,\r\n            amount,\r\n            account_name,\r\n            next_step,\r\n            created_at,\r\n            probability,\r\n            sales_stage,\r\n            discount,\r\n            type,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertCategories\r\n            }\r\n          }) => {\r\n            // Read data from cache for this query\r\n            try {\r\n              const insertedCategory = insertCategories.returning;\r\n              console.log(insertedCategory)\r\n              cache.writeQuery({\r\n                query: opportunities\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../customers/opportunities'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.name = ' ';\r\n        this.grand_total = ' ';\r\n        this.categories = ' ';\r\n        this.quote_stage = ' ';\r\n        this.valid_until = ' ';\r\n        this.lead_source = ' ';\r\n        this.expected_close_date = ' ';\r\n        this.assigned_to = ' ';\r\n        this.description = ' ';\r\n        this.currency = ' ';\r\n        this.campaign = ' ';\r\n        this.amount = ' ';\r\n        this.account_name = ' ';\r\n        this.categories = ' ';\r\n        this.next_step = ' ';\r\n        this.name = ' ';\r\n        this.created_at = ' ';\r\n        this.currency = ' ';\r\n        this.probability = ' ';\r\n        this.sales_stage = ' ';\r\n        this.type = ' ';\r\n      },\r\n\r\n    },\r\n    apollo: {\r\n      categories: {\r\n        prefetch: true,\r\n        query: categories\r\n      }\r\n    },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Opportunity'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-case.vue",["955","956","957","958"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" enctype=\"multipart/form-data\"  @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"caseAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCase\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State</td>\r\n                        <td><FormulateInput v-model=\"state\" type=\"text\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Type</td>\r\n                        <td><FormulateInput v-model=\"type\" type=\"text\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Subject</td>\r\n                        <td><FormulateInput v-model=\"subject\" type=\"text\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput v-model=\"description\" type=\"textarea\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Resolution</td>\r\n                        <td><FormulateInput v-model=\"resolution\" type=\"textarea\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Assigned To</td>\r\n                        <td><FormulateInput v-model=\"assigned_to\" type=\"text\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Priority</td>\r\n                        <td><FormulateInput v-model=\"priority\" type=\"text\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Status</td>\r\n                        <td><FormulateInput v-model=\"status\" type=\"text\"  /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Account Name</td>\r\n                        <td><FormulateInput v-model=\"account_name\" type=\"text\"  /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n/* eslint-disable camelcase */\r\nimport { cases } from \"~/apollo/queries/reports/cases\";\r\n\r\nconst ADD_CASES = gql`\r\n    mutation ($status:String!,$state:String,$assigned_to:String,$description:String,$resolution:String!,$subject:String!,$type:String!,$priority:String!,$account_name:String){\r\n    insert_cases(objects: {status: $status, state: $state, assigned_to: $assigned_to, description: $description, resolution: $resolution, subject: $subject, type: $type, priority: $priority}) {\r\n        affected_rows\r\n        returning {\r\n            description\r\n            assigned_to\r\n            account_name\r\n            priority\r\n            resolution\r\n            state\r\n            status\r\n            subject\r\n            type\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        assigned_to: [],\r\n        status: \" \",\r\n        state: \" \",\r\n        description: \" \",\r\n        resolution: \" \",\r\n        account_name: \" \",\r\n        type: \" \",\r\n        priority: \" \",\r\n        subject: \" \",\r\n      }\r\n  },\r\n  methods: {\r\n      async addCase() {\r\n            const status = this.status;\r\n            const description = this.description;\r\n            const state = this.state;\r\n            const assigned_to = this.assigned_to;\r\n            const priority = this.priority;\r\n            const account_name = this.account_name;\r\n            const subject = this.subject;\r\n            const type = this.type;\r\n            const resolution = this.resolution;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CASES,\r\n                variables: {\r\n                    description,\r\n                    assigned_to,\r\n                    account_name,\r\n                    priority,\r\n                    resolution,\r\n                    state,\r\n                    status,\r\n                    subject,\r\n                    type,\r\n                },\r\n        update: (cache, { data: { insertCases }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCase = insertCases.returning;\r\n                            console.log(insertedCase)\r\n                            cache.writeQuery({\r\n                                query: cases\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../reports/cases'})\r\n                }).catch(err => console.log(err));\r\n                this.status = ' ';\r\n                this.description = ' ';\r\n                this.state = ' ';\r\n                this.assigned_to = ' ';\r\n                this.priority = ' ';\r\n                this.account_name = ' ';\r\n                this.subject = ' ';\r\n                this.type = ' ';\r\n                this.resolution = ' ';\r\n            },\r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Case'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\opportunities\\_id.vue",["959","960"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\cases\\_id.vue",["961","962"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-contract.vue",["963","964","965","966"],"\r\n<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" enctype=\"multipart/form-data\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"contractAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addContract\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Title</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_title\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Value</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_value\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Start Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"start_date\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">End Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"end_date\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Renewal Reminder Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"renewal_reminder\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Customer Signed Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"company_signed_date\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Company Signed Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"company_signed_date\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Description</td>\r\n              <td>\r\n                <FormulateInput v-model=\"description\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Manager</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_manager\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Status</td>\r\n              <td>\r\n                <FormulateInput v-model=\"status\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Account</td>\r\n              <td>\r\n                <FormulateInput v-model=\"account\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contact</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contact\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Opportunity</td>\r\n              <td>\r\n                <FormulateInput v-model=\"opportunity\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Type</td>\r\n              <td>\r\n                <FormulateInput v-model=\"type\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Line Items\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Currency</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"currency\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Total</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"total\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Discount</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"discount\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Subtotal</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"subtotal\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Shipping</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"shipping\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Shipping Tax</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"shipping_tax\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"tax\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Grand Total</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"grand_total\" type=\"text\" required />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gql from \"graphql-tag\";\r\n\r\n  import {\r\n    contracts\r\n  } from \"~/apollo/queries/marketing/contracts\";\r\n/* eslint-disable camelcase */\r\n  const ADD_CONTRACTS = gql `\r\n    mutation ($account: String!, $company_signed_date: String!, $contact: String!, $contract_manager: String!, $contract_title: String!, $contract_type: String!, $contract_value: String!, $currency: String!, $customer_signed_date: String!, $description: String!, $discount: String!, $end_date: String!, $grand_total: String!, $line_items: String!, $opportunity: String!, $renewal_reminder: String!, $shipping: String!, $shipping_tax: String!, $start_date: String!, $status: String!, $total: String!, $tax: String!, $subtotal: String){\r\n    insert_contracts(objects: {account: $account, company_signed_date: $company_signed_date, contact: $contact, contract_manager: $contract_manager, contract_title: $contract_title, contract_type: $contract_type, contract_value: $contract_value, currency: $currency, customer_signed_date: $customer_signed_date, description: $description, discount: $discount, end_date: $end_date, grand_total: $grand_total, line_items: $line_items, opportunity: $opportunity, renewal_reminder: $renewal_reminder, shipping: $shipping, shipping_tax: $shipping_tax, start_date: $start_date, status: $status, total: $total, tax: $tax, subtotal: $subtotal}) {\r\n        affected_rows\r\n        returning {\r\n            account\r\n            company_signed_date\r\n            contact\r\n            contract_manager\r\n            contract_title\r\n            contract_type\r\n            contract_value\r\n            currency\r\n            customer_signed_date\r\n            description\r\n            discount\r\n            end_date\r\n            grand_total\r\n            line_items\r\n            opportunity\r\n            renewal_reminder\r\n            shipping\r\n            shipping_tax\r\n            start_date\r\n            status\r\n            total\r\n            tax\r\n            subtotal\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        account:\" \",\r\n        company_signed_date:\" \",\r\n        contact:\" \",\r\n        contract_manager:\" \",\r\n        contract_title:\" \",\r\n        contract_type:\" \",\r\n        contract_value:\" \",\r\n        currency:\" \",\r\n        customer_signed_date:\" \",\r\n        description:\" \",\r\n        discount:\" \",\r\n        end_date:\" \",\r\n        grand_total:\" \",\r\n        line_items:\" \",\r\n        opportunity:\" \",\r\n        renewal_reminder:\" \",\r\n        shipping:\" \",\r\n        shipping_tax:\" \",\r\n        start_date:\" \",\r\n        status:\" \",\r\n        total:\" \",\r\n        tax:\" \",\r\n        subtotal:\" \",\r\n      }\r\n    },\r\n    head: {\r\n      title: 'Add New Contract'\r\n    },\r\n    methods: {\r\n      async addContract() {\r\n        const account = this.account;\r\n        const company_signed_date = this.company_signed_date;\r\n        const contact = this.contact;\r\n        const contract_manager = this.contract_manager;\r\n        const contract_title = this.contract_title;\r\n        const contract_type = this.contract_type;\r\n        const contract_value = this.contract_value;\r\n        const currency = this.currency;\r\n        const customer_signed_date = this.customer_signed_date;\r\n        const description = this.description;\r\n        const discount = this.discount;\r\n        const end_date = this.end_date;\r\n        const grand_total = this.grand_total;\r\n        const line_items = this.line_items;\r\n        const opportunity = this.opportunity;\r\n        const renewal_reminder = this.renewal_reminder;\r\n        const shipping = this.shipping;\r\n        const shipping_tax = this.shipping_tax;\r\n        const start_date = this.start_date;\r\n        const status = this.status;\r\n        const total = this.total;\r\n        const tax = this.tax;\r\n        const subtotal = this.subtotal;\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_CONTRACTS,\r\n          variables: {\r\n            account,\r\n            company_signed_date,\r\n            contact,\r\n            contract_manager,\r\n            contract_title,\r\n            contract_type,\r\n            contract_value,\r\n            currency,\r\n            customer_signed_date,\r\n            description,\r\n            discount,\r\n            end_date,\r\n            grand_total,\r\n            line_items,\r\n            opportunity,\r\n            renewal_reminder,\r\n            shipping,\r\n            shipping_tax,\r\n            start_date,\r\n            status,\r\n            total,\r\n            tax,\r\n            subtotal,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertContracts\r\n            }\r\n          }) => {\r\n            try {\r\n              const insertedContract = insertContracts.returning;\r\n              console.log(insertedContract)\r\n              cache.writeQuery({\r\n                query: contracts\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../marketing/contracts'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.account = ' ';\r\n        this.company_signed_date = ' ';\r\n        this.contact = ' ';\r\n        this.contract_manager = ' ';\r\n        this.contract_title = ' ';\r\n        this.contract_type = ' ';\r\n        this.contract_value = ' ';\r\n        this.currency = ' ';\r\n        this.customer_signed_date = ' ';\r\n        this.description = ' ';\r\n        this.discount = ' ';\r\n        this.end_date = ' ';\r\n        this.grand_total = ' ';\r\n        this.line_items = ' ';\r\n        this.opportunity = ' ';\r\n        this.renewal_reminder = ' ';\r\n        this.shipping = ' ';\r\n        this.shipping_tax = ' ';\r\n        this.start_date = ' ';\r\n        this.status = ' ';\r\n        this.total = ' ';\r\n        this.tax = ' ';\r\n        this.subtotal = ' ';\r\n      },\r\n\r\n    },\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Footer.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\contracts\\_id.vue",["967","968"],"\r\n<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" enctype=\"multipart/form-data\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"contractAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addContract\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Title</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_title\" type=\"text\" />{{ contract.contract_title }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Value</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_value\" type=\"text\" />{{ contract.contract_value }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Start Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"start_date\" type=\"text\" />{{ contract.start_date }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">End Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"end_date\" type=\"text\" />{{ contract.end_date }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Renewal Reminder Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"renewal_reminder\" type=\"text\" />{{ contract.renewal_reminder }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Customer Signed Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"customer_signed_date\" type=\"text\" />{{ contract.customer_signed_date }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Company Signed Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"company_signed_date\" type=\"text\" />{{ contract.company_signed_date }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Description</td>\r\n              <td>\r\n                <FormulateInput v-model=\"description\" type=\"text\" />{{ contract.description }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Manager</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_manager\" type=\"text\" />{{ contract.contract_manager }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Status</td>\r\n              <td>\r\n                <FormulateInput v-model=\"status\" type=\"text\" />{{ contract.status }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Account</td>\r\n              <td>\r\n                <FormulateInput v-model=\"account\" type=\"text\" />{{ contract.account }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contact</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contact\" type=\"text\" />{{ contract.contact }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Opportunity</td>\r\n              <td>\r\n                <FormulateInput v-model=\"opportunity\" type=\"text\" />{{ contract.opportunity }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Contract Type</td>\r\n              <td>\r\n                <FormulateInput v-model=\"contract_type\" type=\"text\" />{{ contract.contract_type }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Line Items\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Currency</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"currency\" type=\"text\" />{{ contract.currency }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Total</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"total\" type=\"text\" />{{ contract.total }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Discount</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"discount\" type=\"text\" />{{ contract.discount }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Subtotal</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"subtotal\" type=\"text\" />{{ contract.subtotal }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Shipping</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"shipping\" type=\"text\" />{{ contract.shipping }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Shipping Tax</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"shipping_tax\" type=\"text\" />{{ contract.shipping_tax }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"tax\" type=\"text\" />{{ contract.tax }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Grand Total</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"grand_total\" type=\"text\" />{{ contract.grand_total }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport contracts from '~/apollo/mutations/marketing/contracts'\r\nimport allContracts from '~/apollo/queries/marketing/contracts'\r\n\r\nconst DELETE_CONTRACT = gql `\r\n  mutation delete_contracts($id: Int!){\r\n  delete_contracts(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_CONTRACT = gql `\r\n  mutation update_contracts($id: Int!){\r\n  update_contracts(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Contract'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteContract(contract){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_CONTRACT,\r\n        variables: {\r\n          id: contract.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allContracts\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/marketing/contracts'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateContract(contract){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_CONTRACT,\r\n        variables: {\r\n          id: contract.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allContracts\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    contracts: {\r\n      query: contracts,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-lead.vue",["969","970","971","972"],"\r\n<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" enctype=\"multipart/form-data\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"contractAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addLead\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Prefix</td>\r\n              <td>\r\n                <FormulateInput v-model=\"prefix\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">First Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"first_name\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Last Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"last_name\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Job Title</td>\r\n              <td>\r\n                <FormulateInput v-model=\"job_title\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Department</td>\r\n              <td>\r\n                <FormulateInput v-model=\"department\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Account Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"account_name\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Office Phone</td>\r\n              <td>\r\n                <FormulateInput v-model=\"office_phone\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Mobile</td>\r\n              <td>\r\n                <FormulateInput v-model=\"mobile\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Fax</td>\r\n              <td>\r\n                <FormulateInput v-model=\"fax\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Website</td>\r\n              <td>\r\n                <FormulateInput v-model=\"website\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <div class=\"col\">\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address Street</td>\r\n              <td>\r\n                <FormulateInput v-model=\"address\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address Postalcode</td>\r\n              <td>\r\n                <FormulateInput v-model=\"postalcode\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address City</td>\r\n              <td>\r\n                <FormulateInput v-model=\"city\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address State</td>\r\n              <td>\r\n                <FormulateInput v-model=\"state\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address Country</td>\r\n              <td>\r\n                <FormulateInput v-model=\"state\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            </div>\r\n            <div class=\"col\">\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address Street</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_address\" type=\"text\" label=\"Other Address\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address Postalcode</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_postalcode\" type=\"text\" label=\"Other Address Postalcode\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address City</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_city\" type=\"text\" label=\"Other Address City\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address State</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_state\" type=\"text\" label=\"Other Address State\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address Country</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_country\" type=\"text\" label=\"Other Address Country\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Email Address</td>\r\n              <td>\r\n                <FormulateInput v-model=\"email\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Description</td>\r\n              <td>\r\n                <FormulateInput v-model=\"description\" type=\"textarea\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Assigned To</td>\r\n              <td>\r\n                <FormulateInput v-model=\"assigned_to\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            </div>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              More Information\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Status</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"status\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Status Description</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"status_description\" type=\"textarea\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Opportunity Amount</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"opportunity_amount\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Campaign</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"campaign\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Lead Source</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"lead_source\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Lead Source Description</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"lead_source_description\" type=\"textarea\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Referred By</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"referred_by\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gql from \"graphql-tag\";\r\n\r\n  import {\r\n    leads\r\n  } from \"~/apollo/queries/customers/leads\";\r\n/* eslint-disable camelcase */\r\n  const ADD_LEADS = gql `\r\n    mutation ($prefix: String!, $account_name: String!, $address: String!, $address: String!, $city: String!, $country: String!, $postalcode: String!, $campaign: String!, $customer_name: String!, $description: String!, $department: String!, $email: String!, $fax: String!, $first_name: String!, $last_name: String!, $job_title: String!, $lead_source: String!, $lead_source_description: String!, $mobile: String!, $status: String!, $status_description: String!, $office_phone: String!, $opportunity_amount: String!, $state: String!, $website: String!, $assigned_to: String){\r\n    insert_leads(objects: {prefix: $prefix, account_name: $account_name, address: $address, address: $address, city: $city, country: $country, postalcode: $postalcode, campaign: $campaign, customer_name: $customer_name, description: $description, department: $department, email: $email, fax: $fax, first_name: $first_name, last_name: $last_name, job_title: $job_title, lead_source: $lead_source, lead_source_description: $lead_source_description, mobile: $mobile, status: $status, status_description: $status_description, office_phone: $office_phone, opportunity_amount: $opportunity_amount, state: $state, website: $website, assigned_to: $assigned_to}) {\r\n        affected_rows\r\n        returning {\r\n            prefix\r\n            account_name\r\n            address\r\n            city\r\n            country\r\n            postalcode\r\n            campaign\r\n            customer_name\r\n            description\r\n            department\r\n            email\r\n            state\r\n            fax\r\n            first_name\r\n            last_name\r\n            job_title\r\n            lead_source\r\n            lead_source_description\r\n            mobile\r\n            status\r\n            status_description\r\n            office_phone\r\n            opportunity_amount\r\n            referred_by\r\n            alt_address\r\n            alt_city\r\n            alt_country\r\n            alt_postalcode\r\n            alt_state\r\n            website\r\n            assigned_to\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        prefix:\" \",\r\n        account_name:\" \",\r\n        address:\" \",\r\n        city:\" \",\r\n        country:\" \",\r\n        postalcode:\" \",\r\n        campaign:\" \",\r\n        customer_name:\" \",\r\n        description:\" \",\r\n        department:\" \",\r\n        email:\" \",\r\n        fax:\" \",\r\n        first_name:\" \",\r\n        last_name:\" \",\r\n        job_title:\" \",\r\n        lead_source:\" \",\r\n        lead_source_description:\" \",\r\n        mobile:\" \",\r\n        state: \" \",\r\n        status:\" \",\r\n        status_description:\" \",\r\n        office_phone:\" \",\r\n        opportunity_amount:\" \",\r\n        referred_by:\" \",\r\n        alt_address:\" \",\r\n        alt_city:\" \",\r\n        alt_country:\" \",\r\n        alt_postalcode:\" \",\r\n        alt_state:\" \",\r\n        assigned_to:\" \",\r\n        website:\" \",\r\n      }\r\n    },\r\n    head: {\r\n      title: 'Add New Lead'\r\n    },\r\n    methods: {\r\n      async addLead() {\r\n        const prefix = this.prefix;\r\n        const account_name = this.account_name;\r\n        const address = this.address;\r\n        const alt_address = this.alt_address;\r\n        const city = this.city;\r\n        const country = this.country;\r\n        const postalcode = this.postalcode;\r\n        const campaign = this.campaign;\r\n        const customer_name = this.customer_name;\r\n        const description = this.description;\r\n        const department = this.department;\r\n        const email = this.email;\r\n        const fax = this.fax;\r\n        const first_name = this.first_name;\r\n        const last_name = this.last_name;\r\n        const job_title = this.job_title;\r\n        const lead_source = this.lead_source;\r\n        const lead_source_description = this.lead_source_description;\r\n        const mobile = this.mobile;\r\n        const status = this.status;\r\n        const status_description = this.status_description;\r\n        const office_phone = this.office_phone;\r\n        const opportunity_amount = this.opportunity_amount;\r\n        const referred_by = this.referred_by;\r\n        const alt_city = this.alt_city;\r\n        const alt_country = this.alt_country;\r\n        const alt_postalcode = this.alt_postalcode;\r\n        const state = this.state;\r\n        const alt_state = this.alt_state;\r\n        const website = this.website;\r\n        const assigned_to = this.assigned_to;\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_LEADS,\r\n          variables: {\r\n            prefix,\r\n            account_name,\r\n            address,\r\n            city,\r\n            country,\r\n            postalcode,\r\n            campaign,\r\n            customer_name,\r\n            description,\r\n            department,\r\n            email,\r\n            website,\r\n            assigned_to,\r\n            fax,\r\n            first_name,\r\n            last_name,\r\n            job_title,\r\n            lead_source,\r\n            lead_source_description,\r\n            mobile,\r\n            state,\r\n            status,\r\n            status_description,\r\n            office_phone,\r\n            opportunity_amount,\r\n            referred_by,\r\n            alt_address,\r\n            alt_city,\r\n            alt_country,\r\n            alt_postalcode,\r\n            alt_state,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertLeads\r\n            }\r\n          }) => {\r\n            try {\r\n              const insertedLead = insertLeads.returning;\r\n              console.log(insertedLead)\r\n              cache.writeQuery({\r\n                query: leads\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../customers/leads'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.prefix = ' ';\r\n        this.account_name = ' ';\r\n        this.address = ' ';\r\n        this.city = ' ';\r\n        this.country = ' ';\r\n        this.postalcode = ' ';\r\n        this.campaign = ' ';\r\n        this.customer_name = ' ';\r\n        this.description = ' ';\r\n        this.department = ' ';\r\n        this.email = ' ';\r\n        this.fax = ' ';\r\n        this.first_name = ' ';\r\n        this.last_name = ' ';\r\n        this.job_title = ' ';\r\n        this.lead_source = ' ';\r\n        this.lead_source_description = ' ';\r\n        this.mobile = ' ';\r\n        this.state = ' ';\r\n        this.status = ' ';\r\n        this.status_description = ' ';\r\n        this.office_phone = ' ';\r\n        this.opportunity_amount = ' ';\r\n        this.referred_by = ' ';\r\n        this.alt_address = ' ';\r\n        this.alt_city = ' ';\r\n        this.alt_country = ' ';\r\n        this.alt_postalcode = ' ';\r\n        this.alt_state = ' ';\r\n        this.website = ' ';\r\n        this.assigned_to = ' ';\r\n      },\r\n\r\n    },\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\leads\\_id.vue",["973","974"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-task.vue",["975","976","977","978"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" enctype=\"multipart/form-data\"  @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"taskAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addTask\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Subject</td>\r\n                        <td><FormulateInput v-model=\"subject\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Start Date</td>\r\n                        <td><FormulateInput v-model=\"start_date\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">End Date</td>\r\n                        <td><FormulateInput v-model=\"due_date\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Priority</td>\r\n                        <td><FormulateInput v-model=\"priority\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Status</td>\r\n                        <td><FormulateInput v-model=\"status\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Related To</td>\r\n                        <td><FormulateInput v-model=\"related_to\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Contact</td>\r\n                        <td><FormulateInput v-model=\"contact\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput v-model=\"description\" type=\"textarea\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Assigned To</td>\r\n                        <td><FormulateInput v-model=\"assigned_to\" type=\"textarea\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { tasks } from \"~/apollo/queries/customers/tasks\";\r\n/* eslint-disable camelcase */\r\n\r\nconst ADD_TASKS = gql`\r\n    mutation ($subject:String!,$status:String!,$due_date:String!,$description:String!,$assigned_to:String!,$priority:String!,$contact:String!,$start_date:String!,$related_to:String!){\r\n    insert_tasks(objects: {subject: $subject, status: $status, due_date: $due_date, description: $description, assigned_to: $assigned_to, priority: $priority, contact: $contact, start_date: $start_date, related_to: $related_to}) {\r\n        affected_rows\r\n        returning {\r\n            subject\r\n            status\r\n            due_date\r\n            description\r\n            assigned_to\r\n            priority\r\n            contact\r\n            start_date\r\n            related_to\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        subject: \" \",\r\n        status: \" \",\r\n        description: \" \",\r\n        assigned_to: \" \",\r\n        priority: \" \",\r\n        contact: \" \",\r\n        start_date: \" \",\r\n        related_to: \" \",\r\n      }\r\n  },\r\n    head: {\r\n        title: 'Add New Task'\r\n    },\r\n  methods: {\r\n      async addTask() {\r\n            const subject = this.subject;\r\n            const description = this.description;\r\n            const status = this.status;\r\n            const due_date = this.due_date;\r\n            const assigned_to = this.assigned_to;\r\n            const priority = this.priority;\r\n            const contact = this.contact;\r\n            const start_date = this.start_date;\r\n            const related_to = this.related_to;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_TASKS,\r\n                variables: {\r\n                    subject,\r\n                    status,\r\n                    due_date,\r\n                    description,\r\n                    assigned_to,\r\n                    priority,\r\n                    contact,\r\n                    start_date,\r\n                    related_to,\r\n                },\r\n        update: (cache, { data: { insertTasks }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTask = insertTasks.returning;\r\n                            console.log(insertedTask)\r\n                            cache.writeQuery({\r\n                                query: tasks\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/tasks'})\r\n                }).catch(err => console.log(err));\r\n                this.subject = ' ';\r\n                this.status = ' ';\r\n                this.due_date = ' ';\r\n                this.description = ' ';\r\n                this.assigned_to = ' ';\r\n                this.priority = ' ';\r\n                this.contact = ' ';\r\n                this.start_date = ' ';\r\n                this.related_to = ' ';\r\n            },\r\n            \r\n        }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\tasks\\_id.vue",["979","980"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" enctype=\"multipart/form-data\"  @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"taskAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addTask\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Subject</td>\r\n                        <td><FormulateInput v-model=\"subject\" type=\"text\" required />{{ tasks.subject }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Start Date</td>\r\n                        <td><FormulateInput v-model=\"start_date\" type=\"text\" />{{ tasks.start_date }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">End Date</td>\r\n                        <td><FormulateInput v-model=\"due_date\" type=\"text\" />{{ tasks.due_date }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Priority</td>\r\n                        <td><FormulateInput v-model=\"priority\" type=\"text\" />{{ tasks.priority }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Status</td>\r\n                        <td><FormulateInput v-model=\"status\" type=\"text\" />{{ tasks.status }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Related To</td>\r\n                        <td><FormulateInput v-model=\"related_to\" type=\"text\" />{{ tasks.related_to }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Contact</td>\r\n                        <td><FormulateInput v-model=\"contact\" type=\"text\" />{{ tasks.contact }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput v-model=\"description\" type=\"textarea\" />{{ tasks.description }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Assigned To</td>\r\n                        <td><FormulateInput v-model=\"assigned_to\" type=\"textarea\" />{{ tasks.assigned_to }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport tasks from '~/apollo/mutations/customers/tasks'\r\nimport allTasks from '~/apollo/queries/customers/tasks'\r\n\r\nconst DELETE_TASK = gql `\r\n  mutation delete_tasks($id: Int!){\r\n  delete_tasks(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_TASK = gql `\r\n  mutation update_tasks($id: Int!){\r\n  update_tasks(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Task'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteTask(task){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_TASK,\r\n        variables: {\r\n          id: task.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTasks\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../customers/tasks'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateTask(task){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_TASK,\r\n        variables: {\r\n          id: task.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTasks\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    tasks: {\r\n      query: tasks,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-meeting.vue",["981","982","983","984"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" enctype=\"multipart/form-data\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"meetingAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addMeeting\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Subject</td>\r\n              <td>\r\n                <FormulateInput v-model=\"subject\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Start Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"start_date\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">End Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"end_date\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Duration</td>\r\n              <td>\r\n                <FormulateInput v-model=\"duration\" type=\"datetime-local\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Status</td>\r\n              <td>\r\n                <FormulateInput v-model=\"status\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Related To</td>\r\n              <td>\r\n                <FormulateInput v-model=\"related_to\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Reminders</td>\r\n              <td>\r\n                <div class=\"form-wrapper\">\r\n                  <FormulateForm>\r\n                    <FormulateInput type=\"group\" name=\"reminders\" :repeatable=\"true\" label=\"Add Reminders\"\r\n                      add-label=\"+ Add Reminder\">\r\n                      <div class=\"reminder\">\r\n                        <FormulateInput v-model=\"reminders\" name=\"name\" type=\"text\" label=\"Reminder\" />\r\n                      </div>\r\n                    </FormulateInput>\r\n                  </FormulateForm>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Description</td>\r\n              <td>\r\n                <FormulateInput v-model=\"content\" type=\"textarea\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Assigned To</td>\r\n              <td>\r\n                <FormulateInput v-model=\"assigned_to\" type=\"textarea\" />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gql from \"graphql-tag\";\r\n\r\n  import {\r\n    meetings\r\n  } from \"~/apollo/queries/customers/meetings\";\r\n  /* eslint-disable camelcase */\r\n\r\n  const ADD_MEETINGS = gql `\r\n    mutation ($subject:String!,$status:String!,$end_date:String!,$content:String!,$assigned_to:String!,$duration:String!,$reminders:String!,$start_date:String!,$related_to:String!){\r\n    insert_meetings(objects: {subject: $subject, status: $status, end_date: $end_date, content: $content, assigned_to: $assigned_to, duration: $duration, reminders: $reminders, start_date: $start_date, related_to: $related_to}) {\r\n        affected_rows\r\n        returning {\r\n            subject\r\n            status\r\n            end_date\r\n            content\r\n            assigned_to\r\n            duration\r\n            reminders\r\n            start_date\r\n            related_to\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        subject: \" \",\r\n        status: \" \",\r\n        content: \" \",\r\n        assigned_to: \" \",\r\n        duration: \" \",\r\n        reminders: \" \",\r\n        start_date: \" \",\r\n        end_date: \" \",\r\n        related_to: \" \",\r\n      }\r\n    },\r\n    head: {\r\n      title: 'Add New Meeting'\r\n    },\r\n    computed: {\r\n      total() {\r\n        const count = Array.isArray(this.formData.reminders) ? this.formData.reminders.length : 1\r\n        return new Intl.NumberFormat('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD'\r\n        }).format(count * 100)\r\n      }\r\n    },\r\n    methods: {\r\n      async addMeeting() {\r\n        const subject = this.subject;\r\n        const content = this.content;\r\n        const status = this.status;\r\n        const end_date = this.end_date;\r\n        const assigned_to = this.assigned_to;\r\n        const duration = this.duration;\r\n        const reminders = this.reminders;\r\n        const start_date = this.start_date;\r\n        const related_to = this.related_to;\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_MEETINGS,\r\n          variables: {\r\n            subject,\r\n            status,\r\n            end_date,\r\n            content,\r\n            assigned_to,\r\n            duration,\r\n            reminders,\r\n            start_date,\r\n            related_to,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertMeetings\r\n            }\r\n          }) => {\r\n            // Read data from cache for this query\r\n            try {\r\n              const insertedMeeting = insertMeetings.returning;\r\n              console.log(insertedMeeting)\r\n              cache.writeQuery({\r\n                query: meetings\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../customers/meetings'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.subject = ' ';\r\n        this.status = ' ';\r\n        this.end_date = ' ';\r\n        this.content = ' ';\r\n        this.assigned_to = ' ';\r\n        this.duration = ' ';\r\n        this.reminders = ' ';\r\n        this.start_date = ' ';\r\n        this.related_to = ' ';\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n.form-wrapper {\r\n  padding: 2em;\r\n  border: 1px solid #a8a8a8;\r\n  border-radius: .5em;\r\n  box-sizing: border-box;\r\n}\r\n@media (min-width: 650px) {\r\n  .reminder {\r\n    display: flex;\r\n  }\r\n}\r\n\r\n@media (min-width: 720px) {\r\n  .reminder {\r\n    display: block;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .reminder {\r\n    display: flex;\r\n  }\r\n  .reminder .formulate-input {\r\n    margin-right: 1.5em;\r\n  }\r\n}\r\n.reminder .formulate-input {\r\n  margin-right: 2em;\r\n  margin-bottom: 0;\r\n}\r\n\r\nstrong {\r\n  display: block;\r\n  margin: 1em 0;\r\n}\r\n\r\nstrong.price {\r\n  margin-top: 1.25em;\r\n  margin-bottom: 0;\r\n  height: 2.5em;\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\meeting\\_id.vue",["985","986"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-target.vue",["987","988","989","990"],"\r\n<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" enctype=\"multipart/form-data\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"targetAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addTarget\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Prefix</td>\r\n              <td>\r\n                <FormulateInput v-model=\"prefix\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">First Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"first_name\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Last Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"last_name\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Job Title</td>\r\n              <td>\r\n                <FormulateInput v-model=\"job_title\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Department</td>\r\n              <td>\r\n                <FormulateInput v-model=\"department\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Account Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"account_name\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Office Phone</td>\r\n              <td>\r\n                <FormulateInput v-model=\"office_phone\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Mobile</td>\r\n              <td>\r\n                <FormulateInput v-model=\"mobile\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Fax</td>\r\n              <td>\r\n                <FormulateInput v-model=\"fax\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Website</td>\r\n              <td>\r\n                <FormulateInput v-model=\"website\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <div class=\"col\">\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address Street</td>\r\n              <td>\r\n                <FormulateInput v-model=\"address\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address Postalcode</td>\r\n              <td>\r\n                <FormulateInput v-model=\"postalcode\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address City</td>\r\n              <td>\r\n                <FormulateInput v-model=\"city\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address State</td>\r\n              <td>\r\n                <FormulateInput v-model=\"state\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Primary Address Country</td>\r\n              <td>\r\n                <FormulateInput v-model=\"state\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            </div>\r\n            <div class=\"col\">\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address Street</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_address\" type=\"text\" label=\"Other Address\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address Postalcode</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_postalcode\" type=\"text\" label=\"Other Address Postalcode\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address City</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_city\" type=\"text\" label=\"Other Address City\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address State</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_state\" type=\"text\" label=\"Other Address State\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Alternate Address Country</td>\r\n              <td>\r\n                <FormulateInput v-model=\"alt_country\" type=\"text\" label=\"Other Address Country\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Email Address</td>\r\n              <td>\r\n                <FormulateInput v-model=\"email\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Description</td>\r\n              <td>\r\n                <FormulateInput v-model=\"description\" type=\"textarea\" />\r\n              </td>\r\n            </tr>\r\n            </div>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              More Information\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email Opt Out</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"email_opt_out\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Do Not Call</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"donotcall\" type=\"textarea\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gql from \"graphql-tag\";\r\n\r\n  import {\r\n    targets\r\n  } from \"~/apollo/queries/customers/targets\";\r\n/* eslint-disable camelcase */\r\n  const ADD_TARGETS = gql `\r\n    mutation ($prefix: String!, $account_name: String!, $address: String!, $address: String!, $city: String!, $country: String!, $postalcode: String!, $department: String!, $customer_name: String!, $description: String!, $email: String!, $fax: String!, $first_name: String!, $last_name: String!, $job_title: String!, $email_opt_out: String!, $donotcall: String!, $mobile: String!, $office_phone: String!, $state: String!, $website: String){\r\n    insert_targets(objects: {prefix: $prefix, account_name: $account_name, address: $address, address: $address, city: $city, country: $country, postalcode: $postalcode, department: $department, customer_name: $customer_name, description: $description, department: $department, email: $email, fax: $fax, first_name: $first_name, last_name: $last_name, job_title: $job_title, email_opt_out: $email_opt_out, donotcall: $donotcall, mobile: $mobile, status: $status, status_description: $status_description, office_phone: $office_phone, opportunity_amount: $opportunity_amount, state: $state, website: $website, assigned_to: $assigned_to}) {\r\n        affected_rows\r\n        returning {\r\n            prefix\r\n            account_name\r\n            address\r\n            city\r\n            country\r\n            postalcode\r\n            department\r\n            customer_name\r\n            description\r\n            email\r\n            state\r\n            fax\r\n            first_name\r\n            last_name\r\n            job_title\r\n            email_opt_out\r\n            donotcall\r\n            mobile\r\n            office_phone\r\n            alt_address\r\n            alt_city\r\n            alt_country\r\n            alt_postalcode\r\n            alt_state\r\n            website\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        prefix:\" \",\r\n        account_name:\" \",\r\n        address:\" \",\r\n        city:\" \",\r\n        country:\" \",\r\n        postalcode:\" \",\r\n        department:\" \",\r\n        customer_name:\" \",\r\n        description:\" \",\r\n        email:\" \",\r\n        fax:\" \",\r\n        first_name:\" \",\r\n        last_name:\" \",\r\n        job_title:\" \",\r\n        email_opt_out:\" \",\r\n        donotcall:\" \",\r\n        mobile:\" \",\r\n        state: \" \",\r\n        office_phone:\" \",\r\n        alt_address:\" \",\r\n        alt_city:\" \",\r\n        alt_country:\" \",\r\n        alt_postalcode:\" \",\r\n        alt_state:\" \",\r\n        website:\" \",\r\n      }\r\n    },\r\n    head: {\r\n      title: 'Add New Target'\r\n    },\r\n    methods: {\r\n      async addTarget() {\r\n        const prefix = this.prefix;\r\n        const account_name = this.account_name;\r\n        const address = this.address;\r\n        const alt_address = this.alt_address;\r\n        const city = this.city;\r\n        const country = this.country;\r\n        const postalcode = this.postalcode;\r\n        const department = this.department;\r\n        const customer_name = this.customer_name;\r\n        const description = this.description;\r\n        const email = this.email;\r\n        const fax = this.fax;\r\n        const first_name = this.first_name;\r\n        const last_name = this.last_name;\r\n        const job_title = this.job_title;\r\n        const email_opt_out = this.email_opt_out;\r\n        const donotcall = this.donotcall;\r\n        const mobile = this.mobile;\r\n        const office_phone = this.office_phone;\r\n        const alt_city = this.alt_city;\r\n        const alt_country = this.alt_country;\r\n        const alt_postalcode = this.alt_postalcode;\r\n        const state = this.state;\r\n        const alt_state = this.alt_state;\r\n        const website = this.website;\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_TARGETS,\r\n          variables: {\r\n            prefix,\r\n            account_name,\r\n            address,\r\n            city,\r\n            country,\r\n            postalcode,\r\n            department,\r\n            customer_name,\r\n            description,\r\n            email,\r\n            website,\r\n            fax,\r\n            first_name,\r\n            last_name,\r\n            job_title,\r\n            email_opt_out,\r\n            donotcall,\r\n            mobile,\r\n            state,\r\n            office_phone,\r\n            alt_address,\r\n            alt_city,\r\n            alt_country,\r\n            alt_postalcode,\r\n            alt_state,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertTargets\r\n            }\r\n          }) => {\r\n            try {\r\n              const insertedTarget = insertTargets.returning;\r\n              console.log(insertedTarget)\r\n              cache.writeQuery({\r\n                query: targets\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../customers/targets'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.prefix = ' ';\r\n        this.account_name = ' ';\r\n        this.address = ' ';\r\n        this.city = ' ';\r\n        this.country = ' ';\r\n        this.postalcode = ' ';\r\n        this.department = ' ';\r\n        this.customer_name = ' ';\r\n        this.description = ' ';\r\n        this.email = ' ';\r\n        this.fax = ' ';\r\n        this.first_name = ' ';\r\n        this.last_name = ' ';\r\n        this.job_title = ' ';\r\n        this.email_opt_out = ' ';\r\n        this.donotcall = ' ';\r\n        this.mobile = ' ';\r\n        this.state = ' ';\r\n        this.office_phone = ' ';\r\n        this.alt_address = ' ';\r\n        this.alt_city = ' ';\r\n        this.alt_country = ' ';\r\n        this.alt_postalcode = ' ';\r\n        this.alt_state = ' ';\r\n        this.website = ' ';\r\n      },\r\n\r\n    },\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\target\\_id.vue",["991","992"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\ecommerce\\paypal.js",[],["993","994","995","996"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\main.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\client.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\ecommerce\\pa-dss.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\index.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\search.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\test.vue",["997","998"],"<template>\r\n  <FormulateInput @click=\"showMessageFromBackend\">Show message from backend</FormulateInput>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    async showMessageFromBackend () {\r\n\r\n      try {\r\n        const response = await this.$axios.get('/api/test')\r\n        console.log(response.data)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n</script>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Auth\\Login.vue",["999","1000"],"<template>\r\n  <section class=\"form4 cid-t58K4mPmcD mbr-fullscreen\" id=\"form4-g\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row content-wrapper justify-content-center\">\r\n        <div class=\"col-lg-3 offset-lg-1 mbr-form\" data-form-type=\"formoid\">\r\n          <b-container>\r\n            <h2 class=\"title has-text-centered\" style=\"color:white;\">Welcome back!</h2>\r\n\r\n            <Notification :message=\"error\" v-if=\"error\" />\r\n            <b-row>\r\n              <b-col md=\"4\" offset-md=\"4\" class=\"mt-5\">\r\n                <FormulateForm method=\"post\" @submit.prevent=\"login\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"email\" style=\"color:white;\">Email address</label>\r\n                    <FormulateInput id=\"email\" v-model=\"form.email\" type=\"email\" class=\"form-control\"\r\n                      aria-describedby=\"emailHelp\" />\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label for=\"password\" style=\"color:white;\">Password</label>\r\n                    <FormulateInput id=\"password\" v-model=\"form.password\" type=\"password\" class=\"form-control\" />\r\n                  </div>\r\n                  <input type=\"hidden\" name=\"_csrf\" :value=\"csrfToken\">\r\n                  <FormulateInput type=\"submit\">Login</FormulateInput>\r\n                </FormulateForm>\r\n                <div class=\"has-text-centered\" style=\"margin-top: 20px\">\r\n                  <p style=\"color:white;text-align: center;\">\r\n                    Don't have an account? <nuxt-link to=\"/auth/register\" style=\"color:lightblue;\">Register</nuxt-link>\r\n                  </p>\r\n                </div>\r\n              </b-col>\r\n            </b-row>\r\n          </b-container>\r\n        </div>\r\n        <div class=\"col-lg-7 offset-lg-1 col-12\">\r\n          <div class=\"image-wrapper\">\r\n            <img class=\"w-100\" src=\"/assets/images/mbr-1266x633.jpg\" alt=\"AlternateCMS\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n  import Notification from '~/components/Notification';\r\n  export default {\r\n    components: {\r\n      Notification,\r\n    },\r\n    layout: 'nologin',\r\n    auth: false,\r\n    middleware: 'guest',\r\n    data() {\r\n      return {\r\n        form: {\r\n          email: '',\r\n          password: '',\r\n          error: null\r\n        },\r\n        formBusy: false,\r\n      }\r\n    },\r\n    head: {\r\n      title: 'Login'\r\n    },\r\n\r\n    methods: {\r\n      async login() {\r\n        try {\r\n          await this.$auth.loginWith(\"local\", {\r\n            data: this.loginData\r\n          });\r\n          this.$router.push('/');\r\n        } catch (e) {\r\n          this.error = e.response.data.message;\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Auth\\Register.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\User\\my-account.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-agreement.vue",["1001","1002","1003","1004","1005","1006"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"agreementAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addAgreement\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Agreement Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Agreement Type</td>\r\n                        <td><FormulateInput v-model=\"type\" type=\"text\" name=\"Type\">\r\n                            </FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" v-model=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - excerpt.length} left.`\" cols=\"50\" rows=\"10\" label=\"Add a short Description\"></FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"agreementDescription\" v-model=\"content\" />\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { agreements } from \"~/apollo/queries/sales/agreements\";\r\n\r\nconst ADD_AGREEMENTS = gql`\r\n    mutation ($name:String!,$excerpt:String,$type:String,$content:String,$image:String){\r\n    insert_agreements(objects: {name: $name, excerpt: $excerpt, type: $type, content: $content, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            excerpt\r\n            type\r\n            content\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        type: [],\r\n        name: \" \",\r\n        excerpt: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addAgreement() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const excerpt = this.excerpt;\r\n            const type = this.type;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_AGREEMENTS,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                    type,\r\n                    content,\r\n                    image,\r\n                },\r\n        update: (cache, { data: { insertAgreements }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedAgreement = insertAgreements.returning;\r\n                            console.log(insertedAgreement)\r\n                            cache.writeQuery({\r\n                                query: agreements\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../sales/agreements'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n                this.type = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n            },\r\n            \r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Agreement'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-article.vue",["1007","1008","1009","1010","1011","1012","1013","1014"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"articleAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-tag\"><FormulateInput type=\"button\">Add New Tag</FormulateInput></a></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addArticle\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Article Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Categories</td>\r\n                        <td><FormulateInput type=\"select\" :options=\"categories.name\" v-model=\"categories\" name=\"Select\">\r\n                            </FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\" cols=\"50\" rows=\"10\" label=\"Add a short Description\"></FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"articleDescription\" v-model=\"content\" />\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFive\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                        Related Products, Up-Sells, and Cross-Sells\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { articles } from \"~/apollo/queries/content/articles\";\r\nimport categories from '~/apollo/queries/shop/categories'\r\n\r\nconst ADD_ARTICLES = gql`\r\n    mutation ($name:String!,$excerpt:String,$categories:String,$content:String,$image:String){\r\n    insert_articles(objects: {name: $name, excerpt: $excerpt, categories: $categories, content: $content, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            excerpt\r\n            categories\r\n            content\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        categories: [],\r\n        name: \" \",\r\n        excerpt: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addArticle() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const excerpt = this.excerpt;\r\n            const categories = this.categories;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_ARTICLES,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                    categories,\r\n                    content,\r\n                    image,\r\n                },\r\n        update: (cache, { data: { insertCategories }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            console.log(insertedCategory)\r\n                            cache.writeQuery({\r\n                                query: articles\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/blog'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n                this.categories = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n            },\r\n            \r\n        },\r\n    apollo: {\r\n        categories: {\r\n        prefetch: true,\r\n        query: categories\r\n        }\r\n    }, \r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Article'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-attribute.vue",["1015","1016","1017","1018","1019","1020"],"\r\n<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"attributesAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addAttribute\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Attribute Name</td>\r\n                        <td><FormulateInput id=\"attributesLabel\" v-model=\"default_label\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Attribute Code</td>\r\n                        <td><FormulateInput id=\"attributesCode\" v-model=\"attribute_code\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Default Value</td>\r\n                        <td><FormulateInput id=\"attributesValue\" v-model=\"default_value\" type=\"text\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { attributes } from \"~/apollo/queries/shop/attributes\";\r\n\r\nconst ADD_ATTRIBUTES = gql`\r\n    mutation ($attribute_code:String!,$default_label:String!,$default_value:String!){\r\n    insert_product_attribute(objects: {attribute_code: $attribute_code,default_label: $default_label,default_value: $default_value}) {\r\n        affected_rows\r\n        returning {\r\n            attribute_code\r\n            default_label\r\n            default_value\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        attribute_code: \" \",\r\n        default_label: \" \",\r\n        default_value: \" \",\r\n      }\r\n  }, \r\n   /* eslint-disable camelcase */\r\n  methods: {\r\n      async addAttribute() {\r\n            const attribute_code = this.attribute_code;\r\n            const default_label = this.default_label;\r\n            const default_value = this.default_value;\r\n        \r\n            await this.$apollo.mutate({\r\n                mutation: ADD_ATTRIBUTES,\r\n                variables: {\r\n                    attribute_code,\r\n                    default_label,\r\n                    default_value,\r\n                 },\r\n        update: (cache, { data: { insertAttributes }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedAttribute = insertAttributes.returning;\r\n                            console.log(insertedAttribute)\r\n                            cache.writeQuery({\r\n                                query: attributes\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/attributes'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n            },\r\n        },\r\n    head: {\r\n        title: 'Add New Attribute'\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n\r\n.form-switch .form-check-input:checked[type=checkbox]:after, .form-switch .form-check-input:after {\r\n    margin-top: -7px;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-campaign.vue",["1021","1022","1023","1024","1025","1026","1027","1028"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"articleAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-tag\"><FormulateInput type=\"button\">Add New Tag</FormulateInput></a></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addArticle\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Article Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Categories</td>\r\n                        <td><FormulateInput type=\"select\" :options=\"categories.name\" v-model=\"categories\" name=\"Select\">\r\n                            </FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\" cols=\"50\" rows=\"10\" label=\"Add a short Description\"></FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"articleDescription\" v-model=\"content\" />\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFive\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                        Related Products, Up-Sells, and Cross-Sells\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { articles } from \"~/apollo/queries/content/articles\";\r\nimport categories from '~/apollo/queries/shop/categories'\r\n\r\nconst ADD_ARTICLES = gql`\r\n    mutation ($name:String!,$excerpt:String,$categories:String,$content:String,$image:String){\r\n    insert_articles(objects: {name: $name, excerpt: $excerpt, categories: $categories, content: $content, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            excerpt\r\n            categories\r\n            content\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        categories: [],\r\n        name: \" \",\r\n        excerpt: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addArticle() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const excerpt = this.excerpt;\r\n            const categories = this.categories;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_ARTICLES,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                    categories,\r\n                    content,\r\n                    image,\r\n                },\r\n        update: (cache, { data: { insertCategories }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            console.log(insertedCategory)\r\n                            cache.writeQuery({\r\n                                query: articles\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/blog'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n                this.categories = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n            },\r\n            \r\n        },\r\n    apollo: {\r\n        categories: {\r\n        prefetch: true,\r\n        query: categories\r\n        }\r\n    }, \r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Campaign'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-city.vue",["1029","1030","1031","1032","1033","1034"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"cityAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCity\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">City Name</td>\r\n                        <td><FormulateInput id=\"cityName\" v-model=\"name\" type=\"cityName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State</td>\r\n                        <td><FormulateInput id=\"cityName\" v-model=\"state\" type=\"cityName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country</td>\r\n                        <td><FormulateInput id=\"cityName\" v-model=\"country\" type=\"cityName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Postal Code</td>\r\n                        <td><FormulateInput id=\"cityName\" v-model=\"postalCode\" type=\"cityName\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"tagDesc\" v-model=\"description\" type=\"textarea\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { city } from \"~/apollo/queries/shop/cities\";\r\n\r\nconst ADD_CITIES = gql`\r\n    mutation ($name:String!,$state:String,$country:String,$postalCode:String,$description:String){\r\n    insert_cities(objects: {name: $name, state: $state, country: $country, postalCode: $postalCode, description: $description}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            state\r\n            country\r\n            postalCode\r\n            description\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        state: \" \",\r\n        country: \" \",\r\n        postalCode: \" \",\r\n        description: \" \",\r\n      }\r\n  }, \r\n   \r\n  methods: {\r\n      async addCity() {\r\n            const name = this.name;\r\n            const state = this.state;\r\n            const country = this.country;\r\n            const postalCode = this.postalCode;\r\n            const description = this.description;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CITIES,\r\n                variables: {\r\n                    name,\r\n                    state,\r\n                    country,\r\n                    postalCode,\r\n                    description,\r\n                 },\r\n        update: (cache, { data: { insertCities }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCity = insertCities.returning;\r\n                            console.log(insertedCity)\r\n                            cache.writeQuery({\r\n                                query: city\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/cities'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.state = ' ';\r\n                this.country = ' ';\r\n                this.postalCode = ' ';\r\n                this.description = ' ';\r\n            },\r\n        },\r\n    head: {\r\n        title: 'Add New City'\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-category.vue",["1035","1036","1037","1038","1039","1040"],"/* eslint-disable camelcase */\r\n<template>\r\n    <div id=\"editor\">\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"categoryAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCategory\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Category Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <vue-simplemde id=\"categoryDescription\" v-model=\"content\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your categories to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput v-model=\"meta_title\" type=\"text\" label=\"Product Url\" required /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput v-model=\"meta_keywords\" type=\"text\" label=\"Product Keywords\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  v-model=\"meta_description\" type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" /></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { categories } from \"~/apollo/queries/shop/categories\";\r\n\r\nconst ADD_CATEGORIES = gql`\r\n    mutation ($name:String!,$product:String,$content:String,$image:String,$meta_title:String,$meta_keywords:String,$meta_description:String){\r\n    insert_categories(objects: {name: $name, content: $content, image: $image, meta_description: $meta_description, meta_keywords: $meta_keywords, meta_title: $meta_title}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            content\r\n            image\r\n            meta_description\r\n            meta_keywords\r\n            meta_title\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n        name: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        meta_description: \" \",\r\n        meta_keywords: \" \",\r\n        meta_title: \" \",\r\n      }\r\n  },\r\n  methods: {\r\n      async addCategory() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const image = this.image;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_title = this.meta_title;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_keywords = this.meta_keywords;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_description = this.meta_description;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CATEGORIES,\r\n                variables: {\r\n                    name,\r\n                    content,\r\n                    image,\r\n                    meta_description,\r\n                    meta_keywords,\r\n                    meta_title,\r\n                 },\r\n        update: (cache, { data: { insertCategories }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            console.log(insertedCategory)\r\n                            cache.writeQuery({\r\n                                query: categories\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/categories'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n                this.meta_description = ' ';\r\n                this.meta_keywords = ' ';\r\n                this.meta_title = ' ';\r\n            },\r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Category'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-collection.vue",["1041","1042","1043","1044","1045","1046"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"collectionsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCollection\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Collection Name</td>\r\n                        <td><FormulateInput id=\"collectionsName\" v-model=\"name\" type=\"collectionsName\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  v-model=\"description\" type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput v-model=\"meta_title\" type=\"text\" label=\"Product Url\" required /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput v-model=\"meta_keywords\" type=\"text\" label=\"Product Keywords\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  v-model=\"meta_description\" type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" /></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { collections } from \"~/apollo/queries/shop/collections\";\r\n\r\nconst ADD_COLLECTIONS = gql`\r\n    mutation ($name:String!,$description:String!,$image:String!,$meta_description:String!,$meta_keywords:String!,$meta_title:String!){\r\n    insert_collections(objects: {name: $name, description: $description, image: $image, meta_description: $meta_description, meta_title: $meta_title, meta_keywords: $meta_keywords}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            description\r\n            image\r\n            meta_description\r\n            meta_keywords\r\n            meta_title\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        description: \" \",\r\n        image: \" \",\r\n        meta_description: \" \",\r\n        meta_keywords: \" \",\r\n        meta_title: \" \",\r\n        \r\n      }\r\n  },\r\n    head: {\r\n        title: 'Add New Collection'\r\n    }, \r\n   /* eslint-disable camelcase */\r\n  methods: {\r\n      async addCollection() {\r\n            const name = this.name;\r\n            const description = this.description;\r\n            const image = this.image;\r\n            const meta_description = this.meta_description;\r\n            const meta_keywords = this.meta_keywords;\r\n            const meta_title = this.meta_title;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_COLLECTIONS,\r\n                variables: {\r\n                    name,\r\n                    description,\r\n                    image,\r\n                    meta_description,\r\n                    meta_keywords,\r\n                    meta_title,\r\n                 },\r\n        update: (cache, { data: { insertCollections }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCollection = insertCollections.returning;\r\n                            console.log(insertedCollection)\r\n                            cache.writeQuery({\r\n                                query: collections\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/collections'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.description = ' ';\r\n                this.image = ' ';\r\n                this.meta_description = ' ';\r\n                this.meta_keywords = ' ';\r\n                this.meta_title = ' ';\r\n            },\r\n            onFileAdded(e) {},\r\n            onError(e) {},\r\n            onSuccess(e) {},\r\n            onComplete(e) {}\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n    width: 50%;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-coupon.vue",["1047","1048","1049","1050","1051","1052"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addCoupon\" label=\"Save Coupon\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create A New Coupon</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab excerpt -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-excerpt\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Coupon Name</td>\r\n                      <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Discount</td>\r\n                      <td><FormulateInput v-model=\"discount\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Expiration</td>\r\n                      <td><FormulateInput id=\"expiration\" v-model=\"expiration\" name=\"expiration\" type=\"url\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Coupon Content</td>\r\n                      <td><FormulateInput id=\"reviewDescription\" v-model=\"excerpt\" type=\"textarea\" label=\"Enter information about this coupon\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - excerpt.length} left.`\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport coupons from \"~/apollo/queries/shop/coupons\"\r\n\r\nconst ADD_COUPONS = gql`\r\n    mutation ($name:String!,$discount:String!$expiration:String!,$excerpt:String){\r\n    insert_coupons(objects: {name: $name, discount: $discount, expiration: $expiration, excerpt: $excerpt}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            discount\r\n            expiration\r\n            excerpt\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n            name: \" \",\r\n            discount: \" \",\r\n            expiration: \" \",\r\n            excerpt: \" \",\r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Coupon'\r\n    }, \r\n/* eslint-disable camelcase */\r\n   \r\n  methods: {\r\n      async addCoupon() {\r\n            const name = this.name;\r\n            const discount = this.discount;\r\n            const expiration = this.expiration;\r\n            const excerpt = this.excerpt;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_COUPONS,\r\n                variables: {\r\n                    name,\r\n                    discount,\r\n                    expiration,\r\n                    excerpt,\r\n                 },\r\n        update: (cache, { data: { insertCoupons }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCoupon = insertCoupons.returning;\r\n                            console.log(insertedCoupon)\r\n                            cache.writeQuery({\r\n                                query: coupons\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/coupons'})\r\n                }).catch(err => console.log(err));\r\n                    this.name = ' ';\r\n                    this.discount = ' ';\r\n                    this.expiration = ' ';\r\n                    this.excerpt = ' ';\r\n                }, \r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-country.vue",["1053","1054","1055","1056","1057","1058","1059","1060","1061"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"countriesAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addCountry\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country Name</td>\r\n                        <td><FormulateInput id=\"countriesName\" v-model=\"name\" type=\"countriesName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country Region</td>\r\n                        <td><FormulateInput id=\"countriesRegion\" v-model=\"region\" type=\"countriesRegion\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  type=\"textarea\" id=\"tagDesc\" v-model=\"description\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { countries } from \"~/apollo/queries/shop/countries\";\r\n\r\nconst ADD_COUNTRIES = gql`\r\n    mutation ($name:String!,$description:String,$image:String,$region:String){\r\n    insert_countries(objects: {name: $name, description: $description, image: $image, region: $region}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            description\r\n            image\r\n            region\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        description: \" \",\r\n        image: \" \",\r\n        region: \" \",\r\n      }\r\n  }, \r\n   \r\n  methods: {\r\n      async addCountry() {\r\n            const name = this.name;\r\n            const description = this.description;\r\n            const image = this.image;\r\n            const region = this.region;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_COUNTRIES,\r\n                variables: {\r\n                    name,\r\n                    description,\r\n                    image,\r\n                    region\r\n                 },\r\n        update: (cache, { data: { insertCountries }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCountry = insertCountries.returning;\r\n                            console.log(insertedCountry)\r\n                            cache.writeQuery({\r\n                                query: countries\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/countries'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.description = ' ';\r\n                this.image = ' ';\r\n                this.region = ' ';\r\n            },\r\n        },\r\n    head: {\r\n        title: 'Add New Country'\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-customer.vue",["1062","1063","1064","1065","1066","1067"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"staffMemberAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addStaff\" label=\"Save\" /></li>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"staffMemberActive\">\r\n                            <li><FormulateInput v-model=\"value\" type=\"checkbox\" label=\"User is active\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">First Name</td>\r\n                        <td><FormulateInput v-model=\"first_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Last Name</td>\r\n                        <td><FormulateInput v-model=\"last_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Email Address</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Username</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Password</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Roles</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">User Status</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Address</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Address 2</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">City</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Postal</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable camelcase */\r\nimport gql from \"graphql-tag\";\r\nimport { user } from \"~/apollo/queries/system/users\";\r\n// import tax from '~/apollo/queries/shop/tax'\r\n\r\nconst ADD_USER = gql`\r\n    mutation ($first_name:String!,$last_name:String!,$value:String!,$staff_email:String){\r\n    insert_user(objects: {first_name: $first_name, last_name: $last_name, staff_email: $staff_email, value: $value}) {\r\n        affected_rows\r\n        returning {\r\n            first_name\r\n            last_name\r\n            staff_email\r\n            value\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        staff_email: [],\r\n        first_name: \" \",\r\n        last_name: \" \",\r\n        value: \" \",\r\n      }\r\n  },\r\n  methods: {\r\n      async addStaff() {\r\n            const first_name = this.first_name;\r\n            const last_name = this.last_name;\r\n            const staff_email = this.staff_email;\r\n            const value = this.value;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_USER,\r\n                variables: {\r\n                    first_name,\r\n                    last_name,\r\n                    staff_email,\r\n                    value,\r\n                },\r\n        update: (cache, { data: { insertStaffMember }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedStaffMember = insertStaffMember.returning;\r\n                            console.log(insertedStaffMember)\r\n                            cache.writeQuery({\r\n                                query: user\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../system/users'})\r\n                }).catch(err => console.log(err));\r\n                this.first_name = ' ';\r\n                this.last_name = ' ';\r\n                this.staff_email = ' ';\r\n                this.value = ' ';\r\n            },\r\n        },\r\n    /* apollo: {\r\n        tax: {\r\n        prefetch: true,\r\n        query: tax\r\n        } \r\n    }, */\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Staff Members'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-customergroup.vue",["1068","1069","1070","1071","1072","1073","1074"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"customerGroupAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addGroup\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Group Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Class</td>\r\n                        <td><FormulateInput type=\"text\" v-model=\"tax_class\" name=\"tax\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable camelcase */\r\nimport gql from \"graphql-tag\";\r\nimport { customer_group } from \"~/apollo/queries/customers/customerGroups\";\r\n// import tax from '~/apollo/queries/shop/tax'\r\n\r\nconst ADD_GROUPS = gql`\r\n    mutation ($name:String!,$tax_class:String){\r\n    insert_customer_group(objects: {name: $name, tax_class: $tax_class}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            tax_class\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        tax_class: [],\r\n        name: \" \",\r\n      }\r\n  },\r\n  methods: {\r\n      async addGroup() {\r\n            const name = this.name;\r\n            const tax_class = this.tax_class;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_GROUPS,\r\n                variables: {\r\n                    name,\r\n                    tax_class,\r\n                },\r\n        update: (cache, { data: { insertTax }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTax = insertTax.returning;\r\n                            console.log(insertedTax)\r\n                            cache.writeQuery({\r\n                                query: customer_group\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/customer-groups'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.tax_class = ' ';\r\n            },\r\n        },\r\n    /* apollo: {\r\n        tax: {\r\n        prefetch: true,\r\n        query: tax\r\n        } \r\n    }, */\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Customer Group'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-gift-certificates.vue",["1075","1076","1077","1078","1079","1080"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addGift_Certificate\" label=\"Save Gift_Certificate\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create A New Gift Certificate or Gift Card</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab excerpt -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-excerpt\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gift Name</td>\r\n                      <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Discount</td>\r\n                      <td><FormulateInput v-model=\"discount\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Expiration</td>\r\n                      <td><FormulateInput id=\"expiration\" v-model=\"expiration\" name=\"expiration\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gift Type</td>\r\n                      <td><FormulateInput id=\"expiration\" v-model=\"type\" name=\"expiration\" type=\"text\" label=\"Gift Card or Gift Certificate\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Description</td>\r\n                      <td><FormulateInput id=\"reviewDescription\" v-model=\"excerpt\" type=\"textarea\" label=\"Enter information about this gift\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - excerpt.length} left.`\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n// eslint-disable-next-line camelcase\r\nimport gift_certificate from \"~/apollo/queries/sales/gift_certificates\"\r\n\r\nconst ADD_GIFT_CERTIFICATE = gql`\r\n    mutation ($name:String!,$discount:String!$expiration:String!,$excerpt:String!,$type:String){\r\n    insert_gift_certificates(objects: {name: $name, discount: $discount, expiration: $expiration, excerpt: $excerpt, type: $type}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            discount\r\n            expiration\r\n            excerpt\r\n            type\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n            name: \" \",\r\n            discount: \" \",\r\n            expiration: \" \",\r\n            excerpt: \" \",\r\n            type: \"\",\r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Gift_Certificate'\r\n    }, \r\n/* eslint-disable camelcase */\r\n   \r\n  methods: {\r\n      async addGift_Certificate() {\r\n            const name = this.name;\r\n            const discount = this.discount;\r\n            const expiration = this.expiration;\r\n            const excerpt = this.excerpt;\r\n            const type = this.type;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_GIFT_CERTIFICATE,\r\n                variables: {\r\n                    name,\r\n                    discount,\r\n                    expiration,\r\n                    excerpt,\r\n                    type,\r\n                 },\r\n        update: (cache, { data: { insertGift_Certificates }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedGift_Certificate = insertGift_Certificates.returning;\r\n                            console.log(insertedGift_Certificate)\r\n                            cache.writeQuery({\r\n                                query: gift_certificate\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../sales/certificates'})\r\n                }).catch(err => console.log(err));\r\n                    this.name = ' ';\r\n                    this.discount = ' ';\r\n                    this.expiration = ' ';\r\n                    this.excerpt = ' ';\r\n                    this.type = '';\r\n                }, \r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-glossary.vue",["1081","1082","1083","1084","1085","1086","1087"],"/* eslint-disable camelcase */\r\n<template>\r\n    <div id=\"editor\">\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"glossaryAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addGlossary\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Glossary Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <vue-simplemde id=\"glossaryDescription\" v-model=\"content\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { glossaries } from \"~/apollo/queries/content/glossaries.gql\";\r\n\r\nconst ADD_GLOSSARIES = gql`\r\n    mutation ($name:String!,$product:String,$content:String,$image:String,$published:timestamp){\r\n    insert_glossary(objects: {name: $name, content: $content, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            content\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n        name: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addGlossary() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const image = this.image;\r\n            // eslint-disable-next-line camelcase\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_GLOSSARIES,\r\n                variables: {\r\n                    name,\r\n                    content,\r\n                    image,\r\n                 },\r\n        update: (cache, { data: { insertGlossaries }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedGlossary = insertGlossaries.returning;\r\n                            console.log(insertedGlossary)\r\n                            cache.writeQuery({\r\n                                query: glossaries\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/glossary'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n            },\r\n            \r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Glossary'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-invoice.vue",["1088","1089","1090","1091","1092","1093"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"eventAddOptions\">\r\n                            <li style=\"display:inline-block;\"><FormulateInput type=\"button\" @click=\"addInvoice\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Name</td>\r\n                        <td><FormulateInput v-model=\"customer_name\" name=\"customerName\" type=\"text\" label=\"Customer Name on the Invoice\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Bill to Name</td>\r\n                        <td><FormulateInput v-model=\"bill_to_name\" name=\"orderNumber\" type=\"text\" label=\"Who should we bill to?\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Email</td>\r\n                        <td><FormulateInput v-model=\"email\" type=\"text\" required label=\"Customer's Email used to email the invoice\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Billing Address</td>\r\n                        <td><FormulateInput v-model=\"billing_address\" type=\"text\" label=\"Billing address for this invoice\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Group</td>\r\n                        <td><FormulateInput v-model=\"customer_group\" type=\"text\" label=\"Group this customer belongs to\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Shipping Information</td>\r\n                        <td><FormulateInput v-model=\"shipping_information\" name=\"shippingInformation\" type=\"text\" label=\"Shipping service used for shipping\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Shipping and Handling</td>\r\n                        <td><FormulateInput v-model=\"shipping_and_handling\" name=\"shippingHandling\" type=\"text\" label=\"How much does shipping cost?\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Shipping Address</td>\r\n                        <td><FormulateInput v-model=\"shipping_address\" name=\"shippingInformation\" type=\"text\" label=\"Where is this the address where the products are shipped to?\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Payment Method</td>\r\n                        <td><FormulateInput v-model=\"payment_method\" name=\"payment\" type=\"text\" label=\"What payment method is used for this transaction?\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Grand Total Base</td>\r\n                        <td><FormulateInput v-model=\"grand_total_base\" name=\"grandTotal\" type=\"text\" label=\"Amount of transaction with tax excluded\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Grand Total Purchased</td>\r\n                        <td><FormulateInput v-model=\"grand_total_purchased\" name=\"grandTotal\" type=\"text\" label=\"Amount of transaction with tax included\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { invoices } from \"~/apollo/queries/sales/invoices\";\r\n// import grand_total_base from \"~/apollo/queries/shop/grand_total_base\"\r\n// import countries from \"~/apollo/queries/shop/countries\"\r\n// import attributes from \"~/apollo/queries/shop/attributes\"\r\n\r\nconst ADD_INVOICES = gql`\r\n    mutation ($subtotal: String!,$customer_name: String!,$shipping_information: String!,$shipping_address: String!,$shipping_and_handling: String!,$payment_method: String!,$bill_to_name: String!,$grand_total_purchased: String!,$customer_group: String!,$email: String!,$billing_address: String!,$grand_total_base: String){\r\n    insert_invoices(objects: {subtotal: $subtotal,customer_name: $customer_name,shipping_information: $shipping_information,shipping_and_handling: $shipping_and_handling,shipping_address: $shipping_address,payment_method: $payment_method,bill_to_name: $bill_to_name,customer_group: $customer_group,grand_total_purchased: $grand_total_purchased,grand_total_base: $grand_total_base,email: $email,billing_address: $billing_address}) {\r\n        affected_rows\r\n        returning {\r\n            subtotal\r\n            customer_name\r\n            shipping_information\r\n            shipping_and_handling\r\n            payment_method\r\n            bill_to_name\r\n            customer_group\r\n            grand_total_purchased\r\n            grand_total_base\r\n            email\r\n            billing_address\r\n            shipping_address\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            grand_total_base: [],\r\n            attributes: [],\r\n            subtotal: \" \",\r\n            customer_name: \" \",\r\n            shipping_information: \" \",\r\n            shipping_and_handling: \" \",\r\n            payment_method: \" \",\r\n            bill_to_name: \" \",\r\n            customer_group: \" \",\r\n            grand_total_purchased: \" \",\r\n            email: \" \",\r\n            billing_address: \" \",\r\n            shipping_address: \" \",\r\n            options: {\r\n                url: \"../../media/\",\r\n                subtotalWidth: 150,\r\n                maxFilesize: 10,\r\n                createImageThumbnails: true,\r\n                maxThumbnailFileSize: 4,\r\n                duplicateCheck: true,\r\n                includeStyling: true,\r\n                headers: { \"My-Awesome-Header\": \"header value\" }\r\n            }\r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Invoice'\r\n    }, \r\n   \r\n  methods: {/* eslint-disable camelcase */\r\n      async addInvoice() {\r\n            const subtotal = this.subtotal;\r\n            const customer_name = this.customer_name;\r\n            const shipping_information = this.shipping_information;\r\n            const shipping_and_handling = this.shipping_and_handling;\r\n            const payment_method = this.payment_method;\r\n            const bill_to_name = this.bill_to_name;\r\n            const customer_group = this.customer_group;\r\n            const grand_total_purchased = this.grand_total_purchased;\r\n            const grand_total_base = this.grand_total_base;\r\n            const email = this.email;\r\n            const billing_address = this.billing_address;\r\n            const shipping_address = this.shipping_address;\r\n\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_INVOICES,\r\n                variables: {\r\n                    subtotal,\r\n                    customer_name,\r\n                    shipping_information,\r\n                    shipping_and_handling,\r\n                    payment_method,\r\n                    bill_to_name,\r\n                    customer_group,\r\n                    grand_total_purchased,\r\n                    grand_total_base,\r\n                    email,\r\n                    billing_address,\r\n                    shipping_address,\r\n                 },\r\n        update: (cache, { data: { insertCategories, insertCountries }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            const insertedCountries = insertCountries.returning;\r\n                            console.log(insertedCategory, insertedCountries)\r\n                            cache.writeQuery({\r\n                                query: invoices\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../sales/invoices'})\r\n                }).catch(err => console.log(err));\r\n                    this.subtotal = ' ';\r\n                    this.customer_name = ' ';\r\n                    this.shipping_information = ' ';\r\n                    this.shipping_and_handling = ' ';\r\n                    this.payment_method = ' ';\r\n                    this.bill_to_name = ' ';\r\n                    this.customer_group = ' ';\r\n                    this.grand_total_purchased = ' ';\r\n                    this.grand_total_base = ' ';\r\n                    this.email = ' ';\r\n                    this.billing_address = ' ';\r\n                    this.shipping_address = ' ';\r\n                },\r\n        },\r\n        apollo: {/*\r\n                    grand_total_base: {\r\n                    prefetch: true,\r\n                    query: grand_total_base\r\n                    },\r\n                 countries: {\r\n                    prefetch: true,\r\n                    query: countries\r\n                    },\r\n                    attributes: {\r\n                    prefetch: true,\r\n                    query: attributes\r\n                    } */\r\n            } \r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-event.vue",["1094","1095","1096","1097","1098","1099","1100"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"eventAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addEvent\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event Name</td>\r\n                        <td><FormulateInput v-model=\"name\" name=\"eventName\" type=\"text\" label=\"Name of the Event\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Amount of Tickets Available</td>\r\n                        <td><FormulateInput v-model=\"tickets\" name=\"eventTickets\" type=\"text\" label=\"Enter amount of tickets for event\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event City</td>\r\n                        <td><FormulateInput v-model=\"city\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event State</td>\r\n                        <td><FormulateInput v-model=\"state\" type=\"text\" placeholder=\"$\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event Country</td>\r\n                        <td><FormulateInput v-model=\"country\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event Postal Code</td>\r\n                        <td><FormulateInput v-model=\"postalcode\" name=\"eventPostalCode\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event Start Date</td>\r\n                        <td><FormulateInput v-model=\"start\" name=\"eventStart\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Event End Date</td>\r\n                        <td><FormulateInput v-model=\"end\" name=\"eventEnd\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Category</td>\r\n                        <td><FormulateInput v-model=\"category\" name=\"productCategory\" type=\"text\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <vue-simplemde id=\"longDescription\" v-model=\"content\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { events } from \"~/apollo/queries/marketing/events\";\r\n// import category from \"~/apollo/queries/shop/category\"\r\n// import countries from \"~/apollo/queries/shop/countries\"\r\n// import attributes from \"~/apollo/queries/shop/attributes\"\r\n\r\nconst ADD_EVENTS = gql`\r\n    mutation ($image: Upload!,$name: String!,$postalcode: String!,$start: String!,$end: String!,$tickets: String!,$content: String!,$country: String!,$city: String!,$state: String!,$category: String){\r\n    insert_events(objects: {image: $image,name: $name,postalcode: $postalcode,start: $start,end: $end,tickets: $tickets,country: $country,content: $content,category: $category,city: $city,state: $state}) {\r\n        affected_rows\r\n        returning {\r\n            image\r\n            name\r\n            postalcode\r\n            start\r\n            end\r\n            tickets\r\n            country\r\n            content\r\n            category\r\n            city\r\n            state\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            category: [],\r\n            attributes: [],\r\n            image: \" \",\r\n            name: \" \",\r\n            postalcode: \" \",\r\n            start: \" \",\r\n            end: \" \",\r\n            tickets: \" \",\r\n            country: \" \",\r\n            content: \" \",\r\n            city: \" \",\r\n            state: \" \",\r\n            options: {\r\n                url: \"../../media/\",\r\n                imageWidth: 150,\r\n                maxFilesize: 10,\r\n                createImageThumbnails: true,\r\n                maxThumbnailFileSize: 4,\r\n                duplicateCheck: true,\r\n                includeStyling: true,\r\n                headers: { \"My-Awesome-Header\": \"header value\" }\r\n            }\r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Event'\r\n    },\r\n  methods: {\r\n      async addEvent() {\r\n            const image = this.image;\r\n            const name = this.name;\r\n            // eslint-disable-next-line camelcase\r\n            const postalcode = this.postalcode;\r\n            const start = this.start;\r\n            // eslint-disable-next-line camelcase\r\n            const end = this.end;\r\n            // eslint-disable-next-line camelcase\r\n            const tickets = this.tickets;\r\n            const country = this.country;\r\n            const content = this.content;\r\n            const category = this.category;\r\n            const city = this.city;\r\n            const state = this.state;\r\n\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_EVENTS,\r\n                variables: {\r\n                    image,\r\n                    name,\r\n                    postalcode,\r\n                    start,\r\n                    end,\r\n                    tickets,\r\n                    country,\r\n                    content,\r\n                    category,\r\n                    city,\r\n                    state,\r\n                 },\r\n        update: (cache, { data: { insertCategories, insertCountries }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            const insertedCountries = insertCountries.returning;\r\n                            console.log(insertedCategory, insertedCountries)\r\n                            cache.writeQuery({\r\n                                query: events\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../marketing/events'})\r\n                }).catch(err => console.log(err));\r\n                    this.image = ' ';\r\n                    this.name = ' ';\r\n                    this.postalcode = ' ';\r\n                    this.start = ' ';\r\n                    this.end = ' ';\r\n                    this.tickets = ' ';\r\n                    this.country = ' ';\r\n                    this.content = ' ';\r\n                    this.category = ' ';\r\n                    this.city = ' ';\r\n                    this.state = ' ';\r\n                },\r\n        },\r\n        apollo: {/*\r\n                    category: {\r\n                    prefetch: true,\r\n                    query: category\r\n                    },\r\n                 countries: {\r\n                    prefetch: true,\r\n                    query: countries\r\n                    },\r\n                    attributes: {\r\n                    prefetch: true,\r\n                    query: attributes\r\n                    } */\r\n            } \r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-newsletter.vue",["1101","1102","1103","1104","1105","1106"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addNewsletter\" label=\"Save Newsletter\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create a New Newsletter Customer</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Customer First Name</td>\r\n                      <td><FormulateInput v-model=\"customer_first_name\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Cusotmer Last Name</td>\r\n                      <td><FormulateInput v-model=\"customer_last_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput v-model=\"email\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Store</td>\r\n                      <td><FormulateInput v-model=\"store\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Website</td>\r\n                      <td><FormulateInput id=\"websites\" v-model=\"websites\" name=\"websites\" type=\"url\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport newsletters from \"~/apollo/queries/marketing/newsletter_subscribers\"\r\n\r\nconst ADD_NEWSLETTERS = gql`\r\n    mutation ($customer_first_name:String!,$customer_last_name:String!$email:String!,$websites:String!,$store:String){\r\n    insert_newsletter_subscribers(objects: {customer_first_name: $customer_first_name, customer_last_name: $customer_last_name, email: $email, websites: $websites, store: $store}) {\r\n        affected_rows\r\n        returning {\r\n            customer_first_name\r\n            customer_last_name\r\n            email\r\n            websites\r\n            store\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n            customer_first_name: \" \",\r\n            customer_last_name: \" \",\r\n            email: \" \",\r\n            websites: \" \",\r\n            store: \" \",\r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Newsletter'\r\n    }, \r\n/* eslint-disable camelcase */\r\n   \r\n  methods: {\r\n      async addNewsletter() {\r\n            const customer_first_name = this.customer_first_name;\r\n            const customer_last_name = this.customer_last_name;\r\n            const email = this.email;\r\n            const websites = this.websites;\r\n            const store = this.store;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_NEWSLETTERS,\r\n                variables: {\r\n                    customer_first_name,\r\n                    customer_last_name,\r\n                    email,\r\n                    websites,\r\n                    store,\r\n                 },\r\n        update: (cache, { data: { insertNewsletters }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedNewsletter = insertNewsletters.returning;\r\n                            console.log(insertedNewsletter)\r\n                            cache.writeQuery({\r\n                                query: newsletters\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../marketing/customer-engagement'})\r\n                }).catch(err => console.log(err));\r\n                    this.customer_first_name = ' ';\r\n                    this.customer_last_name = ' ';\r\n                    this.email = ' ';\r\n                    this.websites = ' ';\r\n                },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-newslettersubscriber copy.vue",["1107","1108","1109","1110","1111","1112","1113","1114","1115"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addCustomer\" label=\"Save Customer\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Account Information</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <!--<tr>\r\n                      <td style=\"text-align: right;\">Customer Since</td>\r\n                      <client-only>\r\n                      <td><FormulateInput id=\"currentDate\" v-model=\"customer_since\" type=\"text\" disabled /></td>\r\n                      </client-only>\r\n                    </tr>-->\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Prefix</td>\r\n                      <td><FormulateInput v-model=\"name_prefix\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput v-model=\"first_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Middle Name/Initial</td>\r\n                      <td><FormulateInput v-model=\"middle_name\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput v-model=\"last_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Suffix</td>\r\n                      <td><FormulateInput v-model=\"name_suffix\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput v-model=\"email\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Date of Birth</td>\r\n                      <td><FormulateInput v-model=\"date_of_birth\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Phone Number</td>\r\n                      <td><FormulateInput v-model=\"phone\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax/VAT Number</td>\r\n                      <td><FormulateInput v-model=\"tax_vat_number\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gender</td>\r\n                      <td><FormulateInput id=\"gender\" v-model=\"gender\" name=\"gender\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">About Customer</td>\r\n                      <td><FormulateInput\r\n  type=\"textarea\" id=\"aboutCustomer\" v-model=\"short_description\" name=\"aboutCustomer\" validation=\"required|max:50,length\" error-behavior=\"live\"\r\n  :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\">\r\n                        </FormulateInput></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 1</td>\r\n                      <td><FormulateInput v-model=\"Address\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 2</td>\r\n                      <td><FormulateInput v-model=\"address_two\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">State</td>\r\n                      <td><FormulateInput id=\"state\" v-model=\"state\" name=\"state\" type=\"select\" :options=\"states.name\" placeholder=\"Select a State\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Postal Code</td>\r\n                      <td><FormulateInput v-model=\"zipcode\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Country</td>\r\n                      <td><FormulateInput id=\"country\" v-model=\"country\" name=\"country\" type=\"select\" :options=\"country.name\" placeholder=\"Select a Country\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Image</td>\r\n                      <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport customers from \"~/apollo/queries/customers/customers\"\r\n\r\nconst ADD_CUSTOMERS = gql`\r\n    mutation ($first_name:String!,$middle_name:String!,$last_name:String!,$gender:String!,$email:String!,$description:String!,$date_of_birth:String!,$websites:String!,$customer_group:String!,$phone:String!,$zipcode:String!,$name_prefix:String!,$name_suffix:String!,$product:String!,$state:String!,$country:String!,$tax_vat_number: String!,$Address:String!,$address_two:String!,$short_description:String!,$image: String){\r\n    insert_customers(objects: {first_name: $first_name, middle_name: $middle_name, last_name: $last_name, gender: $gender, email: $email, description: $description, product: $product, state: $state, date_of_birth: $date_of_birth, websites: $websites, customer_group: $customer_group, phone: $phone, zipcode: $zipcode, name_suffix: $name_suffix, name_prefix: $name_prefix, country: $country, Address: $Address, address_two: $address_two, tax_vat_number: $tax_vat_number, short_description: $short_description, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            first_name\r\n            middle_name\r\n            last_name\r\n            gender\r\n            email\r\n            description\r\n            product\r\n            state\r\n            date_of_birth\r\n            websites\r\n            customer_group\r\n            phone\r\n            zipcode\r\n            name_prefix\r\n            name_suffix\r\n            tax_vat_number\r\n            country\r\n            Address\r\n            address_two\r\n            short_description\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n            first_name: \" \",\r\n            middle_name: \" \",\r\n            last_name: \" \",\r\n            gender: \" \",\r\n            email: \" \",\r\n            description: \" \",\r\n            date_of_birth: \" \",\r\n            websites: \" \",\r\n            customer_group: \" \",\r\n            phone: \" \",\r\n            product: \" \",\r\n            zipcode: \" \",\r\n            name_prefix: \" \",\r\n            name_suffix: \" \",\r\n            tax_vat_number: \" \",\r\n            state: \" \",\r\n            country: \" \",\r\n            Address: \" \",\r\n            address_two: \" \",\r\n            short_description: \" \",\r\n            image: \" \",\r\n            \r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Customer'\r\n    },\r\n/* eslint-disable camelcase */\r\n  methods: {\r\n      async addCustomer() {\r\n            const first_name = this.first_name;\r\n            const middle_name = this.middle_name;\r\n            const last_name = this.last_name;\r\n            const gender = this.gender;\r\n            const email = this.email;\r\n            const description = this.description;\r\n            const product = this.product;\r\n            const state = this.state;\r\n            const date_of_birth = this.date_of_birth;\r\n            const websites = this.websites;\r\n            const customer_group = this.customer_group;\r\n            const tax_vat_number = this.tax_vat_number;\r\n            const phone = this.phone;\r\n            const zipcode = this.zipcode;\r\n            const name_prefix = this.name_prefix;\r\n            const name_suffix = this.name_suffix;\r\n            const country = this.country;\r\n            const Address = this.Address;\r\n            const address_two = this.address_two;\r\n            const short_description = this.short_description;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CUSTOMERS,\r\n                variables: {\r\n                    first_name,\r\n                    middle_name,\r\n                    last_name,\r\n                    gender,\r\n                    email,\r\n                    description,\r\n                    product,\r\n                    state,\r\n                    date_of_birth,\r\n                    tax_vat_number,\r\n                    websites,\r\n                    customer_group,\r\n                    phone,\r\n                    zipcode,\r\n                    name_prefix,\r\n                    name_suffix,\r\n                    country,\r\n                    Address,\r\n                    address_two,\r\n                    short_description,\r\n                    image,\r\n                 },\r\n        update: (cache, { data: { insertCustomers }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCustomer = insertCustomers.returning;\r\n                            console.log(insertedCustomer)\r\n                            cache.writeQuery({\r\n                                query: customers\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/all-customers'})\r\n                }).catch(err => console.log(err));\r\n                    this.first_name = ' ';\r\n                    this.middle_name = ' ';\r\n                    this.last_name = ' ';\r\n                    this.gender = ' ';\r\n                    this.email = ' ';\r\n                    this.description = ' ';\r\n                    this.product = ' ';\r\n                    this.state = ' ';\r\n                    this.date_of_birth = ' ';\r\n                    this.websites = ' ';\r\n                    this.customer_group = ' ';\r\n                    this.tax_vat_number = ' ';\r\n                    this.phone = ' ';\r\n                    this.zipcode = ' ';\r\n                    this.name_prefix = ' ';\r\n                    this.name_suffix = ' ';\r\n                    this.country = ' ';\r\n                    this.Address = ' ';\r\n                    this.address_two = ' ';\r\n                    this.short_description = ' ';\r\n                    this.image = ' ';\r\n                },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-page.vue",["1116","1117","1118","1119","1120","1121","1122"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"pageAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addPage\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Page Name</td>\r\n                        <td><FormulateInput v-model=\"title\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Page Url</td>\r\n                        <td><FormulateInput v-model=\"url_key\" type=\"url\" label=\"Product URL\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Content</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"pageDescription\" v-model=\"content\" />\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                        <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput v-model=\"meta_title\" type=\"text\" label=\"Product Url\" required /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput v-model=\"meta_keywords\" type=\"text\" label=\"Product Keywords\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  type=\"textarea\" v-model=\"meta_description\" label=\"Product Description\" rows=\"10\" cols=\"50\" /></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { pages } from \"~/apollo/queries/content/pages\";\r\n\r\nconst ADD_PAGES = gql`\r\n    mutation ($title:String!,$meta_description:String,$meta_keywords:String,$content:String,$meta_title:String!,$url_key:String){\r\n    insert_pages(objects: {title: $title, meta_description: $meta_description, meta_keywords: $meta_keywords, content: $content, meta_title: $meta_title, url_key: $url_key}) {\r\n        affected_rows\r\n        returning {\r\n            title\r\n            meta_description\r\n            meta_keywords\r\n            content\r\n            meta_title\r\n            url_key\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n        meta_keywords: [],\r\n        title: \" \",\r\n        meta_description: \" \",\r\n        content: \" \",\r\n        meta_title: \" \",\r\n        url_key: \" \",\r\n      }\r\n  },\r\n  /* eslint-disable camelcase */\r\n\r\n  methods: {\r\n      async addPage() {\r\n            const title = this.title;\r\n            const content = this.content;\r\n            const meta_description = this.meta_description;\r\n            const meta_keywords = this.meta_keywords;\r\n            const meta_title = this.meta_title;\r\n            const url_key = this.url_key;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_PAGES,\r\n                variables: {\r\n                    title,\r\n                    meta_description,\r\n                    meta_keywords,\r\n                    content,\r\n                    meta_title,\r\n                    url_key,\r\n                 },\r\n        update: (cache, { data: { insertPages }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedPage = insertPages.returning;\r\n                            console.log(insertedPage)\r\n                            cache.writeQuery({\r\n                                query: pages\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/pages'})\r\n                }).catch(err => console.log(err));\r\n                this.title = ' ';\r\n                this.meta_description = ' ';\r\n                this.meta_keywords = ' ';\r\n                this.content = ' ';\r\n                this.meta_title = ' ';\r\n                this.url_key = ' ';\r\n            },\r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Page'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-product.vue",["1123","1124","1125","1126","1127","1128","1129","1130","1131"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\" >\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"productAddOptions\">\r\n                <li><a href=\"/admin/add-new/add-new-attribute\">\r\n                    <FormulateInput type=\"button\" label=\"Add Attribute\" /></a></li>\r\n                <li>\r\n                  <FormulateInput type=\"submit\" @click=\"addProduct\" label=\"Save\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Product Type</td>\r\n              <td>\r\n                <FormulateInput v-model=\"type\" name=\"productType\" type=\"text\" label=\"What type of product is this?\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Attribute</td>\r\n              <td>\r\n                <FormulateInput v-model=\"attribute\" name=\"productAttribute\" type=\"text\"\r\n                  label=\"Example is apple, bag, etc\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Product Name</td>\r\n              <td>\r\n                <FormulateInput v-model=\"name\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Price</td>\r\n              <td>\r\n                <FormulateInput v-model=\"price\" type=\"text\" placeholder=\"$\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Tax Class</td>\r\n              <td>\r\n                <FormulateInput v-model=\"tax_class\" name=\"productTax\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Quantity</td>\r\n              <td>\r\n                <FormulateInput v-model=\"quantity_per_source\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Stock</td>\r\n              <td>\r\n                <FormulateInput v-model=\"stock_status\" type=\"text\" name=\"stockStatus\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Height</td>\r\n              <td>\r\n                <FormulateInput v-model=\"height\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Weight</td>\r\n              <td>\r\n                <FormulateInput v-model=\"weight\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Visibility</td>\r\n              <td>\r\n                <FormulateInput v-model=\"visibility\" name=\"productVisibility\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Categories</td>\r\n              <td>\r\n                <FormulateInput v-model=\"categories\" name=\"productCategory\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Country of manufacture</td>\r\n              <td>\r\n                <FormulateInput v-model=\"manufacture\" name=\"productManufacture\" type=\"text\"\r\n                  label=\"Where is this product made?\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Size</td>\r\n              <td>\r\n                <FormulateInput v-model=\"size\" name=\"productSize\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Format</td>\r\n              <td>\r\n                <FormulateInput v-model=\"format\" name=\"productFormat\" type=\"text\" label=\"Downloadable or Shipped\" />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Content\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Short Description</td>\r\n                      <td>\r\n                        <div class=\"form-check form-switch\">\r\n                          <FormulateInput v-model=\"short_description\" type=\"textarea\" label=\"Enter a short description\"\r\n                            validation=\"required|max:50,length\" validation-name=\"excerpt\" error-behavior=\"live\"\r\n                            :help=\"`Keep it under 50 characters. ${50 - short_description.length} left.`\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Description</td>\r\n                      <td>\r\n                        <div class=\"form-check form-switch\">\r\n                          <vue-simplemde id=\"longDescription\" v-model=\"content\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingThree\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Images and Videos\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>\r\n              </td>\r\n            </div>\r\n          </div>\r\n          <div class=\"accordion-item\">\r\n            <h2 id=\"headingFour\" class=\"accordion-header\">\r\n              <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                Search Engine Optimization\r\n              </FormulateInput>\r\n            </h2>\r\n            <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n              data-mdb-parent=\"#accordionExample\">\r\n              <div class=\"accordion-body\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to\r\n                        potential customers using search engine like Google, Bing, etc.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Meta Title</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"meta_title\" type=\"text\" label=\"Product Url\" required />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Meta Keywords</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"meta_keywords\" type=\"text\" label=\"Product Keywords\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Meta Description</td>\r\n                      <td>\r\n                        <FormulateInput type=\"textarea\" v-model=\"meta_description\" label=\"Product Description\" rows=\"10\"\r\n                          cols=\"50\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Product Url</td>\r\n                      <td>\r\n                        <FormulateInput v-model=\"meta_url\" type=\"url\" label=\"Product URL\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"accordion-item\">\r\n            <h2 id=\"headingFive\" class=\"accordion-header\">\r\n              <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                Upload Product File(s)\r\n              </FormulateInput>\r\n            </h2>\r\n            <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n              data-mdb-parent=\"#accordionExample\">\r\n              <div class=\"accordion-body\">\r\n                <td><FormulateInput type=\"file\" name=\"file\" v-model=\"file\" label=\"Select your files to upload\" help=\"Select one or more files to upload\" multiple/></td>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport {\r\n    products\r\n  } from \"~/apollo/queries/shop/products\";\r\n  import categories from \"~/apollo/queries/shop/categories\"\r\n  // import countries from \"~/apollo/queries/shop/countries\"\r\n  // import attributes from \"~/apollo/queries/shop/attributes\"\r\n\r\n  const ADD_PRODUCTS = gql `\r\n    mutation ($thumbnail: String!,$name: String!,$attribute_set: String!,$price: String!,$quantity_per_source: String!,$salable_quantity: String!,$visibility: String!,$websites: String!,$product: String!,$tax_class: String!,$stock_status: String!,$weight: String!,$manufacture: String!,$categories: String!,$country: String!,$size: String!,$format: String!,$height: String!,$content: String!,$short_description: String!,$image: Upload!,$meta_title: String!,$meta_keywords: String!,$meta_description: String!,$meta_url: String!,$file: Upload!,$type: String){\r\n    insert_products(objects: {thumbnail: $thumbnail,name: $name,attribute_set: $attribute_set,price: $price,quantity_per_source: $quantity_per_source,salable_quantity: $salable_quantity,visibility: $visibility,manufacture: $manufacture,categories: $categories,websites: $websites,product: $product,tax_class: $tax_class,stock_status: $stock_status,weight: $weight,country: $country,size: $size,format: $format,height: $height,content: $content,short_description: $short_description,image: $image,meta_title: $meta_title,meta_keywords: $meta_keywords,meta_description: $meta_description,meta_url: $meta_url,file: $file,type: $type}) {\r\n        affected_rows\r\n        returning {\r\n            thumbnail\r\n            name\r\n            attribute_set\r\n            price\r\n            quantity_per_source\r\n            salable_quantity\r\n            visibility\r\n            manufacture\r\n            categories\r\n            websites\r\n            product\r\n            tax_class\r\n            stock_status\r\n            weight\r\n            country\r\n            size\r\n            format\r\n            height\r\n            content\r\n            short_description\r\n            image\r\n            meta_title\r\n            meta_keywords\r\n            meta_description\r\n            meta_url\r\n            file\r\n            type\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        categories: [],\r\n        countries: [],\r\n        attributes: [],\r\n        thumbnail: \" \",\r\n        name: \" \",\r\n        attribute_set: \" \",\r\n        price: \" \",\r\n        quantity_per_source: \" \",\r\n        salable_quantity: \" \",\r\n        visibility: \" \",\r\n        websites: \" \",\r\n        product: \" \",\r\n        tax_class: \" \",\r\n        manufacture: \" \",\r\n        stock_status: \" \",\r\n        weight: \" \",\r\n        country: \" \",\r\n        size: \" \",\r\n        format: \" \",\r\n        height: \" \",\r\n        content: \" \",\r\n        short_description: \" \",\r\n        image: \" \",\r\n        meta_title: \" \",\r\n        meta_keywords: \" \",\r\n        meta_description: \" \",\r\n        meta_url: \" \",\r\n        file: \" \",\r\n        type: \" \",\r\n        show: true\r\n      }\r\n    },\r\n    head: {\r\n      title: 'Add New Product'\r\n    },\r\n\r\n    methods: {\r\n      async addProduct({ target }) {\r\n        const thumbnail = this.thumbnail;\r\n        const name = this.name;\r\n        // eslint-disable-next-line camelcase\r\n        const attribute_set = this.attribute_set;\r\n        const price = this.price;\r\n        // eslint-disable-next-line camelcase\r\n        const quantity_per_source = this.quantity_per_source;\r\n        // eslint-disable-next-line camelcase\r\n        const salable_quantity = this.salable_quantity;\r\n        const visibility = this.visibility;\r\n        const manufacture = this.manufacture;\r\n        const categories = this.categories;\r\n        const websites = this.websites;\r\n        const product = this.product;\r\n        // eslint-disable-next-line camelcase\r\n        const tax_class = this.tax_class;\r\n        // eslint-disable-next-line camelcase\r\n        const stock_status = this.stock_status;\r\n        const weight = this.weight;\r\n        const country = this.country;\r\n        const size = this.size;\r\n        const format = this.format;\r\n        // eslint-disable-next-line camelcase\r\n        const height = this.height;\r\n        const content = this.content;\r\n        // eslint-disable-next-line camelcase\r\n        const short_description = this.short_description;\r\n        // const image = this.image;\r\n        // eslint-disable-next-line camelcase\r\n        const meta_title = this.meta_title;\r\n        // eslint-disable-next-line camelcase\r\n        const meta_keywords = this.meta_keywords;\r\n        // eslint-disable-next-line camelcase\r\n        const meta_description = this.meta_description;\r\n        // eslint-disable-next-line camelcase\r\n        const meta_url = this.meta_url;\r\n        const file = this.file;\r\n        const type = this.type;\r\n        \r\n        await this.$apollo.mutate({\r\n          mutation: ADD_PRODUCTS,\r\n          variables: {\r\n            thumbnail,\r\n            name,\r\n            attribute_set,\r\n            price,\r\n            quantity_per_source,\r\n            salable_quantity,\r\n            visibility,\r\n            manufacture,\r\n            categories,\r\n            websites,\r\n            product,\r\n            tax_class,\r\n            stock_status,\r\n            weight,\r\n            country,\r\n            size,\r\n            format,\r\n            height,\r\n            content,\r\n            short_description,\r\n            image: target.files[0],\r\n            meta_title,\r\n            meta_keywords,\r\n            meta_description,\r\n            meta_url,\r\n            file,\r\n            type,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertCategories,\r\n              insertCountries\r\n            }\r\n          }) => {\r\n            // Read data from cache for this query\r\n            try {\r\n              const insertedCategory = insertCategories.returning;\r\n              const insertedCountries = insertCountries.returning;\r\n              console.log(insertedCategory, insertedCountries)\r\n              cache.writeQuery({\r\n                query: products\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../shop/products'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.thumbnail = ' ';\r\n        this.name = ' ';\r\n        this.attribute_set = ' ';\r\n        this.price = ' ';\r\n        this.quantity_per_source = ' ';\r\n        this.salable_quantity = ' ';\r\n        this.visibility = ' ';\r\n        this.manufacture = ' ';\r\n        this.categories = ' ';\r\n        this.websites = ' ';\r\n        this.product = ' ';\r\n        this.tax_class = ' ';\r\n        this.stock_status = ' ';\r\n        this.weight = ' ';\r\n        this.country = ' ';\r\n        this.size = ' ';\r\n        this.format = ' ';\r\n        this.height = ' ';\r\n        this.content = ' ';\r\n        this.short_description = ' ';\r\n        this.image = ' ';\r\n        this.meta_title = ' ';\r\n        this.meta_keywords = ' ';\r\n        this.meta_description = ' ';\r\n        this.meta_url = ' ';\r\n        this.file = ' ';\r\n        this.type = ' ';\r\n      },\r\n    },\r\n    apollo: {\r\n      categories: {\r\n        prefetch: true,\r\n        query: categories\r\n      },\r\n      /* countries: {\r\n          prefetch: true,\r\n          query: countries\r\n          },\r\n          attributes: {\r\n          prefetch: true,\r\n          query: attributes\r\n          } */\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-project.vue",["1132","1133","1134","1135","1136","1137","1138","1139"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"articleAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-tag\"><FormulateInput type=\"button\">Add New Tag</FormulateInput></a></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addArticle\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Article Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Categories</td>\r\n                        <td><FormulateInput type=\"select\" :options=\"categories.name\" v-model=\"categories\" name=\"Select\">\r\n                            </FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\" cols=\"50\" rows=\"10\" label=\"Add a short Description\"></FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"articleDescription\" v-model=\"content\" />\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFive\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                        Related Products, Up-Sells, and Cross-Sells\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { articles } from \"~/apollo/queries/content/articles\";\r\nimport categories from '~/apollo/queries/shop/categories'\r\n\r\nconst ADD_ARTICLES = gql`\r\n    mutation ($name:String!,$excerpt:String,$categories:String,$content:String,$image:String){\r\n    insert_articles(objects: {name: $name, excerpt: $excerpt, categories: $categories, content: $content, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            excerpt\r\n            categories\r\n            content\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        categories: [],\r\n        name: \" \",\r\n        excerpt: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addArticle() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const excerpt = this.excerpt;\r\n            const categories = this.categories;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_ARTICLES,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                    categories,\r\n                    content,\r\n                    image,\r\n                },\r\n        update: (cache, { data: { insertCategories }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            console.log(insertedCategory)\r\n                            cache.writeQuery({\r\n                                query: articles\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/blog'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n                this.categories = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n            },\r\n            \r\n        },\r\n    apollo: {\r\n        categories: {\r\n        prefetch: true,\r\n        query: categories\r\n        }\r\n    }, \r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Project'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-report.vue",["1140","1141","1142","1143","1144","1145"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" label=\"Save Customer\" @click=\"addCustomer\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Account Information</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <!--<tr>\r\n                      <td style=\"text-align: right;\">Customer Since</td>\r\n                      <client-only>\r\n                      <td><FormulateInput id=\"currentDate\" v-model=\"customer_since\" type=\"text\" disabled /></td>\r\n                      </client-only>\r\n                    </tr>-->\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Prefix</td>\r\n                      <td><FormulateInput v-model=\"name_prefix\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput v-model=\"first_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Middle Name/Initial</td>\r\n                      <td><FormulateInput v-model=\"middle_name\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput v-model=\"last_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Suffix</td>\r\n                      <td><FormulateInput v-model=\"name_suffix\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput v-model=\"email\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Date of Birth</td>\r\n                      <td><FormulateInput v-model=\"date_of_birth\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Phone Number</td>\r\n                      <td><FormulateInput v-model=\"phone\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax/VAT Number</td>\r\n                      <td><FormulateInput v-model=\"tax_vat_number\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gender</td>\r\n                      <td><FormulateInput id=\"gender\" v-model=\"gender\" name=\"gender\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">About Customer</td>\r\n                      <td><FormulateInput id=\"aboutCustomer\" v-model=\"short_description\" type=\"textarea\" name=\"aboutCustomer\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 1</td>\r\n                      <td><FormulateInput v-model=\"Address\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 2</td>\r\n                      <td><FormulateInput v-model=\"address_two\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">State</td>\r\n                      <td><FormulateInput id=\"state\" v-model=\"state\" name=\"state\" :options=\"states.name\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Postal Code</td>\r\n                      <td><FormulateInput v-model=\"zipcode\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Country</td>\r\n                      <td><FormulateInput id=\"country\" v-model=\"country\" name=\"country\" :options=\"countries.name\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Image</td>\r\n                      <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport customers from \"~/apollo/queries/customers/customers\"\r\n\r\nconst ADD_CUSTOMERS = gql`\r\n    mutation ($first_name:String!,$middle_name:String!,$last_name:String!,$gender:String!,$email:String!,$description:String!,$date_of_birth:String!,$websites:String!,$customer_group:String!,$phone:String!,$zipcode:String!,$name_prefix:String!,$name_suffix:String!,$product:String!,$state:String!,$country:String!,$tax_vat_number: String!,$Address:String!,$address_two:String!,$short_description:String!,$image: String){\r\n    insert_customers(objects: {first_name: $first_name, middle_name: $middle_name, last_name: $last_name, gender: $gender, email: $email, description: $description, product: $product, state: $state, date_of_birth: $date_of_birth, websites: $websites, customer_group: $customer_group, phone: $phone, zipcode: $zipcode, name_suffix: $name_suffix, name_prefix: $name_prefix, country: $country, Address: $Address, address_two: $address_two, tax_vat_number: $tax_vat_number, short_description: $short_description, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            first_name\r\n            middle_name\r\n            last_name\r\n            gender\r\n            email\r\n            description\r\n            product\r\n            state\r\n            date_of_birth\r\n            websites\r\n            customer_group\r\n            phone\r\n            zipcode\r\n            name_prefix\r\n            name_suffix\r\n            tax_vat_number\r\n            country\r\n            Address\r\n            address_two\r\n            short_description\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n            first_name: \" \",\r\n            middle_name: \" \",\r\n            last_name: \" \",\r\n            gender: \" \",\r\n            email: \" \",\r\n            description: \" \",\r\n            date_of_birth: \" \",\r\n            websites: \" \",\r\n            customer_group: \" \",\r\n            phone: \" \",\r\n            product: \" \",\r\n            zipcode: \" \",\r\n            name_prefix: \" \",\r\n            name_suffix: \" \",\r\n            tax_vat_number: \" \",\r\n            state: \" \",\r\n            country: \" \",\r\n            Address: \" \",\r\n            address_two: \" \",\r\n            short_description: \" \",\r\n            image: \" \",\r\n            \r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Customer'\r\n    }, \r\n/* eslint-disable camelcase */\r\n   \r\n  methods: {\r\n      async addCustomer() {\r\n            const first_name = this.first_name;\r\n            const middle_name = this.middle_name;\r\n            const last_name = this.last_name;\r\n            const gender = this.gender;\r\n            const email = this.email;\r\n            const description = this.description;\r\n            const product = this.product;\r\n            const state = this.state;\r\n            const date_of_birth = this.date_of_birth;\r\n            const websites = this.websites;\r\n            const customer_group = this.customer_group;\r\n            const tax_vat_number = this.tax_vat_number;\r\n            const phone = this.phone;\r\n            const zipcode = this.zipcode;\r\n            const name_prefix = this.name_prefix;\r\n            const name_suffix = this.name_suffix;\r\n            const country = this.country;\r\n            const Address = this.Address;\r\n            const address_two = this.address_two;\r\n            const short_description = this.short_description;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CUSTOMERS,\r\n                variables: {\r\n                    first_name,\r\n                    middle_name,\r\n                    last_name,\r\n                    gender,\r\n                    email,\r\n                    description,\r\n                    product,\r\n                    state,\r\n                    date_of_birth,\r\n                    tax_vat_number,\r\n                    websites,\r\n                    customer_group,\r\n                    phone,\r\n                    zipcode,\r\n                    name_prefix,\r\n                    name_suffix,\r\n                    country,\r\n                    Address,\r\n                    address_two,\r\n                    short_description,\r\n                    image,\r\n                 },\r\n        update: (cache, { data: { insertCustomers }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCustomer = insertCustomers.returning;\r\n                            console.log(insertedCustomer)\r\n                            cache.writeQuery({\r\n                                query: customers\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/all-customers'})\r\n                }).catch(err => console.log(err));\r\n                    this.first_name = ' ';\r\n                    this.middle_name = ' ';\r\n                    this.last_name = ' ';\r\n                    this.gender = ' ';\r\n                    this.email = ' ';\r\n                    this.description = ' ';\r\n                    this.product = ' ';\r\n                    this.state = ' ';\r\n                    this.date_of_birth = ' ';\r\n                    this.websites = ' ';\r\n                    this.customer_group = ' ';\r\n                    this.tax_vat_number = ' ';\r\n                    this.phone = ' ';\r\n                    this.zipcode = ' ';\r\n                    this.name_prefix = ' ';\r\n                    this.name_suffix = ' ';\r\n                    this.country = ' ';\r\n                    this.Address = ' ';\r\n                    this.address_two = ' ';\r\n                    this.short_description = ' ';\r\n                    this.image = ' ';\r\n                },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-return.vue",["1146","1147","1148","1149","1150","1151"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"returnsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addReturn\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Returns Name</td>\r\n                        <td>\r\n                            <FormulateInput id=\"returnsName\" v-model=\"name\" type=\"returnsName\" required />\r\n                            <p for=\"name\">Name of the return</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Time limit of validity</td>\r\n                        <td>\r\n                            <FormulateInput id=\"returnsName\" v-model=\"validity\" type=\"returnsName\" required />\r\n                            <p for=\"validity\">How many days after the delivery date does the customer have to return a product?</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Returns prefix</td>\r\n                        <td>\r\n                            <FormulateInput id=\"returnsName\" v-model=\"return_prefix\" type=\"returnsName\" required />\r\n                            <p for=\"returnsPrefix\">Prefix used for returns name (e.g. RE00001).</p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { returns } from \"~/apollo/queries/sales/returns\";\r\n\r\nconst ADD_RETURNS = gql`\r\n    mutation ($name:String!,$validity:String!,$return_prefix:String){\r\n    insert_returns(objects: {name: $name, validity: $validity, return_prefix: $return_prefix}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            validity\r\n            return_prefix\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        validity: \" \",\r\n        return_prefix: \" \",\r\n      }\r\n  },\r\n    head: {\r\n        title: 'Add New Return'\r\n    }, \r\n   /* eslint-disable camelcase */\r\n  methods: {\r\n      async addReturn() {\r\n            const name = this.name;\r\n            const validity = this.validity;\r\n            const return_prefix = this.return_prefix;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_RETURNS,\r\n                variables: {\r\n                    name,\r\n                    validity,\r\n                    return_prefix,\r\n                 },\r\n        update: (cache, { data: { insertReturns }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedReturn = insertReturns.returning;\r\n                            console.log(insertedReturn)\r\n                            cache.writeQuery({\r\n                                query: returns\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../sales/returns'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.validity = ' ';\r\n                this.return_prefix = ' ';\r\n            },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n    width: 50%;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-review.vue",["1152","1153","1154","1155","1156","1157"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addReview\" label=\"Save Review\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create A New Review</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput v-model=\"first_name\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput v-model=\"last_name\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Website</td>\r\n                      <td><FormulateInput id=\"websites\" v-model=\"websites\" name=\"websites\" type=\"url\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Review Content</td>\r\n                      <td><vue-simplemde id=\"reviewDescription\" v-model=\"content\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport reviews from \"~/apollo/queries/marketing/reviews\"\r\n\r\nconst ADD_REVIEWS = gql`\r\n    mutation ($first_name:String!,$last_name:String!$websites:String!,$content:String){\r\n    insert_reviews(objects: {first_name: $first_name, last_name: $last_name, websites: $websites, content: $content}) {\r\n        affected_rows\r\n        returning {\r\n            first_name\r\n            last_name\r\n            websites\r\n            content\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n            first_name: \" \",\r\n            last_name: \" \",\r\n            websites: \" \",\r\n            content: \" \",\r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Review'\r\n    }, \r\n/* eslint-disable camelcase */\r\n   \r\n  methods: {\r\n      async addReview() {\r\n            const first_name = this.first_name;\r\n            const last_name = this.last_name;\r\n            const websites = this.websites;\r\n            const content = this.content;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_REVIEWS,\r\n                variables: {\r\n                    first_name,\r\n                    last_name,\r\n                    websites,\r\n                    content,\r\n                 },\r\n        update: (cache, { data: { insertReviews }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedReview = insertReviews.returning;\r\n                            console.log(insertedReview)\r\n                            cache.writeQuery({\r\n                                query: reviews\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../marketing/reviews'})\r\n                }).catch(err => console.log(err));\r\n                    this.first_name = ' ';\r\n                    this.last_name = ' ';\r\n                    this.websites = ' ';\r\n                    this.content = ' ';\r\n                }, \r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-role.vue",["1158","1159","1160","1161","1162","1163","1164"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"customerGroupAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addGroup\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Group Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Class</td>\r\n                        <td><FormulateInput type=\"text\" v-model=\"tax_class\" name=\"tax\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable camelcase */\r\nimport gql from \"graphql-tag\";\r\nimport { customer_group } from \"~/apollo/queries/customers/customerGroups\";\r\n// import tax from '~/apollo/queries/shop/tax'\r\n\r\nconst ADD_GROUPS = gql`\r\n    mutation ($name:String!,$tax_class:String){\r\n    insert_customer_group(objects: {name: $name, tax_class: $tax_class}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            tax_class\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        tax_class: [],\r\n        name: \" \",\r\n      }\r\n  },\r\n  methods: {\r\n      async addGroup() {\r\n            const name = this.name;\r\n            const tax_class = this.tax_class;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_GROUPS,\r\n                variables: {\r\n                    name,\r\n                    tax_class,\r\n                },\r\n        update: (cache, { data: { insertTax }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTax = insertTax.returning;\r\n                            console.log(insertedTax)\r\n                            cache.writeQuery({\r\n                                query: customer_group\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/customer-groups'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.tax_class = ' ';\r\n            },\r\n        },\r\n    /* apollo: {\r\n        tax: {\r\n        prefetch: true,\r\n        query: tax\r\n        } \r\n    }, */\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Permissions'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-segment.vue",["1165","1166","1167","1168","1169","1170","1171","1172"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"segmentAddOptions\">\r\n                            <li><FormulateInput type=\"reset\" label=\"Reset\" /></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addSegment\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Segment Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput\r\n  type=\"textarea\" id=\"description\" v-model=\"description\" name=\"description\" cols=\"50\" rows=\"10\" label=\"Add a short Description\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Assigned to Website</td>\r\n                        <td><FormulateInput v-model=\"website\" name=\"website\" type=\"url\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { segments } from \"~/apollo/queries/customers/segments.gql\";\r\n\r\nconst ADD_SEGMENTS = gql`\r\n    mutation ($name:String!,$description:String,$website:String,$status:String,$apply_to:String){\r\n    insert_segments(objects: {name: $name, description: $description, website: $website, status: $status, apply_to: $apply_to}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            status\r\n            website\r\n            description\r\n            apply_to\r\n            }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        website: \" \",\r\n        name: \" \",\r\n        description: \" \",\r\n        status: \" \",\r\n        apply_to: \" \",\r\n\r\n      }\r\n  },\r\n  methods: {/* eslint-disable camelcase */\r\n      async addSegment() {\r\n            const name = this.name;\r\n            const status = this.status;\r\n            const description = this.description;\r\n            const website = this.website;\r\n            const apply_to = this.apply_to;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_SEGMENTS,\r\n                variables: {\r\n                    name,\r\n                    description,\r\n                    website,\r\n                    status,\r\n                    apply_to,\r\n                },\r\n        update: (cache, { data: { insertSegments }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedSegment = insertSegments.returning;\r\n                            console.log(insertedSegment)\r\n                            cache.writeQuery({\r\n                                query: segments\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/segments'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.description = ' ';\r\n                this.website = ' ';\r\n                this.status = ' ';\r\n                this.apply_to = ' ';\r\n            },\r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Segment'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-shipment.vue",["1173","1174","1175","1176","1177","1178","1179"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"shipmentsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addShipment\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Carrier Name</td>\r\n                        <td><FormulateInput id=\"shipmentsName\" v-model=\"carrier_name\" type=\"shipmentsName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Transit Time</td>\r\n                        <td><FormulateInput id=\"shipmentsTime\" v-model=\"transit_time\" type=\"shipmentsTime\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Speed grade</td>\r\n                        <td><FormulateInput id=\"shipmentsSpeed\" v-model=\"speed_grade\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tracking URL</td>\r\n                        <td><FormulateInput id=\"shipmentsTracking\" v-model=\"tracking_url\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Logo</td>\r\n                            <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { shipments } from \"~/apollo/queries/sales/shipments\";\r\n\r\nconst ADD_SHIPMENTS = gql`\r\n    mutation ($carrier_name:String!,$transit_time:String!,$image:String!,$tracking_url:String!,$speed_grade:String!,$product:String!){\r\n    insert_shipments(objects: {carrier_name: $carrier_name, transit_time: $transit_time, image: $image, tracking_url: $tracking_url, product: $product, speed_grade: $speed_grade}) {\r\n        affected_rows\r\n        returning {\r\n            carrier_name\r\n            transit_time\r\n            image\r\n            tracking_url\r\n            speed_grade\r\n            product\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        carrier_name: \" \",\r\n        transit_time: \" \",\r\n        image: \" \",\r\n        tracking_url: \" \",\r\n        speed_grade: \" \",\r\n        product: \" \",\r\n        \r\n      }\r\n  },\r\n    head: {\r\n        title: 'Add New Shipment'\r\n    }, \r\n   /* eslint-disable camelcase */\r\n  methods: {\r\n      async addShipment() {\r\n            const carrier_name = this.carrier_name;\r\n            const transit_time = this.transit_time;\r\n            const image = this.image;\r\n            const tracking_url = this.tracking_url;\r\n            const speed_grade = this.speed_grade;\r\n            const product = this.product;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_SHIPMENTS,\r\n                variables: {\r\n                    carrier_name,\r\n                    transit_time,\r\n                    image,\r\n                    tracking_url,\r\n                    speed_grade,\r\n                    product,\r\n                 },\r\n        update: (cache, { data: { insertShipments }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedShipment = insertShipments.returning;\r\n                            console.log(insertedShipment)\r\n                            cache.writeQuery({\r\n                                query: shipments\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../sales/shipments'})\r\n                }).catch(err => console.log(err));\r\n                this.carrier_name = ' ';\r\n                this.transit_time = ' ';\r\n                this.image = ' ';\r\n                this.tracking_url = ' ';\r\n                this.speed_grade = ' ';\r\n                this.product = ' ';\r\n            },\r\n            onFileAdded(e) {},\r\n            onError(e) {},\r\n            onSuccess(e) {},\r\n            onComplete(e) {}\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n    width: 50%;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-staffmembers.vue",["1180","1181","1182","1183","1184","1185"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"staffMemberAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addStaff\" label=\"Save\" /></li>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"staffMemberActive\">\r\n                            <li><FormulateInput v-model=\"value\" type=\"checkbox\" label=\"User is active\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">First Name</td>\r\n                        <td><FormulateInput v-model=\"first_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Last Name</td>\r\n                        <td><FormulateInput v-model=\"last_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Email Address</td>\r\n                        <td><FormulateInput v-model=\"staff_email\" type=\"text\" name=\"tax\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable camelcase */\r\nimport gql from \"graphql-tag\";\r\nimport { user } from \"~/apollo/queries/system/users\";\r\n// import tax from '~/apollo/queries/shop/tax'\r\n\r\nconst ADD_USER = gql`\r\n    mutation ($first_name:String!,$last_name:String!,$value:String!,$staff_email:String){\r\n    insert_user(objects: {first_name: $first_name, last_name: $last_name, staff_email: $staff_email, value: $value}) {\r\n        affected_rows\r\n        returning {\r\n            first_name\r\n            last_name\r\n            staff_email\r\n            value\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        staff_email: [],\r\n        first_name: \" \",\r\n        last_name: \" \",\r\n        value: \" \",\r\n      }\r\n  },\r\n  methods: {\r\n      async addStaff() {\r\n            const first_name = this.first_name;\r\n            const last_name = this.last_name;\r\n            const staff_email = this.staff_email;\r\n            const value = this.value;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_USER,\r\n                variables: {\r\n                    first_name,\r\n                    last_name,\r\n                    staff_email,\r\n                    value,\r\n                },\r\n        update: (cache, { data: { insertStaffMember }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedStaffMember = insertStaffMember.returning;\r\n                            console.log(insertedStaffMember)\r\n                            cache.writeQuery({\r\n                                query: user\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../system/users'})\r\n                }).catch(err => console.log(err));\r\n                this.first_name = ' ';\r\n                this.last_name = ' ';\r\n                this.staff_email = ' ';\r\n                this.value = ' ';\r\n            },\r\n        },\r\n    /* apollo: {\r\n        tax: {\r\n        prefetch: true,\r\n        query: tax\r\n        } \r\n    }, */\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Staff Members'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-state.vue",["1186","1187","1188","1189","1190","1191","1192","1193","1194"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"statesAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addState\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State Name</td>\r\n                        <td><FormulateInput id=\"statesName\" v-model=\"name\" type=\"statesName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State Country</td>\r\n                        <td><FormulateInput id=\"statesCountry\" v-model=\"country\" type=\"statesCountry\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  type=\"textarea\" id=\"tagDesc\" v-model=\"description\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { states } from \"~/apollo/queries/shop/states\";\r\n\r\nconst ADD_COUNTRIES = gql`\r\n    mutation ($name:String!,$description:String,$image:String,$country:String){\r\n    insert_states(objects: {name: $name, description: $description, image: $image, country: $country}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            description\r\n            image\r\n            country\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        description: \" \",\r\n        image: \" \",\r\n        country: \" \",\r\n      }\r\n  }, \r\n   \r\n  methods: {\r\n      async addState() {\r\n            const name = this.name;\r\n            const description = this.description;\r\n            const image = this.image;\r\n            const country = this.country;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_COUNTRIES,\r\n                variables: {\r\n                    name,\r\n                    description,\r\n                    image,\r\n                    country\r\n                 },\r\n        update: (cache, { data: { insertStates }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedState = insertStates.returning;\r\n                            console.log(insertedState)\r\n                            cache.writeQuery({\r\n                                query: states\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/states'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.description = ' ';\r\n                this.image = ' ';\r\n                this.country = ' ';\r\n            },\r\n        },\r\n    head: {\r\n        title: 'Add New State'\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-survey.vue",["1195","1196","1197","1198","1199","1200","1201","1202"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-tag.vue",["1203","1204","1205","1206","1207","1208","1209","1210","1211"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"tagsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addTag\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tag Name</td>\r\n                        <td><FormulateInput id=\"tagsName\" v-model=\"name\" type=\"tagsName\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  type=\"textarea\" id=\"tagDesc\" v-model=\"excerpt\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { tags } from \"~/apollo/queries/content/tags\";\r\n\r\nconst ADD_TAGS = gql`\r\n    mutation ($name:String!,$excerpt:String){\r\n    insert_tags(objects: {name: $name, excerpt: $excerpt}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            excerpt\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        excerpt: \" \",\r\n      }\r\n  }, \r\n   \r\n  methods: {\r\n      async addTag() {\r\n            const name = this.name;\r\n            const excerpt = this.excerpt;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_TAGS,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                 },\r\n        update: (cache, { data: { insertTags }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTag = insertTags.returning;\r\n                            console.log(insertedTag)\r\n                            cache.writeQuery({\r\n                                query: tags\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/tags'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n            },\r\n        },\r\n    head: {\r\n        title: 'Add New Tag'\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-taxrate.vue",["1212","1213","1214","1215","1216","1217"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">\r\n                        </th>\r\n                        <th scope=\"col\" class=\"taxRateAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addTaxRate\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country</td>\r\n                        <td><FormulateInput id=\"taxRateName\" v-model=\"country\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State</td>\r\n                        <td><FormulateInput id=\"taxRateName\" v-model=\"state\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Zip/Postalcode</td>\r\n                        <td><FormulateInput id=\"taxRateName\" v-model=\"postcode\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Rate Percent</td>\r\n                        <td><FormulateInput id=\"taxRateName\" v-model=\"rate_percent\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Identifier</td>\r\n                        <td><FormulateInput id=\"taxRateName\" v-model=\"tax_identifier\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Zip/Postcode is Range</td>\r\n                        <td><FormulateInput id=\"taxRateName\" v-model=\"zip_post_is_range\" type=\"text\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { taxRate } from \"~/apollo/queries/shop/taxrate\";\r\n\r\nconst ADD_TAX_RATE = gql`\r\n    mutation ($country:String! $default_store_view:String! $zip_post_is_range:Boolean! $tax_identifier:String! $state:String! $rate_percent:String! $postcode:String){\r\n    insert_tax_rate(objects: {country: $country, default_store_view: $default_store_view, zip_post_is_range: $zip_post_is_range, tax_identifier: $tax_identifier, state: $state, rate_percent: $rate_percent, postcode: $postcode}) {\r\n    affected_rows\r\n    returning {\r\n      country\r\n      default_store_view\r\n      postcode\r\n      rate_percent\r\n      state\r\n      tax_identifier\r\n      zip_post_is_range\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        country: \" \",\r\n        default_store_view: \" \",\r\n        postcode: \" \",\r\n        rate_percent: \" \",\r\n        state: \" \",\r\n        tax_identifier: \" \",\r\n        zip_post_is_range: \" \",\r\n      }\r\n  },\r\n    head: {\r\n        title: 'Add New Tax Rate'\r\n    }, \r\n/* eslint-disable camelcase */  \r\n  methods: {\r\n      async addTaxRate() {\r\n            const country = this.country;\r\n            const default_store_view = this.default_store_view;\r\n            const postcode = this.postcode;\r\n            const rate_percent = this.rate_percent;\r\n            const state = this.state;\r\n            const tax_identifier = this.tax_identifier;\r\n            const zip_post_is_range = this.zip_post_is_range;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_TAX_RATE,\r\n                variables: {\r\n                    country,\r\n                    default_store_view,\r\n                    postcode,\r\n                    rate_percent,\r\n                    state,\r\n                    tax_identifier,\r\n                    zip_post_is_range,\r\n                 },\r\n        update: (cache, { data: { insertTaxRates }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTaxRate = insertTaxRates.returning;\r\n                            console.log(insertedTaxRate)\r\n                            cache.writeQuery({\r\n                                query: taxRate\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/tax-rate'})\r\n                }).catch(err => console.log(err));\r\n                this.country = \" \";\r\n                this.default_store_view = \" \";\r\n                this.postcode = \" \";\r\n                this.rate_percent = \" \";\r\n                this.state = \" \";\r\n                this.tax_identifier = \" \";\r\n                this.zip_post_is_range = \" \";\r\n            },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-taxrule.vue",["1218","1219","1220","1221","1222","1223"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">\r\n                        </th>\r\n                        <th scope=\"col\" class=\"taxRuleAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addTaxRule\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Rule Name</td>\r\n                        <td><FormulateInput id=\"taxRuleName\" v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Rate</td>\r\n                        <td><FormulateInput id=\"taxRate\" v-model=\"tax_rate\" type=\"text\" required /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n// eslint-disable-next-line camelcase\r\nimport { tax_rule } from \"~/apollo/queries/shop/taxrule\";\r\n\r\nconst ADD_TAX_RULE = gql`\r\n    mutation ($name:String!,$tax_rate:String){\r\n    insert_tax_rule(objects: {name: $name, tax_rate: $tax_rate}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            tax_rate\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        name: \" \",\r\n        tax_rate: \" \",\r\n      }\r\n  },\r\n    head: {\r\n        title: 'Add New TaxRule'\r\n    }, \r\n   \r\n  methods: {\r\n      async addTaxRule() {\r\n            const name = this.name;\r\n            // eslint-disable-next-line camelcase\r\n            const tax_rate = this.tax_rate;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_TAX_RULE,\r\n                variables: {\r\n                    name,\r\n                    tax_rate,\r\n                 },\r\n        update: (cache, { data: { insertTaxRules }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTaxRule = insertTaxRules.returning;\r\n                            console.log(insertedTaxRule)\r\n                            cache.writeQuery({\r\n                                query: tax_rule\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/tax-rule'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.tax_rate = ' ';\r\n            },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-visit.vue",["1224","1225","1226","1227","1228","1229","1230","1231"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"articleAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-tag\"><FormulateInput type=\"button\">Add New Tag</FormulateInput></a></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addArticle\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Article Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Categories</td>\r\n                        <td><FormulateInput type=\"select\" :options=\"categories.name\" v-model=\"categories\" name=\"Select\">\r\n                            </FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\" cols=\"50\" rows=\"10\" label=\"Add a short Description\"></FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"articleDescription\" v-model=\"content\" />\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFive\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                        Related Products, Up-Sells, and Cross-Sells\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { articles } from \"~/apollo/queries/content/articles\";\r\nimport categories from '~/apollo/queries/shop/categories'\r\n\r\nconst ADD_ARTICLES = gql`\r\n    mutation ($name:String!,$excerpt:String,$categories:String,$content:String,$image:String){\r\n    insert_articles(objects: {name: $name, excerpt: $excerpt, categories: $categories, content: $content, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            name\r\n            excerpt\r\n            categories\r\n            content\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        categories: [],\r\n        name: \" \",\r\n        excerpt: \" \",\r\n        content: \" \",\r\n        image: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addArticle() {\r\n            const name = this.name;\r\n            const content = this.content;\r\n            const excerpt = this.excerpt;\r\n            const categories = this.categories;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_ARTICLES,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                    categories,\r\n                    content,\r\n                    image,\r\n                },\r\n        update: (cache, { data: { insertCategories }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            console.log(insertedCategory)\r\n                            cache.writeQuery({\r\n                                query: articles\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/blog'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n                this.categories = ' ';\r\n                this.content = ' ';\r\n                this.image = ' ';\r\n            },\r\n            \r\n        },\r\n    apollo: {\r\n        categories: {\r\n        prefetch: true,\r\n        query: categories\r\n        }\r\n    }, \r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New Visit'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-warehouse.vue",["1232","1233","1234","1235","1236","1237"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\blog.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\glossary.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\media-manager.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\pages.vue",["1238"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-page\"><FormulateInput type=\"button\">Add New Page</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Page ID</th>\r\n            <th>Page Title</th>\r\n            <th>Page Link</th>\r\n            <th>Page SEO Title</th>\r\n            <th>Page SEO Keywords</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"pages in pages\" :key=\"pages.id\">\r\n          <tr>\r\n            <td>{{ pages.id }}</td>\r\n            <td>{{ pages.title }}</td>\r\n            <td>{{ pages.url_key }}</td>\r\n            <td>{{ pages.meta_title }}</td>\r\n            <td>{{ pages.meta_keywords }}</td>\r\n            <td><a :href=\"`/admin/edit/page/${pages.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport pages from '~/apollo/queries/content/pages.gql'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      pages: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    pages: {\r\n      prefetch: true,\r\n      query: pages\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Pages'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\projects.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Content\\tags.vue",["1239"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-tag\"><FormulateInput type=\"button\">Add New Tags</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Tag ID</th>\r\n            <th>Tag Title</th>\r\n            <th>Tag Excerpt</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"tags in tags\" :key=\"tags.id\">\r\n          <tr>\r\n            <td>{{ tags.id }}</td>\r\n            <td>{{ tags.name }}</td>\r\n            <td>{{ tags.excerpt }}</td>\r\n            <td><a :href=\"`/admin/edit/tag/${tags.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import tags from '~/apollo/queries/content/tags'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tags: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    tags: {\r\n      prefetch: true,\r\n      query: tags\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Tags'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\Email\\_id.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\warehouse\\_id.vue",["1240","1241"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\taxrule\\_id.vue",["1242","1243","1244"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"tax_rule in tax_rules\" :key=\"tax_rule.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">\r\n                        </th>\r\n                        <th scope=\"col\" class=\"taxRuleAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addTaxRule\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Rule Name</td>\r\n                        <td><FormulateInput id=\"taxRuleName\" type=\"text\" required />{{ tax_rule.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Rate</td>\r\n                        <td><FormulateInput id=\"taxRate\" type=\"text\" required />{{ tax_rule.tax_rate }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable camelcase */\r\nimport gql from 'graphql-tag'\r\nimport tax_rules from '~/apollo/mutations/shop/taxrule'\r\nimport allTax_rules from '~/apollo/queries/shop/taxrule'\r\n\r\nconst DELETE_TAX_RULE = gql `\r\n  mutation delete_tax_rules($id: Int!){\r\n  delete_tax_rules(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_TAX_RULE = gql `\r\n  mutation update_tax_rules($id: Int!){\r\n  update_tax_rules(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Tax_rule'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteTax_rule(tax_rule){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_TAX_RULE,\r\n        variables: {\r\n          id: tax_rule.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTax_rules\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/tax_rules'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateTax_rule(tax_rule){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_TAX_RULE,\r\n        variables: {\r\n          id: tax_rule.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTax_rules\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    tax_rules: {\r\n      query: tax_rules,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\nologin.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\default.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\dashboard.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-fullfilment.vue",["1245","1246","1247","1248"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-knowledgebase.vue",["1249","1250","1251","1252"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-pdftemplates.vue",["1253","1254","1255","1256"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-warehouse copy.vue",["1257","1258","1259","1260","1261","1262"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\store\\services\\index.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\taxrate\\_id.vue",["1263","1264","1265"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"tax_rate in tax_rates\" :key=\"tax_rate.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">\r\n                        </th>\r\n                        <th scope=\"col\" class=\"taxRateAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addTaxRate\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country</td>\r\n                        <td><FormulateInput id=\"taxRateName\" type=\"text\" required />{{ tax_rate.country }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State</td>\r\n                        <td><FormulateInput id=\"taxRateName\" type=\"text\" />{{ tax_rate.state }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Zip/Postalcode</td>\r\n                        <td><FormulateInput id=\"taxRateName\" type=\"text\" />{{ tax_rate.postcode }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Rate Percent</td>\r\n                        <td><FormulateInput id=\"taxRateName\" type=\"text\" required />{{ tax_rate.rate_percent }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Identifier</td>\r\n                        <td><FormulateInput id=\"taxRateName\" type=\"text\" required />{{ tax_rate.tax_identifier }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Zip/Postcode is Range</td>\r\n                        <td><FormulateInput id=\"taxRateName\" type=\"text\" required />{{ tax_rate.zip_post_is_range }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable camelcase */\r\nimport gql from 'graphql-tag'\r\nimport tax_rates from '~/apollo/mutations/shop/taxrate'\r\nimport allTax_rates from '~/apollo/queries/shop/taxrate'\r\n\r\nconst DELETE_TAX_RATE = gql `\r\n  mutation delete_tax_rates($id: Int!){\r\n  delete_tax_rates(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_TAX_RATE = gql `\r\n  mutation update_tax_rates($id: Int!){\r\n  update_tax_rates(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Tax_rate'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteTax_rate(tax_rate){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_TAX_RATE,\r\n        variables: {\r\n          id: tax_rate.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTax_rates\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/sales/tax_rates'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateTax_rate(tax_rate){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_TAX_RATE,\r\n        variables: {\r\n          id: tax_rate.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTax_rates\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    tax_rates: {\r\n      query: tax_rates,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\formulate.config.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\apollo\\clientConfig.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\apollo-error-handler.js",["1266","1267"],"export default (error, nuxtContext) => {\r\n    console.log('Global error handler')\r\n    console.error(error)\r\n  }","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\tag\\_id.vue",["1268","1269","1270","1271"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"tag in tags\" :key=\"tag.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"tagsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addTag\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tag Name</td>\r\n                        <td><FormulateInput id=\"tagsName\" type=\"tagsName\" required />{{ tag.name }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  type=\"textarea\" id=\"tagDesc\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />{{ tag.excerpt }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport tags from '~/apollo/mutations/content/tags'\r\nimport allTags from '~/apollo/queries/content/tags'\r\n\r\nconst DELETE_TAG = gql `\r\n  mutation delete_tags($id: Int!){\r\n  delete_tags(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_TAG = gql `\r\n  mutation update_tags($id: Int!){\r\n  update_tags(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Tag'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteTag(tag){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_TAG,\r\n        variables: {\r\n          id: tag.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTags\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/content/tags'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateTag(tag){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_TAG,\r\n        variables: {\r\n          id: tag.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allTags\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    tags: {\r\n      query: tags,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\state\\_id.vue",["1272","1273","1274","1275"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"state in states\" :key=\"state.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"statesAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addState\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State Name</td>\r\n                        <td><FormulateInput id=\"statesName\" type=\"statesName\" required />{{ state.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State Country</td>\r\n                        <td><FormulateInput id=\"statesCountry\" type=\"statesCountry\" required />{{ state.country }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  type=\"textarea\" id=\"tagDesc\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />{{ state.description }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport states from '~/apollo/mutations/shop/states'\r\nimport allStates from '~/apollo/queries/shop/states'\r\n\r\nconst DELETE_STATE = gql `\r\n  mutation delete_states($id: Int!){\r\n  delete_states(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_STATE = gql `\r\n  mutation update_states($id: Int!){\r\n  update_states(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit State'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteState(state){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_STATE,\r\n        variables: {\r\n          id: state.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allStates\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/states'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateState(state){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_STATE,\r\n        variables: {\r\n          id: state.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allStates\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    states: {\r\n      query: states,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\shipment\\_id.vue",["1276","1277","1278"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"shipment in shipments\" :key=\"shipment.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"shipmentsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addShipment\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Carrier Name</td>\r\n                        <td><FormulateInput id=\"shipmentsName\" type=\"shipmentsName\" required />{{ shipment.carrier_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Transit Time</td>\r\n                        <td><FormulateInput id=\"shipmentsTime\" type=\"shipmentsTime\" required />{{ shipment.transit_time }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Speed grade</td>\r\n                        <td><FormulateInput id=\"shipmentsSpeed\" type=\"text\" />{{ shipment.speed_grade }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tracking URL</td>\r\n                        <td><FormulateInput id=\"shipmentsTracking\" type=\"text\" />{{ shipment.tracking_url }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Logo</td>\r\n                        <td>\r\n                            <td><FormulateInput type=\"image\" upload-url=\"/media\" name=\"headshot\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>{{ shipment.image }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport shipments from '~/apollo/mutations/sales/shipments'\r\nimport allShipments from '~/apollo/queries/sales/shipments'\r\n\r\nconst DELETE_SHIPMENT = gql `\r\n  mutation delete_shipments($id: Int!){\r\n  delete_shipments(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_SHIPMENT = gql `\r\n  mutation update_shipments($id: Int!){\r\n  update_shipments(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Shipment'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteShipment(shipment){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_SHIPMENT,\r\n        variables: {\r\n          id: shipment.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allShipments\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/sales/shipments'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateShipment(shipment){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_SHIPMENT,\r\n        variables: {\r\n          id: shipment.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allShipments\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    shipments: {\r\n      query: shipments,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n    width: 50%;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\segment\\_id.vue",["1279","1280","1281","1282"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"segment in segments\" :key=\"segment.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"segmentAddOptions\">\r\n                            <li><FormulateInput type=\"reset\" label=\"Reset\" /></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addSegment\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Segment Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ segment.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput\r\n  type=\"textarea\" id=\"description\" name=\"description\" cols=\"50\" rows=\"10\" label=\"Add a short Description\" />{{ segment.description }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Assigned to Website</td>\r\n                        <td><FormulateInput name=\"website\" type=\"url\" />{{ segment.website }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport segments from '~/apollo/mutations/customers/segments'\r\nimport allSegments from '~/apollo/queries/customers/segments'\r\n\r\nconst DELETE_SEGMENT = gql `\r\n  mutation delete_segments($id: Int!){\r\n  delete_segments(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_SEGMENT = gql `\r\n  mutation update_segments($id: Int!){\r\n  update_segments(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Segment'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteSegment(segment){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_SEGMENT,\r\n        variables: {\r\n          id: segment.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allSegments\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/segments/segments'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateSegment(segment){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_SEGMENT,\r\n        variables: {\r\n          id: segment.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allSegments\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    segments: {\r\n      query: segments,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\review\\_id.vue",["1283","1284","1285"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"review in reviews\" :key=\"review.id\"  method=\"POST\" @submit.prevent>\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addReview\" label=\"Save Review\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create A New Review</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput type=\"text\" />{{ review.first_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput type=\"text\" />{{ review.last_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Website</td>\r\n                      <td><FormulateInput id=\"websites\" name=\"websites\" type=\"url\" />{{ review.websites }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Review Content</td>\r\n                      <td><vue-simplemde id=\"reviewDescription\" />{{ review.content }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport reviews from '~/apollo/mutations/marketing/reviews'\r\nimport allReviews from '~/apollo/queries/marketing/reviews'\r\n\r\nconst DELETE_REVIEW = gql `\r\n  mutation delete_reviews($id: Int!){\r\n  delete_reviews(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql `\r\n  mutation update_reviews($id: Int!){\r\n  update_reviews(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Review'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteReview(review){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_REVIEW,\r\n        variables: {\r\n          id: review.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allReviews\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/marketing/reviews'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateReview(review){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_REVIEW,\r\n        variables: {\r\n          id: review.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allReviews\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    reviews: {\r\n      query: reviews,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\return\\_id.vue",["1286","1287","1288"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"returns in returns\" :key=\"returns.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"returnsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addReturn\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Returns Name</td>\r\n                        <td>\r\n                            <FormulateInput id=\"returnsName\" type=\"returnsName\" required />{{ returns.name }}\r\n                            <p for=\"name\">Name of the return</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Time limit of validity</td>\r\n                        <td>\r\n                            <FormulateInput id=\"returnsName\" type=\"returnsName\" required />{{ returns.name }}\r\n                            <p for=\"validity\">How many days after the delivery date does the customer have to return a product?</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Returns prefix</td>\r\n                        <td>\r\n                            <FormulateInput id=\"returnsName\" type=\"returnsName\" required />{{ returns.name }}\r\n                            <p for=\"returnsPrefix\">Prefix used for returns name (e.g. RE00001).</p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport returns from '~/apollo/mutations/sales/returns'\r\nimport allReturns from '~/apollo/queries/sales/returns'\r\n\r\nconst DELETE_RETURN = gql `\r\n  mutation delete_returns($id: Int!){\r\n  delete_returns(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_RETURN = gql `\r\n  mutation update_returns($id: Int!){\r\n  update_returns(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Return'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteReturn(returns){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_RETURN,\r\n        variables: {\r\n          id: returns.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allReturns\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/sales/returns'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateReturn(returns){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_RETURN,\r\n        variables: {\r\n          id: returns.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allReturns\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    returns: {\r\n      query: returns,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n    width: 50%;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\report\\_id.vue",["1289","1290"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"report in reports\" :key=\"report.id\" method=\"POST\" @submit.prevent>\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" label=\"Save Report\" @click=\"addReport\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Account Information</a>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <!--<tr>\r\n                      <td style=\"text-align: right;\">Customer Since</td>\r\n                      <client-only>\r\n                      <td><FormulateInput id=\"currentDate\" v-model=\"customer_since\" type=\"text\" disabled /></td>\r\n                      </client-only>\r\n                    </tr>-->\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Prefix</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.name_prefix }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ report.first_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Middle Name/Initial</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.middle_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ report.last_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Suffix</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.name_suffix }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ report.email }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Date of Birth</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.date_of_birth }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Phone Number</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.phone }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax/VAT Number</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.tax_vat_number }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gender</td>\r\n                      <td><FormulateInput id=\"gender\" name=\"gender\" type=\"text\" />{{ report.gender }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">About Customer</td>\r\n                      <td><FormulateInput id=\"aboutCustomer\" type=\"textarea\" name=\"aboutCustomer\" />{{ report.short_description }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 1</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.address }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 2</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.address_two }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">State</td>\r\n                      <td><FormulateInput id=\"state\" name=\"state\" :options=\"states.name\" />{{ report.state }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Postal Code</td>\r\n                      <td><FormulateInput type=\"text\" />{{ report.zipcode }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Country</td>\r\n                      <td><FormulateInput id=\"country\" name=\"country\" />{{ report.country }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport reports from '~/apollo/mutations/reports/reports'\r\nimport allReports from '~/apollo/queries/reports/reports'\r\n\r\nconst DELETE_REPORT = gql `\r\n  mutation delete_reports($id: Int!){\r\n  delete_reports(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_REPORT = gql `\r\n  mutation update_reports($id: Int!){\r\n  update_reports(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Report'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteReport(report){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_REPORT,\r\n        variables: {\r\n          id: report.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allReports\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/reports/reports'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateReport(report){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_REPORT,\r\n        variables: {\r\n          id: report.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allReports\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    reports: {\r\n      query: reports,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\projects\\_id.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\product\\_id.vue",["1291","1292","1293"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"product in products\" :key=\"product.id\" method=\"POST\" @submit.prevent>\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\" >\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"productAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" @click=\"addProduct\" label=\"Save\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Product Type</td>\r\n              <td>\r\n                <FormulateInput name=\"productType\" type=\"text\" label=\"What type of product is this?\" />{{ product.type }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Attribute</td>\r\n              <td>\r\n                <FormulateInput name=\"productAttribute\" type=\"text\"\r\n                  label=\"Example is apple, bag, etc\" />{{ product.attribute }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Product Name</td>\r\n              <td>\r\n                <FormulateInput type=\"text\" required />{{ product.name }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Price</td>\r\n              <td>\r\n                <FormulateInput type=\"text\" placeholder=\"$\" required />{{ product.price }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Tax Class</td>\r\n              <td>\r\n                <FormulateInput name=\"productTax\" type=\"text\" />{{ product.type_class }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Quantity</td>\r\n              <td>\r\n                <FormulateInput type=\"text\" />{{ product.quantity_per_source }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Stock</td>\r\n              <td>\r\n                <FormulateInput type=\"text\" name=\"stockStatus\" />{{ product.stock_status }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Height</td>\r\n              <td>\r\n                <FormulateInput type=\"text\" />{{ product.height }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Weight</td>\r\n              <td>\r\n                <FormulateInput type=\"text\" />{{ product.weight }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Visibility</td>\r\n              <td>\r\n                <FormulateInput name=\"productVisibility\" type=\"text\" />{{ product.visibility }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Categories</td>\r\n              <td>\r\n                <FormulateInput name=\"productCategory\" type=\"text\" />{{ product.categories }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Product of manufacture</td>\r\n              <td>\r\n                <FormulateInput name=\"productManufacture\" type=\"text\"\r\n                  label=\"Where is this product made?\" />{{ product.manufacture }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Size</td>\r\n              <td>\r\n                <FormulateInput name=\"productSize\" type=\"text\" />{{ product.size }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Format</td>\r\n              <td>\r\n                <FormulateInput name=\"productFormat\" type=\"text\" label=\"Downloadable or Shipped\" />{{ product.format }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br><br>\r\n      <div id=\"accordionExample\" class=\"accordion\">\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingOne\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Content\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Short Description</td>\r\n                      <td>\r\n                        <div class=\"form-check form-switch\">\r\n                          <FormulateInput type=\"textarea\" label=\"Enter a short description\"\r\n                            validation=\"required|max:50,length\" validation-name=\"excerpt\" error-behavior=\"live\"\r\n                            :help=\"`Keep it under 50 characters. ${50 - short_description.length} left.`\" />{{ product.short_description }}\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Description</td>\r\n                      <td>\r\n                        <div class=\"form-check form-switch\">\r\n                          <vue-simplemde id=\"longDescription\" />{{ product.content }}\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 id=\"headingThree\" class=\"accordion-header\">\r\n            <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n              data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Images and Videos\r\n            </FormulateInput>\r\n          </h2>\r\n          <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n            data-mdb-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n              <td><FormulateInput type=\"image\" upload-url=\"/media\" name=\"headshot\" label=\"Select an image to upload\"\r\n                help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\" />{{ product.image }}\r\n              </td>\r\n            </div>\r\n          </div>\r\n          <div class=\"accordion-item\">\r\n            <h2 id=\"headingFour\" class=\"accordion-header\">\r\n              <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                Search Engine Optimization\r\n              </FormulateInput>\r\n            </h2>\r\n            <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n              data-mdb-parent=\"#accordionExample\">\r\n              <div class=\"accordion-body\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to\r\n                        potential customers using search engine like Google, Bing, etc.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Meta Title</td>\r\n                      <td>\r\n                        <FormulateInput type=\"text\" label=\"Product Url\" required />{{ product.meta_title }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Meta Keywords</td>\r\n                      <td>\r\n                        <FormulateInput type=\"text\" label=\"Product Keywords\" />{{ product.meta_keywords }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Meta Description</td>\r\n                      <td>\r\n                        <FormulateInput type=\"textarea\" label=\"Product Description\" rows=\"10\"\r\n                          cols=\"50\" />{{ product.meta_description }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Product Url</td>\r\n                      <td>\r\n                        <FormulateInput type=\"url\" label=\"Product URL\" />{{ product.meta_url }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"accordion-item\">\r\n            <h2 id=\"headingFive\" class=\"accordion-header\">\r\n              <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                Upload Product File(s)\r\n              </FormulateInput>\r\n            </h2>\r\n            <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n              data-mdb-parent=\"#accordionExample\">\r\n              <div class=\"accordion-body\">\r\n                <td><FormulateInput type=\"file\" upload-url=\"/media\" name=\"file\" label=\"Select your documents to upload\"\r\n                  help=\"Select one or more files to upload\" validation=\"mime:video/mp4,text/plain,text/csv,application/pdf,audio/mpeg,audio/vorbis\" multiple /></td>{{ product.file }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport products from '~/apollo/mutations/shop/products'\r\nimport allProducts from '~/apollo/queries/shop/products'\r\n\r\nconst DELETE_PRODUCT = gql `\r\n  mutation delete_products($id: Int!){\r\n  delete_products(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_PRODUCT = gql `\r\n  mutation update_products($id: Int!){\r\n  update_products(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Product'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteProduct(product){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_PRODUCT,\r\n        variables: {\r\n          id: product.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allProducts\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/products'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateProduct(product){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_PRODUCT,\r\n        variables: {\r\n          id: product.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allProducts\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    products: {\r\n      query: products,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\page\\_id.vue",["1294","1295","1296"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"page in pages\" :key=\"page.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"pageAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addPage\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Page Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ page.title }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Page Url</td>\r\n                        <td><FormulateInput type=\"url\" label=\"Product URL\" />{{ page.url_key }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Content</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"pageDescription\" />{{ page.content }}\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                        <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput type=\"text\" label=\"Product Url\" required />{{ page.meta_title }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput type=\"text\" label=\"Product Keywords\" />{{ page.meta_keywords }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" />{{ page.meta_description }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport pages from '~/apollo/mutations/content/pages'\r\nimport allPages from '~/apollo/queries/content/pages'\r\n\r\nconst DELETE_PAGE = gql `\r\n  mutation delete_pages($id: Int!){\r\n  delete_pages(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_PAGE = gql `\r\n  mutation update_pages($id: Int!){\r\n  update_pages(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Page'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deletePage(page){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_PAGE,\r\n        variables: {\r\n          id: page.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allPages\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/content/pages'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updatePage(page){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_PAGE,\r\n        variables: {\r\n          id: page.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allPages\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    pages: {\r\n      query: pages,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\newslettersubscriber\\_id.vue",["1297","1298","1299","1300"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"newsletter in newsletter_subscribers\" :key=\"newsletter.id\"  method=\"POST\" @submit.prevent>\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addCustomer\" label=\"Save Customer\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Account Information</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <!--<tr>\r\n                      <td style=\"text-align: right;\">Customer Since</td>\r\n                      <client-only>\r\n                      <td><FormulateInput id=\"currentDate\" v-model=\"customer_since\" type=\"text\" disabled /></td>\r\n                      </client-only>\r\n                    </tr>-->\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Prefix</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.name_prefix }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ newsletter.first_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Middle Name/Initial</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.middle_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ newsletter.last_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Suffix</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.name_suffix }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ newsletter.email }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Date of Birth</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.date_of_birth }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Phone Number</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.phone }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax/VAT Number</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.tax_vat_number }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gender</td>\r\n                      <td><FormulateInput id=\"gender\" name=\"gender\" type=\"text\" />{{ newsletter.gender }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">About Customer</td>\r\n                      <td><FormulateInput\r\n  type=\"textarea\" id=\"aboutCustomer\" name=\"aboutCustomer\" validation=\"required|max:50,length\" error-behavior=\"live\"\r\n  :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\">{{ newsletter.short_description }}\r\n                        </FormulateInput></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 1</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.address }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 2</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.address_two }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">State</td>\r\n                      <td><FormulateInput id=\"state\" name=\"state\" type=\"select\" placeholder=\"Select a State\" />{{ newsletter.state }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Postal Code</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.zipcode }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Country</td>\r\n                      <td><FormulateInput id=\"country\" v-model=\"country\" name=\"country\" type=\"select\" placeholder=\"Select a Country\" />{{ newsletter.country }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\n// eslint-disable-next-line camelcase\r\nimport newsletter_subscribers from '~/apollo/mutations/marketing/newsletter_subscribers'\r\nimport allGlossaries from '~/apollo/queries/marketing/newsletter_subscribers'\r\n\r\nconst DELETE_GLOSSARY = gql `\r\n  mutation delete_newsletter_subscribers($id: Int!){\r\n  delete_newsletter_subscribers(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_GLOSSARY = gql `\r\n  mutation update_newsletter_subscribers($id: Int!){\r\n  update_newsletter_subscribers(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Newsletter Subscribers'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCountry(newsletter){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_GLOSSARY,\r\n        variables: {\r\n          id: newsletter.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allGlossaries\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/marketing/newsletter_subscribers'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCountry(newsletter){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_GLOSSARY,\r\n        variables: {\r\n          id: newsletter.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allGlossaries\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    newsletter_subscribers: {\r\n      query: newsletter_subscribers,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\newsletter\\_id.vue",["1301","1302","1303"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"newsletter in newsletters\" :key=\"newsletter.id\" method=\"POST\" @submit.prevent>\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addNewsletter\" label=\"Save Newsletter\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create a New Newsletter Customer</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Customer First Name</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.customer_first_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Cusotmer Last Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ newsletter.customer_last_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ newsletter.email }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Store</td>\r\n                      <td><FormulateInput type=\"text\" />{{ newsletter.store }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Website</td>\r\n                      <td><FormulateInput id=\"websites\" name=\"websites\" type=\"url\" />{{ newsletter.websites }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport newsletters from '~/apollo/mutations/marketing/newsletter_subscribers'\r\nimport allNewsletters from '~/apollo/queries/marketing/newsletter_subscribers'\r\n\r\nconst DELETE_NEWSLETTER = gql `\r\n  mutation delete_newsletters($id: Int!){\r\n  delete_newsletters(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_NEWSLETTER = gql `\r\n  mutation update_newsletters($id: Int!){\r\n  update_newsletters(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Newsletter'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteNewsletter(newsletter){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_NEWSLETTER,\r\n        variables: {\r\n          id: newsletter.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allNewsletters\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/marketing/newsletters'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateNewsletter(newsletter){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_NEWSLETTER,\r\n        variables: {\r\n          id: newsletter.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allNewsletters\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    newsletters: {\r\n      query: newsletters,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Header.vue",["1304"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Breadcrumbs.vue",["1305","1306"],"<template>\r\n    <div>\r\n      <section class=\"info3 cid-t0swL5imvs mbr-parallax-background\" id=\"info3-a\">\r\n    <div class=\"mbr-overlay\" style=\"opacity: 0.5; background-color: rgb(187, 187, 187);\">\r\n    </div>\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"card col-12 col-lg-10\" style=\"color: transparent;\">\r\n                <div class=\"card-wrapper\">\r\n                    <div class=\"card-box align-center\">\r\n                        <h4 class=\"card-title mbr-fonts-style align-center mb-4 display-1\">\r\n                            <strong><div v-for=\"(crumb, index) in crumbs\" :key=\"index\" property=\"itemListElement\" typeof=\"ListItem\" class=\"breadcrumb-item\"><p property=\"item\" typeof=\"WebPage\" :href=\"crumb.path\" ><span property=\"name\">{{$route.fullPath === crumb.path && title !== null ? title : crumb.title}}</span></p><meta property=\"position\" :content=\"index + 2\" /></div></strong>\r\n                        </h4>\r\n                        <p v-for=\"(crumb, index) in crumbs\" class=\"mbr-text mbr-fonts-style mb-4 display-7 breadcrumb-item pageTitle\" :key=\"index\" property=\"itemListElement\" typeof=\"ListItem\" style=\"color: black;font-size: 20px;\">\r\n                            {{$route.fullPath === crumb.path && title !== null ? title : crumb.title}}</p>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst titleCase = require('ap-style-title-case')\r\nexport default {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  computed: {\r\n    crumbs() {\r\n      const fullPath = this.$route.fullPath\r\n      const params = fullPath.startsWith('/')\r\n        ? fullPath.substring(1).split('/')\r\n        : fullPath.split('/')\r\n      const crumbs = []\r\n      let path = ''\r\n      params.forEach((param, index) => {\r\n        path = `${path}/${param}`\r\n        const match = this.$router.match(path)\r\n        if (match.name !== null) {\r\n          crumbs.push({\r\n            title: titleCase(param.replace(/-/g, ' ')),\r\n            ...match,\r\n          })\r\n        }\r\n      })\r\n      return crumbs\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.card {\r\n  box-shadow: none !important;\r\n  background-color: transparent !important;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\invoice\\_id.vue",["1307","1308","1309"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"invoice in invoices\" :key=\"invoice.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"eventAddOptions\">\r\n                            <li style=\"display:inline-block;\"><FormulateInput type=\"button\" @click=\"addInvoice\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Name</td>\r\n                        <td><FormulateInput name=\"customerName\" type=\"text\" label=\"Customer Name on the Invoice\" required />{{ invoice.customer_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Bill to Name</td>\r\n                        <td><FormulateInput name=\"orderNumber\" type=\"text\" label=\"Who should we bill to?\" required />{{ invoice.bill_to_name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Email</td>\r\n                        <td><FormulateInput type=\"text\" required label=\"Customer's Email used to email the invoice\" />{{ invoice.email }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Billing Address</td>\r\n                        <td><FormulateInput type=\"text\" label=\"Billing address for this invoice\" required />{{ invoice.billing_address }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Group</td>\r\n                        <td><FormulateInput type=\"text\" label=\"Group this customer belongs to\" />{{ invoice.customer_group }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Shipping Information</td>\r\n                        <td><FormulateInput name=\"shippingInformation\" type=\"text\" label=\"Shipping service used for shipping\" />{{ invoice.shipping_information }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Shipping and Handling</td>\r\n                        <td><FormulateInput name=\"shippingHandling\" type=\"text\" label=\"How much does shipping cost?\" />{{ invoice.shipping_and_handling }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Shipping Address</td>\r\n                        <td><FormulateInput name=\"shippingInformation\" type=\"text\" label=\"Where is this the address where the products are shipped to?\" />{{ invoice.shipping_address }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Payment Method</td>\r\n                        <td><FormulateInput name=\"payment\" type=\"text\" label=\"What payment method is used for this transaction?\" />{{ invoice.payment_method }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Grand Total Base</td>\r\n                        <td><FormulateInput name=\"grandTotal\" type=\"text\" label=\"Amount of transaction with tax excluded\" />{{ invoice.grand_total_base }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Grand Total Purchased</td>\r\n                        <td><FormulateInput name=\"grandTotal\" type=\"text\" label=\"Amount of transaction with tax included\" />{{ invoice.grand_total_purchased }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport invoices from '~/apollo/mutations/sales/invoices'\r\nimport allInvoices from '~/apollo/queries/sales/invoices'\r\n\r\nconst DELETE_INVOICE = gql `\r\n  mutation delete_invoices($id: Int!){\r\n  delete_invoices(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_INVOICE = gql `\r\n  mutation update_invoices($id: Int!){\r\n  update_invoices(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Invoice'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteInvoice(invoice){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_INVOICE,\r\n        variables: {\r\n          id: invoice.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allInvoices\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/sales/invoices'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateInvoice(invoice){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_INVOICE,\r\n        variables: {\r\n          id: invoice.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allInvoices\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    invoices: {\r\n      query: invoices,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\customerslimit.vue",["1310"],"<template>\r\n    <div>\r\n        <div class=\"table table-responsive table-bordered latestOrders col\">\r\n                    <table class=\"table\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer ID</th>\r\n                                <th>Customer First Name</th>\r\n                                <th>Customer Last Name</th>\r\n                                <th>Customer Since</th>\r\n                                <th>Email</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody v-for=\"customers in customers\" :key=\"customers.id\">\r\n                            <tr>\r\n                                <th scope=\"row\">{{customers.id}}</th>\r\n                                <td>{{customers.first_name}}</td>\r\n                                <td>{{customers.last_name}}</td>\r\n                                <td>{{customers.customer_since}}</td>\r\n                                <td>{{customers.email}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport customers from '~/apollo/queries/customers/customerslimit'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      customers: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    customers: {\r\n      prefetch: true,\r\n      query: customers\r\n    },\r\n  },\r\n}\r\n</script>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\reviewslimit.vue",["1311"],"<template>\r\n    <div>\r\n        <div class=\"table table-responsive table-bordered latestOrders col\">\r\n                    <table class=\"table\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer ID</th>\r\n                                <th>Customer First Name</th>\r\n                                <th>Customer Last Name</th>\r\n                                <th>Created On</th>\r\n                                <th>Websites</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody v-for=\"reviews in reviews\" :key=\"reviews.id\">\r\n                            <tr>\r\n                                <th scope=\"row\">{{reviews.id}}</th>\r\n                                <td>{{reviews.first_name}} {{reviews.last_name}}</td>\r\n                                <td>{{reviews.content}}</td>\r\n                                <td>{{reviews.created_at}}</td>\r\n                                <td>{{reviews.websites}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport reviews from '~/apollo/queries/marketing/reviewslimit'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    reviews: {\r\n      prefetch: true,\r\n      query: reviews\r\n    },\r\n  },\r\n}\r\n</script>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\Notification.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\newcustomers.vue",["1312"],"<template>\r\n    <div>\r\n        <div class=\"table table-responsive table-bordered latestOrders col\">\r\n                    <table class=\"table\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer ID</th>\r\n                                <th>Customer First Name</th>\r\n                                <th>Customer Last Name</th>\r\n                                <th>Customer Since</th>\r\n                                <th>Email</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody v-for=\"customers in customers\" :key=\"customers.id\">\r\n                            <tr>\r\n                                <th scope=\"row\">{{customers.id}}</th>\r\n                                <td>{{customers.first_name}}</td>\r\n                                <td>{{customers.last_name}}</td>\r\n                                <td>{{customers.customer_since}}</td>\r\n                                <td>{{customers.email}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport customers from '~/apollo/queries/customers/newcustomers'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      customers: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    customers: {\r\n      prefetch: true,\r\n      query: customers\r\n    },\r\n  },\r\n}\r\n</script>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\glossary\\_id.vue",["1313","1314","1315"],"/* eslint-disable camelcase */\r\n<template>\r\n    <div id=\"editor\">\r\n        <FormulateForm v-for=\"glossary in glossaries\" :key=\"glossary.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"glossaryAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addGlossary\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Glossary Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ glossary.name }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <vue-simplemde id=\"glossaryDescription\" />{{ glossary.content }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" upload-url=\"/media\" name=\"headshot\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>{{ glossary.image }}</td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport glossaries from '~/apollo/mutations/content/glossaries'\r\nimport allGlossaries from '~/apollo/queries/content/glossaries'\r\n\r\nconst DELETE_GLOSSARY = gql `\r\n  mutation delete_glossaries($id: Int!){\r\n  delete_glossaries(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_GLOSSARY = gql `\r\n  mutation update_glossaries($id: Int!){\r\n  update_glossaries(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Glossary'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCountry(glossary){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_GLOSSARY,\r\n        variables: {\r\n          id: glossary.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allGlossaries\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/content/glossaries'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCountry(glossary){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_GLOSSARY,\r\n        variables: {\r\n          id: glossary.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allGlossaries\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    glossaries: {\r\n      query: glossaries,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\toppicks.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\settings.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\shop.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\reports.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\sales.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\marketing.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\content.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\integrations\\customers.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\gift-certificate\\_id.vue",["1316","1317","1318"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"certificates in gift_certificates\" :key=\"certificates.id\"  method=\"POST\" @submit.prevent>\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addGift_Certificate\" label=\"Save Gift_Certificate\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create A New Gift Certificate or Gift Card</a>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-excerpt\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gift Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ certificates.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Discount</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ certificates.discount }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Expiration</td>\r\n                      <td><FormulateInput id=\"expiration\" name=\"expiration\" type=\"text\" />{{ certificates.expiration }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gift Type</td>\r\n                      <td><FormulateInput id=\"expiration\" name=\"expiration\" type=\"text\" label=\"Gift Card or Gift Certificate\" />{{ certificates.type }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Description</td>\r\n                      <td><FormulateInput id=\"reviewDescription\" type=\"textarea\" label=\"Enter information about this gift\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - excerpt.length} left.`\" />{{ certificates.excerpt }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\n// eslint-disable-next-line camelcase\r\nimport gift_certificates from '~/apollo/mutations/sales/gift_certificates'\r\n// eslint-disable-next-line camelcase\r\nimport allGift_certificates from '~/apollo/queries/sales/gift_certificates'\r\n\r\nconst DELETE_GIFT_CERTIFICATE = gql `\r\n  mutation delete_gift_certificates($id: Int!){\r\n  delete_gift_certificates(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_GIFT_CERTIFICATE = gql `\r\n  mutation update_gift_certificates($id: Int!){\r\n  update_gift_certificates(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Gift Certificate'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCountry(certificates){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_GIFT_CERTIFICATE,\r\n        variables: {\r\n          id: certificates.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allGift_certificates\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/sales/gift_certificates'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCountry(certificates){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_GIFT_CERTIFICATE,\r\n        variables: {\r\n          id: certificates.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allGift_certificates\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    gift_certificates: {\r\n      query: gift_certificates,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\event\\_id.vue",["1319","1320"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\customergroup\\_id.vue",["1321","1322","1323"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"customer_group in customer_groups\" :key=\"customer_group.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"customerCustomer_groupAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addCustomer_group\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Customer Group Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ customer_group.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Class</td>\r\n                        <td><FormulateInput type=\"text\" name=\"tax\" />{{ customer_group.name }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\n// eslint-disable-next-line camelcase\r\nimport customer_groups from '~/apollo/mutations/customers/customerGroups'\r\n// eslint-disable-next-line camelcase\r\nimport allCustomer_group from '~/apollo/queries/customers/customerGroups'\r\n\r\nconst DELETE_CUSTOMER_GROUP = gql `\r\n  mutation delete_customer_groups($id: Int!){\r\n  delete_customer_groups(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_CUSTOMER_GROUP = gql `\r\n  mutation update_customer_groups($id: Int!){\r\n  update_customer_groups(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Customer Group'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   // eslint-disable-next-line camelcase\r\n   async deleteCountry(customer_group){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_CUSTOMER_GROUP,\r\n        variables: {\r\n          id: customer_group.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCustomer_group\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/customers/customer_groups'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    // eslint-disable-next-line camelcase\r\n    async updateCountry(customer_group){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_CUSTOMER_GROUP,\r\n        variables: {\r\n          id: customer_group.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCustomer_group\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    customer_groups: {\r\n      query: customer_groups,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\coupon\\_id.vue",["1324","1325","1326"],"<template>\r\n  <div>\r\n    <FormulateForm v-for=\"coupon in coupons\" :key=\"coupon.id\" method=\"POST\" @submit.prevent>\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addCoupon\" label=\"Save Coupon\" /></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Create A New Coupon</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab excerpt -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-excerpt\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Coupon Name</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ coupon.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Discount</td>\r\n                      <td><FormulateInput type=\"text\" required />{{ coupon.discount }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Expiration</td>\r\n                      <td><FormulateInput id=\"expiration\" name=\"expiration\" type=\"url\" />{{ coupon.expiration }}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Coupon Content</td>\r\n                      <td><FormulateInput id=\"reviewDescription\" type=\"textarea\" label=\"Enter information about this coupon\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - excerpt.length} left.`\" />{{ coupon.excerpt }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport coupons from '~/apollo/mutations/shop/coupons'\r\nimport allCoupons from '~/apollo/queries/shop/coupons'\r\n\r\nconst DELETE_COUPON = gql `\r\n  mutation delete_coupons($id: Int!){\r\n  delete_coupons(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_COUPON = gql `\r\n  mutation update_coupons($id: Int!){\r\n  update_coupons(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Coupon'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCoupon(coupon){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_COUPON,\r\n        variables: {\r\n          id: coupon.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCoupons\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/coupons'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCoupon(coupon){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_COUPON,\r\n        variables: {\r\n          id: coupon.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCoupons\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    coupons: {\r\n      query: coupons,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\country\\_id.vue",["1327","1328","1329","1330"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"country in countries\" :key=\"country.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"countriesAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" @click=\"addCountry\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country Name</td>\r\n                        <td><FormulateInput id=\"countriesName\" type=\"countriesName\" required />{{ country.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country Region</td>\r\n                        <td><FormulateInput id=\"countriesRegion\" type=\"countriesRegion\" required />{{ country.region }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  type=\"textarea\" id=\"tagDesc\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />{{ country.description }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport countries from '~/apollo/mutations/shop/countries'\r\nimport allCountries from '~/apollo/queries/shop/countries'\r\n\r\nconst DELETE_COUNTRY = gql `\r\n  mutation delete_countries($id: Int!){\r\n  delete_countries(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_COUNTRY = gql `\r\n  mutation update_countries($id: Int!){\r\n  update_countries(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Country'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCountry(country){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_COUNTRY,\r\n        variables: {\r\n          id: country.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCountries\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/countries'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCountry(country){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_COUNTRY,\r\n        variables: {\r\n          id: country.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCountries\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    countries: {\r\n      query: countries,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\collection\\_id.vue",["1331","1332"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"collection in collections\" :key=\"collection.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"collectionsAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCollection\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Collection Name</td>\r\n                        <td><FormulateInput id=\"collectionsName\" v-model=\"name\" type=\"collectionsName\" required />{{ collection.name }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  v-model=\"description\" type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" />{{ collection.description }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" upload-url=\"/media\" name=\"headshot\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>{{ collection.image }}</td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput type=\"text\" label=\"Product Url\" required />{{ collection.meta_title }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput type=\"text\" label=\"Product Keywords\" />{{ collection.meta_keywords }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" />{{ collection.meta_description }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport collections from '~/apollo/mutations/shop/collections'\r\nimport allCollections from '~/apollo/queries/shop/collections'\r\n\r\nconst DELETE_COLLECTION = gql `\r\n  mutation delete_collections($id: Int!){\r\n  delete_collections(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_COLLECTION = gql `\r\n  mutation update_collections($id: Int!){\r\n  update_collections(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Collection'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCollection(collection){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_COLLECTION,\r\n        variables: {\r\n          id: collection.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCollections\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/collections'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCollection(collection){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_COLLECTION,\r\n        variables: {\r\n          id: collection.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCollections\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    collections: {\r\n      query: collections,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n    width: 50%;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\city\\_id.vue",["1333","1334"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"city in cities\" :key=\"city.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"cityAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCity\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">City Name</td>\r\n                        <td><FormulateInput id=\"cityName\" type=\"cityName\" required />{{ city.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">State</td>\r\n                        <td><FormulateInput id=\"cityName\" type=\"cityName\" required />{{ city.state }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country</td>\r\n                        <td><FormulateInput id=\"cityName\" type=\"cityName\" required />{{ city.country }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Postal Code</td>\r\n                        <td><FormulateInput id=\"cityName\" type=\"cityName\" required />{{ city.postalCode }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"tagDesc\" type=\"textarea\" name=\"tagDesc\" cols=\"80\" rows=\"10\" />{{ city.description }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport cities from '~/apollo/mutations/shop/cities'\r\nimport allCities from '~/apollo/queries/shop/cities'\r\n\r\nconst DELETE_CITY = gql `\r\n  mutation delete_cities($id: Int!){\r\n  delete_cities(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_CITY = gql `\r\n  mutation update_cities($id: Int!){\r\n  update_cities(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit City'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCity(city){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_CITY,\r\n        variables: {\r\n          id: city.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCities\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/cities'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCity(city){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_CITY,\r\n        variables: {\r\n          id: city.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCities\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    cities: {\r\n      query: cities,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\category\\_id.vue",["1335","1336"],"/* eslint-disable camelcase */\r\n<template>\r\n    <div id=\"editor\">\r\n        <FormulateForm v-for=\"category in categories\" :key=\"category.id\"   method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"categoryAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addCategory\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Category Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ category.name }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <vue-simplemde id=\"categoryDescription\" />{{ category.content }}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <FormulateInput id=\"image\" type=\"text\" name=\"image\" />{{ category.image }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your categories to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput type=\"text\" label=\"Product Url\" required />{{ category.meta_title }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput type=\"text\" label=\"Product Keywords\" />{{ category.meta_keywords }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  type=\"textarea\" label=\"Product Description\" rows=\"10\" cols=\"50\" />{{ category.meta_description }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport categories from '~/apollo/mutations/shop/categories'\r\nimport allCategories from '~/apollo/queries/shop/categories'\r\n\r\nconst DELETE_CATEGORY = gql `\r\n  mutation delete_categories($id: Int!){\r\n  delete_categories(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_CATEGORY = gql `\r\n  mutation update_categories($id: Int!){\r\n  update_categories(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Category'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteCategory(category){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_CATEGORY,\r\n        variables: {\r\n          id: category.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCategories\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/categories'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateCategory(category){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_CATEGORY,\r\n        variables: {\r\n          id: category.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allCategories\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    categories: {\r\n      query: categories,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\attribute\\_id.vue",["1337","1338"],"\r\n<template>\r\n    <div>\r\n        <FormulateForm v-for=\"attribute in attributes\" :key=\"attribute.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"attributesAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addAttribute\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Attribute Name</td>\r\n                        <td><FormulateInput id=\"attributesLabel\" type=\"text\" required />{{ agreement.default_label }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Attribute Code</td>\r\n                        <td><FormulateInput id=\"attributesCode\" type=\"text\" required />{{ agreement.attribute_code }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Default Value</td>\r\n                        <td><FormulateInput id=\"attributesValue\" type=\"text\" required />{{ agreement.default_value }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport attributes from '~/apollo/mutations/shop/attributes'\r\nimport allAttributes from '~/apollo/queries/shop/attributes'\r\n\r\nconst DELETE_ATTRIBUTE = gql `\r\n  mutation delete_attributes($id: Int!){\r\n  delete_attributes(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_ATTRIBUTE = gql `\r\n  mutation update_attributes($id: Int!){\r\n  update_attributes(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Attribute'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteAttribute(attribute){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_ATTRIBUTE,\r\n        variables: {\r\n          id: attribute.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allAttributes\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/shop/attributes'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateAttribute(attribute){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_ATTRIBUTE,\r\n        variables: {\r\n          id: attribute.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allAttributes\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    attributes: {\r\n      query: attributes,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n\r\n.form-switch .form-check-input:checked[type=checkbox]:after, .form-switch .form-check-input:after {\r\n    margin-top: -7px;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\article\\_id.vue",["1339","1340","1341"],"<template>\r\n    <div>\r\n        <FormulateForm v-for=\"article in articles\" :key=\"article.id\"  method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"articleAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-tag\"><FormulateInput type=\"button\">Add New Tag</FormulateInput></a></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addArticle\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Article Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ article.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Categories</td>\r\n                        <td><FormulateInput type=\"select\" name=\"Select\">{{ article.categories.name }}\r\n                            </FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\" cols=\"50\" rows=\"10\" label=\"Add a short Description\">{{ article.excerpt }}</FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"articleDescription\" />{{ article.content }}\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" upload-url=\"/media\" name=\"headshot\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>{{ article.image }}</td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFive\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                        Related Products, Up-Sells, and Cross-Sells\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport articles from '~/apollo/mutations/content/article'\r\nimport allArticles from '~/apollo/queries/content/articles'\r\n\r\nconst DELETE_ARTICLE = gql `\r\n  mutation delete_articles($id: Int!){\r\n  delete_articles(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_ARTICLE = gql `\r\n  mutation update_articles($id: Int!){\r\n  update_articles(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Article'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteArticle(article){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_ARTICLE,\r\n        variables: {\r\n          id: article.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allArticles\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/content/articles'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateArticle(article){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_ARTICLE,\r\n        variables: {\r\n          id: article.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allArticles\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    articles: {\r\n      query: articles,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\agreement\\_id.vue",["1342","1343"],"<template>\r\n    <div v-if=\"agreements\">\r\n        <FormulateForm v-for=\"agreement in agreements\" :key=\"agreement.id\" method=\"POST\" @submit.prevent>\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"agreementAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Delete\" @click=\"deleteAgreement(agreement)\" /></li>\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"updateAgreement\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Agreement Name</td>\r\n                        <td><FormulateInput type=\"text\" required />{{ agreement.name }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Agreement Type</td>\r\n                        <td><FormulateInput type=\"text\" name=\"Type\">{{ agreement.type }}</FormulateInput></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Excerpt</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput\r\n  id=\"excerpt\" type=\"textarea\" validation=\"required|max:50,length\" cols=\"50\" rows=\"10\">{{ agreement.excerpt }}</FormulateInput>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <client-only>\r\n                                                    <vue-simplemde id=\"agreementDescription\" />{{ agreement.content }}\r\n                                                </client-only>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" upload-url=\"/media\" name=\"headshot\" :label=\"agreement.image\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport gql from 'graphql-tag'\r\nimport agreements from '~/apollo/mutations/sales/agreement'\r\nimport allAgreements from '~/apollo/queries/sales/agreements'\r\n\r\nconst DELETE_AGREEMENT = gql `\r\n  mutation delete_agreements($id: Int!){\r\n  delete_agreements(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nconst UPDATE_AGREEMENT = gql `\r\n  mutation update_agreements($id: Int!){\r\n  update_agreements(where: {id: {_eq: $id}}){\r\n    affected_rows\r\n  }\r\n}\r\n`;\r\n\r\nexport default {\r\n    head: {\r\n        name: 'Edit Agreement'\r\n    },\r\n mounted(){\r\n      this.forceRerender();\r\n  },\r\n  // eslint-disable-next-line vue/order-in-components\r\n  data(){\r\n      return{\r\n          componentKey: 0\r\n      }\r\n  },\r\n  methods: {\r\n   async deleteAgreement(agreement){\r\n    await this.$apollo.mutate({\r\n        mutation: DELETE_AGREEMENT,\r\n        variables: {\r\n          id: agreement.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allAgreements\r\n          }       \r\n          \r\n        ]\r\n      }).then(() => {\r\n            this.$router.push({path: '../admin/sales/agreements'})\r\n            }).catch(err => console.log(err));\r\n    },\r\n    async updateAgreement(agreement){\r\n    await this.$apollo.mutate({\r\n        mutation: UPDATE_AGREEMENT,\r\n        variables: {\r\n          id: agreement.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: allAgreements\r\n          }       \r\n          \r\n        ]\r\n      })\r\n    },\r\n    forceRerender() {\r\n      this.componentKey += 1;  \r\n    }\r\n  },\r\n  apollo: {\r\n    agreements: {\r\n      query: agreements,\r\n      prefetch: ({ route }) => ({ id: route.params.id }),\r\n      variables() {\r\n        return { id: this.$route.params.id }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\Product\\Edit\\_id.vue",["1344","1345","1346","1347","1348","1349","1350","1351","1352","1353"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"productAddOptions\">\r\n                            <li><a href=\"/admin/add-new/add-new-attribute\"><FormulateInput type=\"button\" label=\"Add Attribute\" /></a></li>\r\n                            <li><FormulateInput type=\"submit\" @click=\"addProduct\" label=\"Save\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Product Type</td>\r\n                        <td><FormulateInput v-model=\"type\" name=\"productType\" type=\"text\" label=\"What type of product is this?\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Attribute</td>\r\n                        <td><FormulateInput v-model=\"attribute\" name=\"productAttribute\" type=\"text\" label=\"Example is apple, bag, etc\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Product Name</td>\r\n                        <td><FormulateInput v-model=\"name\" type=\"productName\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Price</td>\r\n                        <td><FormulateInput v-model=\"price\" type=\"productPrice\" label=\"$\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Tax Class</td>\r\n                        <td><FormulateInput v-model=\"tax_class\" name=\"productTax\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Quantity</td>\r\n                        <td><FormulateInput v-model=\"quantity_per_source\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Stock</td>\r\n                        <td><FormulateInput v-model=\"status\" type=\"number\" name=\"stockStatus\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Height</td>\r\n                        <td><FormulateInput v-model=\"height\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Weight</td>\r\n                        <td><FormulateInput v-model=\"weight\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Visibility</td>\r\n                        <td><FormulateInput v-model=\"visibility\" name=\"productVisibility\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Categories</td>\r\n                        <td><FormulateInput v-model=\"categories\" name=\"productCategory\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Country of manufacture</td>\r\n                        <td><FormulateInput v-model=\"manufacture\" name=\"productManufacture\" type=\"text\" label=\"Where is this product made?\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Size</td>\r\n                        <td><FormulateInput v-model=\"size\" name=\"productSize\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Format</td>\r\n                        <td><FormulateInput v-model=\"format\" name=\"productFormat\" type=\"text\" label=\"Downloadable or Shipped\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br><br>\r\n        <div id=\"accordionExample\" class=\"accordion\">\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingOne\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Content\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"table table-responsive\">\r\n                            <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Short Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <FormulateInput type=\"textarea\" v-model=\"short_description\" label=\"Enter a short description\" validation=\"required|max:50,length\" validation-name=\"excerpt\" error-behavior=\"live\" :help=\"`Keep it under 50 characters. ${50 - value.length} left.`\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Description</td>\r\n                                        <td>\r\n                                            <div class=\"form-check form-switch\">\r\n                                                <vue-simplemde id=\"longDescription\" v-model=\"content\" />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingThree\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Images and Videos\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFour\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                        Search Engine Optimization\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <table class=\"table\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>Meta Title, Meta Keywords, and Meta Description are used to describe your products to potential customers using search engine like Google, Bing, etc.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Title</td>\r\n                                        <td><FormulateInput v-model=\"meta_title\" type=\"text\" label=\"Product Url\" required /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Keywords</td>\r\n                                        <td><FormulateInput v-model=\"meta_keywords\" type=\"text\" label=\"Product Keywords\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Meta Description</td>\r\n                                        <td><FormulateInput\r\n  type=\"textarea\" v-model=\"meta_description\" label=\"Product Description\" rows=\"10\" cols=\"50\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style=\"text-align: right;\">Product Url</td>\r\n                                        <td><FormulateInput v-model=\"meta_url\" type=\"url\" label=\"Product URL\" /></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n                <h2 id=\"headingFive\" class=\"accordion-header\">\r\n                    <FormulateInput class=\"accordion-button collapsed\" type=\"button\" data-mdb-toggle=\"collapse\"\r\n                        data-mdb-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                        Upload Product File(s)\r\n                    </FormulateInput>\r\n                </h2>\r\n                <div id=\"collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                    data-mdb-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <td><dashboard :uppy=\"uppy\" v-model=\"file\"  :plugins=\"['Webcam', 'Companion', 'Dashboard', 'Status-Bar', 'Progress-Bar', 'Informer', 'drag-drop', 'drop-target', 'file-input', 'audio', 'screen-capture']\" :props=\"{theme: 'light'}\" /></td>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport { products } from \"~/apollo/queries/shop/products\";\r\n// import categories from \"~/apollo/queries/shop/categories\"\r\n// import countries from \"~/apollo/queries/shop/countries\"\r\n// import attributes from \"~/apollo/queries/shop/attributes\"\r\n\r\nconst ADD_PRODUCTS = gql`\r\n    mutation ($thumbnail: String!,$name: String!,$attribute_set: String!,$price: String!,$quantity_per_source: String!,$salable_quantity: String!,$visibility: String!,$websites: String!,$product: String!,$tax_class: String!,$stock_status: String!,$weight: String!,$manufacture: String!,$categories: String!,$country: String!,$size: String!,$format: String!,$height: String!,$content: String!,$short_description: String!,$image: Upload!,$meta_title: String!,$meta_keywords: String!,$meta_description: String!,$meta_url: String!,$file: Upload!,$type: String){\r\n    insert_products(objects: {thumbnail: $thumbnail,name: $name,attribute_set: $attribute_set,price: $price,quantity_per_source: $quantity_per_source,salable_quantity: $salable_quantity,visibility: $visibility,manufacture: $manufacture,categories: $categories,websites: $websites,product: $product,tax_class: $tax_class,stock_status: $stock_status,weight: $weight,country: $country,size: $size,format: $format,height: $height,content: $content,short_description: $short_description,image: $image,meta_title: $meta_title,meta_keywords: $meta_keywords,meta_description: $meta_description,meta_url: $meta_url,file: $file,type: $type}) {\r\n        affected_rows\r\n        returning {\r\n            thumbnail\r\n            name\r\n            attribute_set\r\n            price\r\n            quantity_per_source\r\n            salable_quantity\r\n            visibility\r\n            manufacture\r\n            categories\r\n            websites\r\n            product\r\n            tax_class\r\n            stock_status\r\n            weight\r\n            country\r\n            size\r\n            format\r\n            height\r\n            content\r\n            short_description\r\n            image\r\n            meta_title\r\n            meta_keywords\r\n            meta_description\r\n            meta_url\r\n            file\r\n            type\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            categories: [],\r\n            countries: [],\r\n            attributes: [],\r\n            thumbnail: \" \",\r\n            name: \" \",\r\n            attribute_set: \" \",\r\n            price: \" \",\r\n            quantity_per_source: \" \",\r\n            salable_quantity: \" \",\r\n            visibility: \" \",\r\n            websites: \" \",\r\n            product: \" \",\r\n            tax_class: \" \",\r\n            manufacture: \" \",\r\n            stock_status: \" \",\r\n            weight: \" \",\r\n            country: \" \",\r\n            size: \" \",\r\n            format: \" \",\r\n            height: \" \",\r\n            content: \" \",\r\n            short_description: \" \",\r\n            image: \" \",\r\n            meta_title: \" \",\r\n            meta_keywords: \" \",\r\n            meta_description: \" \",\r\n            meta_url: \" \",\r\n            file: \" \",\r\n            type: \" \",\r\n            \r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Product'\r\n    }, \r\n   \r\n  methods: {\r\n      async addProduct() {\r\n            const thumbnail = this.thumbnail;\r\n            const name = this.name;\r\n            // eslint-disable-next-line camelcase\r\n            const attribute_set = this.attribute_set;\r\n            const price = this.price;\r\n            // eslint-disable-next-line camelcase\r\n            const quantity_per_source = this.quantity_per_source;\r\n            // eslint-disable-next-line camelcase\r\n            const salable_quantity = this.salable_quantity;\r\n            const visibility = this.visibility;\r\n            const manufacture = this.manufacture;\r\n            const categories = this.categories;\r\n            const websites = this.websites;\r\n            const product = this.product;\r\n            // eslint-disable-next-line camelcase\r\n            const tax_class = this.tax_class;\r\n            // eslint-disable-next-line camelcase\r\n            const stock_status = this.stock_status;\r\n            const weight = this.weight;\r\n            const country = this.country;\r\n            const size = this.size;\r\n            const format = this.format;\r\n            // eslint-disable-next-line camelcase\r\n            const height = this.height;\r\n            const content = this.content;\r\n            // eslint-disable-next-line camelcase\r\n            const short_description = this.short_description;\r\n            const image = this.image;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_title = this.meta_title;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_keywords = this.meta_keywords;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_description = this.meta_description;\r\n            // eslint-disable-next-line camelcase\r\n            const meta_url = this.meta_url;\r\n            const file = this.file;\r\n            const type = this.type;\r\n\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_PRODUCTS,\r\n                variables: {\r\n                    thumbnail,\r\n                    name,\r\n                    attribute_set,\r\n                    price,\r\n                    quantity_per_source,\r\n                    salable_quantity,\r\n                    visibility,\r\n                    manufacture,\r\n                    categories,\r\n                    websites,\r\n                    product,\r\n                    tax_class,\r\n                    stock_status,\r\n                    weight,\r\n                    country,\r\n                    size,\r\n                    format,\r\n                    height,\r\n                    content,\r\n                    short_description,\r\n                    image,\r\n                    meta_title,\r\n                    meta_keywords,\r\n                    meta_description,\r\n                    meta_url,\r\n                    file,\r\n                    type,\r\n                 },\r\n        update: (cache, { data: { insertCategories, insertCountries }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCategory = insertCategories.returning;\r\n                            const insertedCountries = insertCountries.returning;\r\n                            console.log(insertedCategory, insertedCountries)\r\n                            cache.writeQuery({\r\n                                query: products\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/products'})\r\n                }).catch(err => console.log(err));\r\n                    this.thumbnail = ' ';\r\n                    this.name = ' ';\r\n                    this.attribute_set = ' ';\r\n                    this.price = ' ';\r\n                    this.quantity_per_source = ' ';\r\n                    this.salable_quantity = ' ';\r\n                    this.visibility = ' ';\r\n                    this.manufacture = ' ';\r\n                    this.categories = ' ';\r\n                    this.websites = ' ';\r\n                    this.product = ' ';\r\n                    this.tax_class = ' ';\r\n                    this.stock_status = ' ';\r\n                    this.weight = ' ';\r\n                    this.country = ' ';\r\n                    this.size = ' ';\r\n                    this.format = ' ';\r\n                    this.height = ' ';\r\n                    this.content = ' ';\r\n                    this.short_description = ' ';\r\n                    this.image = ' ';\r\n                    this.meta_title = ' ';\r\n                    this.meta_keywords = ' ';\r\n                    this.meta_description = ' ';\r\n                    this.meta_url = ' ';\r\n                    this.file = ' ';\r\n                    this.type = ' ';\r\n                },\r\n        },\r\n        /* apollo: {\r\n                    categories: {\r\n                    prefetch: true,\r\n                    query: categories\r\n                    },\r\n                    countries: {\r\n                    prefetch: true,\r\n                    query: countries\r\n                    },\r\n                    attributes: {\r\n                    prefetch: true,\r\n                    query: attributes\r\n                    }\r\n            } */\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\Email\\email-designer.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\providers\\id.vue",["1354","1355","1356","1357","1358"],"<template>\r\n  <div>\r\n    <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Apple</td>\r\n          <td>{{ article.name }}</td>\r\n          <td><button type=\"button\" class=\"btn btn-primary fas fa-pencil\" data-mdb-toggle=\"modal\"\r\n              data-mdb-target=\"#exampleModal\"></button></td>\r\n          <div id=\"exampleModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 id=\"exampleModalLabel\" class=\"modal-title\">Edit Provider > Apple</h5>\r\n                  <button type=\"button\" class=\"btn-close\" data-mdb-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <form id=\"input_0\" class=\"formkit-form\" name=\"form_1\">\r\n                    <div class=\"form-body\">\r\n                      <div class=\"formkit-outer\" data-type=\"email\">\r\n                        <div class=\"formkit-wrapper\">\r\n                          <label for=\"input_1\" class=\"formkit-label\">Client ID</label>\r\n                          <div class=\"formkit-inner\">\r\n                            <input type=\"email\" class=\"formkit-input\" name=\"email_2\" id=\"input_1\" placeholder=\"TEXT\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"formkit-outer\" data-type=\"text\">\r\n                        <div class=\"formkit-wrapper\">\r\n                          <label for=\"input_2\" class=\"formkit-label\">Client Secret</label>\r\n                          <div class=\"formkit-inner\">\r\n                            <input type=\"text\" class=\"formkit-input\" name=\"text_3\" id=\"input_2\" placeholder=\"TEXT\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"formkit-outer\" data-type=\"textarea\">\r\n                        <div class=\"formkit-wrapper\">\r\n                          <label for=\"input_3\" class=\"formkit-label\">Host URI (Subdomain)</label>\r\n                          <div class=\"formkit-inner\">\r\n                            <input type=\"text\" class=\"formkit-input\" name=\"text_3\" id=\"input_2\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"formkit-outer\" data-type=\"textarea\">\r\n                        <div class=\"formkit-wrapper\">\r\n                          <label for=\"input_3\" class=\"formkit-label\">The redirect URL to your front-end app</label>\r\n                          <div class=\"formkit-inner\">\r\n                            <input type=\"text\" class=\"formkit-input\" name=\"text_3\" id=\"input_2\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"formkit-outer\" data-type=\"textarea\">\r\n                        <div class=\"formkit-wrapper\">\r\n                          <label for=\"input_3\" class=\"formkit-label\">The redirect URL to add in your cas application configurations</label>\r\n                          <div class=\"formkit-inner\">\r\n                            <input type=\"text\" class=\"formkit-input\" name=\"text_3\" id=\"input_2\" placeholder=\"/connect/apple/callback\" disabled>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <details>\r\n                        <summary>Form data</summary>\r\n                        <pre>{}</pre>\r\n                      </details>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-secondary\" data-mdb-dismiss=\"modal\">Cancel</button>\r\n                      <button type=\"button\" class=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\customer\\newcustomer.vue",["1359","1360","1361","1362","1363","1364","1365","1366"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"reset\" class=\"btn btn-warning\" label=\"Reset\" /></a>\r\n          <a class=\"navbar-brand\"><FormulateInput type=\"button\" @click=\"addCustomer\">Save Customer</FormulateInput></a>\r\n        </div>\r\n      </nav>\r\n      <br>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <!-- Tab navs -->\r\n          <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n              aria-controls=\"v-tabs-home\" aria-selected=\"true\">Account Information</a>\r\n          </div>\r\n          <!-- Tab navs -->\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n          <!-- Tab content -->\r\n          <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n            <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n              <div class=\"table table-responsive\">\r\n                <table class=\"table\" >\r\n                  <tbody>\r\n                    <!--<tr>\r\n                      <td style=\"text-align: right;\">Customer Since</td>\r\n                      <client-only>\r\n                      <td><FormulateInput id=\"currentDate\" v-model=\"customer_since\" type=\"text\" disabled /></td>\r\n                      </client-only>\r\n                    </tr>-->\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Prefix</td>\r\n                      <td><FormulateInput v-model=\"name_prefix\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">First Name</td>\r\n                      <td><FormulateInput v-model=\"first_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Middle Name/Initial</td>\r\n                      <td><FormulateInput v-model=\"middle_name\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Last Name</td>\r\n                      <td><FormulateInput v-model=\"last_name\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Name Suffix</td>\r\n                      <td><FormulateInput v-model=\"name_suffix\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Email</td>\r\n                      <td><FormulateInput v-model=\"email\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Date of Birth</td>\r\n                      <td><FormulateInput v-model=\"date_of_birth\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Phone Number</td>\r\n                      <td><FormulateInput v-model=\"phone\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Tax/VAT Number</td>\r\n                      <td><FormulateInput v-model=\"tax_vat_number\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Gender</td>\r\n                      <td><FormulateInput id=\"gender\" v-model=\"gender\" name=\"gender\" type=\"text\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">About Customer</td>\r\n                      <td><FormulateInput\r\n  type=\"textarea\" id=\"aboutCustomer\" v-model=\"short_description\" name=\"aboutCustomer\">\r\n                        </FormulateInput></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 1</td>\r\n                      <td><FormulateInput v-model=\"Address\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Address Line 2</td>\r\n                      <td><FormulateInput v-model=\"address_two\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">State</td>\r\n                      <td><FormulateInput id=\"state\" v-model=\"state\" name=\"state\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Postal Code</td>\r\n                      <td><FormulateInput v-model=\"zipcode\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Country</td>\r\n                      <td><FormulateInput id=\"country\" v-model=\"country\" name=\"country\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: right;\">Image</td>\r\n                      <td><FormulateInput type=\"image\" name=\"headshot\" v-model=\"image\" label=\"Select an image to upload\" help=\"Select a png, jpg or gif to upload.\" validation=\"mime:image/jpeg,image/png,image/gif\"/>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Tab content -->\r\n        </div>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\nimport customers from \"~/apollo/queries/customers/customers\"\r\n\r\nconst ADD_CUSTOMERS = gql`\r\n    mutation ($first_name:String!,$middle_name:String!,$last_name:String!,$gender:String!,$email:String!,$description:String!,$date_of_birth:String!,$websites:String!,$customer_group:String!,$phone:String!,$zipcode:String!,$name_prefix:String!,$name_suffix:String!,$product:String!,$state:String!,$country:String!,$tax_vat_number: String!,$Address:String!,$address_two:String!,$short_description:String!,$image: String){\r\n    insert_customers(objects: {first_name: $first_name, middle_name: $middle_name, last_name: $last_name, gender: $gender, email: $email, description: $description, product: $product, state: $state, date_of_birth: $date_of_birth, websites: $websites, customer_group: $customer_group, phone: $phone, zipcode: $zipcode, name_suffix: $name_suffix, name_prefix: $name_prefix, country: $country, Address: $Address, address_two: $address_two, tax_vat_number: $tax_vat_number, short_description: $short_description, image: $image}) {\r\n        affected_rows\r\n        returning {\r\n            first_name\r\n            middle_name\r\n            last_name\r\n            gender\r\n            email\r\n            description\r\n            product\r\n            state\r\n            date_of_birth\r\n            websites\r\n            customer_group\r\n            phone\r\n            zipcode\r\n            name_prefix\r\n            name_suffix\r\n            tax_vat_number\r\n            country\r\n            Address\r\n            address_two\r\n            short_description\r\n            image\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n            first_name: \" \",\r\n            middle_name: \" \",\r\n            last_name: \" \",\r\n            gender: \" \",\r\n            email: \" \",\r\n            description: \" \",\r\n            date_of_birth: \" \",\r\n            websites: \" \",\r\n            customer_group: \" \",\r\n            phone: \" \",\r\n            product: \" \",\r\n            zipcode: \" \",\r\n            name_prefix: \" \",\r\n            name_suffix: \" \",\r\n            tax_vat_number: \" \",\r\n            state: \" \",\r\n            country: \" \",\r\n            Address: \" \",\r\n            address_two: \" \",\r\n            short_description: \" \",\r\n            image: \" \",\r\n            \r\n        }\r\n  },\r\n    head: {\r\n        title: 'Add New Customer'\r\n    }, \r\n/* eslint-disable camelcase */\r\n   \r\n  methods: {\r\n      async addCustomer() {\r\n            const first_name = this.first_name;\r\n            const middle_name = this.middle_name;\r\n            const last_name = this.last_name;\r\n            const gender = this.gender;\r\n            const email = this.email;\r\n            const description = this.description;\r\n            const product = this.product;\r\n            const state = this.state;\r\n            const date_of_birth = this.date_of_birth;\r\n            const websites = this.websites;\r\n            const customer_group = this.customer_group;\r\n            const tax_vat_number = this.tax_vat_number;\r\n            const phone = this.phone;\r\n            const zipcode = this.zipcode;\r\n            const name_prefix = this.name_prefix;\r\n            const name_suffix = this.name_suffix;\r\n            const country = this.country;\r\n            const Address = this.Address;\r\n            const address_two = this.address_two;\r\n            const short_description = this.short_description;\r\n            const image = this.image;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CUSTOMERS,\r\n                variables: {\r\n                    first_name,\r\n                    middle_name,\r\n                    last_name,\r\n                    gender,\r\n                    email,\r\n                    description,\r\n                    product,\r\n                    state,\r\n                    date_of_birth,\r\n                    tax_vat_number,\r\n                    websites,\r\n                    customer_group,\r\n                    phone,\r\n                    zipcode,\r\n                    name_prefix,\r\n                    name_suffix,\r\n                    country,\r\n                    Address,\r\n                    address_two,\r\n                    short_description,\r\n                    image,\r\n                 },\r\n        update: (cache, { data: { insertCustomers }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCustomer = insertCustomers.returning;\r\n                            console.log(insertedCustomer)\r\n                            cache.writeQuery({\r\n                                query: customers\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../customers/all-customers'})\r\n                }).catch(err => console.log(err));\r\n                    this.first_name = ' ';\r\n                    this.middle_name = ' ';\r\n                    this.last_name = ' ';\r\n                    this.gender = ' ';\r\n                    this.email = ' ';\r\n                    this.description = ' ';\r\n                    this.product = ' ';\r\n                    this.state = ' ';\r\n                    this.date_of_birth = ' ';\r\n                    this.websites = ' ';\r\n                    this.customer_group = ' ';\r\n                    this.tax_vat_number = ' ';\r\n                    this.phone = ' ';\r\n                    this.zipcode = ' ';\r\n                    this.name_prefix = ' ';\r\n                    this.name_suffix = ' ';\r\n                    this.country = ' ';\r\n                    this.Address = ' ';\r\n                    this.address_two = ' ';\r\n                    this.short_description = ' ';\r\n                    this.image = ' ';\r\n                },\r\n        },\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\settings.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\role-manager.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\integrations.vue",["1367"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <h1 style=\"text-align:center !important;color:white !important;width:100%;\">Integrations Marketplace</h1>\r\n    </nav>\r\n    <br>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-3\">\r\n        <div id=\"v-tabs-tab\" class=\"nav flex-column nav-tabs text-center\" role=\"tablist\" aria-orientation=\"vertical\">\r\n          <a id=\"v-tabs-home-tab\" class=\"nav-link active\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\"\r\n            aria-controls=\"v-tabs-home\" aria-selected=\"true\">General</a>\r\n          <a id=\"v-tabs-catalog-tab\" class=\"nav-link\" data-mdb-toggle=\"tab\" href=\"#v-tabs-catalog\" role=\"tab\"\r\n            aria-controls=\"v-tabs-catalog\" aria-selected=\"false\">Sales</a>\r\n          <a id=\"v-tabs-security-tab\" class=\"nav-link\" data-mdb-toggle=\"tab\" href=\"#v-tabs-security\" role=\"tab\"\r\n            aria-controls=\"v-tabs-security\" aria-selected=\"false\">Customers</a>\r\n            <a id=\"v-tabs-customers-tab\" class=\"nav-link\" data-mdb-toggle=\"tab\" href=\"#v-tabs-customers\" role=\"tab\"\r\n            aria-controls=\"v-tabs-customers\" aria-selected=\"false\">Marketing</a>\r\n            <a id=\"v-tabs-sales-tab\" class=\"nav-link\" data-mdb-toggle=\"tab\" href=\"#v-tabs-sales\" role=\"tab\"\r\n            aria-controls=\"v-tabs-sales\" aria-selected=\"false\">Reports</a>\r\n            <a id=\"v-tabs-payments-tab\" class=\"nav-link\" data-mdb-toggle=\"tab\" href=\"#v-tabs-payments\" role=\"tab\"\r\n            aria-controls=\"v-tabs-payments\" aria-selected=\"false\">Shop</a>\r\n            <a id=\"v-tabs-other-tab\" class=\"nav-link\" data-mdb-toggle=\"tab\" href=\"#v-tabs-other\" role=\"tab\"\r\n            aria-controls=\"v-tabs-other\" aria-selected=\"false\">Settings</a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-9\">\r\n        <div id=\"v-tabs-tabContent\" class=\"tab-content\">\r\n          <div id=\"v-tabs-home\" class=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n            <toppicks />\r\n          </div>\r\n          <div id=\"v-tabs-catalog\" class=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"v-tabs-catalog-tab\">\r\n            <Sales />\r\n          </div>\r\n          <div id=\"v-tabs-security\" class=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"v-tabs-security-tab\">\r\n            <Customers />\r\n          </div>\r\n          <div id=\"v-tabs-customers\" class=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"v-tabs-customers-tab\">\r\n            <Marketings />\r\n          </div>\r\n          <div id=\"v-tabs-sales\" class=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"v-tabs-sales-tab\">\r\n            <Reports />\r\n          </div>\r\n          <div id=\"v-tabs-payments\" class=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"v-tabs-payments-tab\">\r\n            <Shops />\r\n          </div>\r\n          <div id=\"v-tabs-other\" class=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"v-tabs-other-tab\">\r\n            <Users />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport toppicks from '~/components/integrations/toppicks'\r\nimport Sales from '~/components/integrations/sales'\r\nimport Marketings from '~/components/integrations/marketing'\r\nimport Customers from '~/components/integrations/customers'\r\nimport Reports from '~/components/integrations/reports'\r\nimport Shops from '~/components/integrations/shop'\r\nimport Users from '~/components/integrations/settings'\r\n\r\n  export default {\r\n    layout: 'dashboard',\r\n    components: {\r\n        toppicks,\r\n        Sales,\r\n        Marketings,\r\n        Customers,\r\n        Reports,\r\n        Shops,\r\n        Users\r\n    },\r\n    head: {\r\n      title: 'Integrations'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\help.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\general-settings.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\warehouses.vue",["1368"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\tax-rule.vue",["1369"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-taxrule\"><FormulateInput type=\"button\">Add New Tax Rule</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Tax ID</th>\r\n            <th>Tax Name</th>\r\n            <th>Rate</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"tax_rule in tax_rule\" :key=\"tax_rule.id\">\r\n          <tr>\r\n            <td>{{ tax_rule.id }}</td>\r\n            <td>{{ tax_rule.name }}</td>\r\n            <td>{{ tax_rule.tax_rate }}</td>\r\n            <td><a :href=\"`/admin/edit/taxrule/${tax_rule.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport tax_rule from '~/apollo/queries/shop/taxrule'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tax_rule: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    tax_rule: {\r\n      prefetch: true,\r\n      query: tax_rule\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Tax Rule'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\tax-rate.vue",["1370"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-taxrate\"><FormulateInput type=\"button\">Add New Tax Rate</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Tax Identifier</th>\r\n            <th>Country</th>\r\n            <th>State/Region</th>\r\n            <th>Zip/Post Code</th>\r\n            <th>Rate</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"tax_rate in tax_rate\" :key=\"tax_rate.id\">\r\n          <tr>\r\n            <td>{{ tax_rate.tax_identifier }}</td>\r\n            <td>{{ tax_rate.country }}</td>\r\n            <td>{{ tax_rate.state }}</td>\r\n            <td>{{ tax_rate.postcode }}</td>\r\n            <td>{{ tax_rate.rate_percent }}</td>\r\n            <td><a :href=\"`/admin/edit/taxrate/${tax_rate.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport tax_rate from '~/apollo/queries/shop/taxrate'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tax_rate: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    tax_rate: {\r\n      prefetch: true,\r\n      query: tax_rate\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Tax Rate'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\states.vue",["1371"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-state\"><FormulateInput type=\"button\">Add New State</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>State ID</th>\r\n            <th>State Title</th>\r\n            <th>Description</th>\r\n            <th>Country</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"states in states\" :key=\"states.id\">\r\n          <tr>\r\n            <td>{{ states.id }}</td>\r\n            <td>{{ states.name }}</td>\r\n            <td>{{ states.description }}</td>\r\n            <td>{{ states.country }}</td>\r\n            <td><a :href=\"`/admin/edit/states/${states.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport states from '~/apollo/queries/shop/states'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      states: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    states: {\r\n      prefetch: true,\r\n      query: states\r\n    }\r\n  },\r\n    head: {\r\n      title: 'States'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\products.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\multi-vendor.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\inventory.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\coupons.vue",["1372"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-coupon\"><FormulateInput type=\"button\">Create New Coupons</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n    \r\n    <br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Percentage</th>\r\n            <th>Expiration</th>\r\n            <th>Date Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"coupons in coupons\" :key=\"coupons.id\">\r\n          <tr>\r\n            <td>{{ coupons.name }}</td>\r\n            <td>{{ coupons.discount }}</td>\r\n            <td>{{ coupons.expiration }}</td>\r\n            <td>{{ coupons.published }}</td>\r\n            <td><a :href=\"`/admin/edit/coupon/${coupons.id}`\">Edit</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport coupons from '~/apollo/queries/shop/coupons'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      coupons: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    coupons: {\r\n      prefetch: true,\r\n      query: coupons\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Coupons'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\countries.vue",["1373"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-country\"><FormulateInput type=\"button\">Add New Country</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Country ID</th>\r\n            <th>Country Title</th>\r\n            <th>Country Description</th>\r\n            <th>Country Image</th>\r\n            <th>Region</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"countries in countries\" :key=\"countries.id\">\r\n          <tr>\r\n            <td>{{ countries.id }}</td>\r\n            <td>{{ countries.name }}</td>\r\n            <td>{{ countries.description }}</td>\r\n            <td>{{ countries.image }}</td>\r\n            <td>{{ countries.region }}</td>\r\n            <td><a :href=\"`/admin/edit/country/${countriess.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport countries from '~/apollo/queries/shop/countries'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      countries: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    countries: {\r\n      prefetch: true,\r\n      query: countries\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Countries'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\collections.vue",["1374"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-collection\"><FormulateInput type=\"button\">Create Collection</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Collection ID</th>\r\n            <th>Collection Name</th>\r\n            <th>Description</th>\r\n            <th>Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"collections in collections\" :key=\"collections.id\">\r\n          <tr>\r\n            <td>{{ collections.id }}</td>\r\n            <td>{{ collections.name }}</td>\r\n            <td>{{ collections.description }}</td>\r\n            <td>{{ collections.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/collection/${collections.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport collections from '~/apollo/queries/shop/collections'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      collections: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    collections: {\r\n      prefetch: true,\r\n      query: collections\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Collections'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\cities.vue",["1375"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-city\"><FormulateInput type=\"button\">Add New City</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>City ID</th>\r\n            <th>City Title</th>\r\n            <th>State</th>\r\n            <th>Country</th>\r\n            <th>Postal Code</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"cities in cities\" :key=\"cities.id\">\r\n          <tr>\r\n            <td>{{ cities.id }}</td>\r\n            <td>{{ cities.name }}</td>\r\n            <td>{{ cities.state }}</td>\r\n            <td>{{ cities.country }}</td>\r\n            <td>{{ cities.postalCode }}</td>\r\n            <td><a :href=\"`/admin/edit/city/${cities.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport cities from '~/apollo/queries/shop/cities'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cities: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    cities: {\r\n      prefetch: true,\r\n      query: cities\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Cities'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\categories.vue",["1376"],"/* eslint-disable vue/order-in-components */\r\n<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-category\"><FormulateInput type=\"button\">Add New Category</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\"> \r\n          <tr>\r\n            <th>Category Title</th>\r\n            <th>Description</th>\r\n            <th>SEO Title</th>\r\n            <th>SEO Keywords</th>\r\n            <th>SEO Description</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"categories in categories\" :key=\"categories.id\">\r\n          <tr>\r\n            <td>{{ categories.name }}</td>\r\n            <td>{{ categories.content }}</td>\r\n            <td>{{ categories.meta_title }}</td>\r\n            <td>{{ categories.meta_keywords }}</td>\r\n            <td>{{ categories.meta_description }}</td>\r\n            <td><a :href=\"`/admin/edit/category/${categories.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import categories from '~/apollo/queries/shop/categories'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    categories: {\r\n      prefetch: true,\r\n      query: categories\r\n    }\r\n  }, \r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n      title: 'Categories'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Shop\\attributes.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\transactions.vue",["1377"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-transaction\"><FormulateInput type=\"button\">Create new Transaction</FormulateInput></a>\r\n      </div>\r\n    </nav>\r\n    <br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Transaction ID</th>\r\n            <th>Transaction Order ID</th>\r\n            <th>Parent Transaction ID</th>\r\n            <th>Payment Method</th>\r\n            <th>Created</th>\r\n            <td>Closed Date</td>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"transactions in transactions\" :key=\"transactions.id\">\r\n          <tr>\r\n            <td>{{ transactions.id }}</td>\r\n            <td>{{ transactions.order_id }}</td>\r\n            <td>{{ transactions.parent_transaction_id }}</td>\r\n            <td>{{ transactions.payment_method }}</td>\r\n            <td>{{ transactions.created }}</td>\r\n            <td>{{ transactions.closed }}</td>\r\n            <td><a :href=\"`/admin/edit/transaction/${transactions.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import transactions from '~/apollo/queries/sales/transactions'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      transactions: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    transactions: {\r\n      prefetch: true,\r\n      query: transactions\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Transactions'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\shipments.vue",["1378"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-shipment\"><FormulateInput type=\"button\">Create new Shipment</FormulateInput></a>\r\n\r\n      </div>\r\n    </nav>\r\n    <br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Carrier Name</th>\r\n            <th>Logo</th>\r\n            <th>Transit Time</th>\r\n            <th>Transit Speed</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"shipments in shipments\" :key=\"shipments.id\">\r\n          <tr>\r\n            <td>{{ shipments.id }}</td>\r\n            <td>{{ shipments.carrier_name }}</td>\r\n            <td>{{ shipments.image }}</td>\r\n            <td>{{ shipments.transit_time }}</td>\r\n            <td>{{ shipments.speed_grade }}</td>\r\n            <td><a :href=\"`/admin/edit/shipment/${shipments.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import shipments from '~/apollo/queries/sales/shipments'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      shipments: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    shipments: {\r\n      prefetch: true,\r\n      query: shipments\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Shipments'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\returns.vue",["1379"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/Admin/Add-new/add-new-return\"><FormulateInput type=\"button\">New Return Request</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Returns ID</th>\r\n            <th>Returns Name</th>\r\n            <th>Days of Return</th>\r\n            <th>Returns Prefix</th>\r\n            <th>Return Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"returns in returns\" :key=\"returns.id\">\r\n          <tr>\r\n            <td>{{ returns.id }}</td>\r\n            <td>{{ returns.name }}</td>\r\n            <td>{{ returns.validity }}</td>\r\n            <td>{{ returns.return_prefix }}</td>\r\n            <td>{{ returns.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/return/${returns.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import returns from '~/apollo/queries/sales/returns'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      returns: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    returns: {\r\n      prefetch: true,\r\n      query: returns\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Returns'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\quotes.vue",["1380","1381"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-quote\"><FormulateInput type=\"button\">Create A Quote</FormulateInput></a>        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table data-toggle=\"table\" id=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Quote ID</th>\r\n            <th>Quote Name</th>\r\n            <th>Quote Stage</th>\r\n            <th>Contact</th>\r\n            <th>Account</th>\r\n            <th>Grand Total</th>\r\n            <th>Valid Until</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"quotes in quotes\" :key=\"quotes.id\">\r\n          <tr>\r\n            <td>{{ quotes.id }}</td>\r\n            <td>{{ quotes.name }}</td>\r\n            <td>{{ quotes.quote_stage }}</td>\r\n            <td>{{ quotes.customers }}</td>\r\n            <td>{{ quotes.order.id }}</td>\r\n            <td>{{ quotes.grand_total }}</td>\r\n            <td>{{ quotes.valid_until }}</td>\r\n            <td><a :href=\"`/admin/edit/quotes/${quotes.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import quotes from '~/apollo/queries/sales/quotes'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      quotes: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    quotes: {\r\n      prefetch: true,\r\n      query: quotes\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Quotes'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\orders.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\invoices.vue",["1382"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-invoice\"><FormulateInput type=\"button\">Create New Invoice</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n    \r\n    <br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Invoice ID</th>\r\n            <th>Customer Name</th>\r\n            <th>Bill to Name</th>\r\n            <th>Email</th>\r\n            <th>Subtotal</th>\r\n            <th>Order Number</th>\r\n            <th>Billing Address</th>\r\n            <th>Grand Total Base</th>\r\n            <th>Grand Total Purchased</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"invoices in invoices\" :key=\"invoices.id\">\r\n          <tr>\r\n            <td>{{ invoices.id }}</td>\r\n            <td>{{ invoices.customer_name }}</td>\r\n            <td>{{ invoices.bill_to_name }}</td>\r\n            <td>{{ invoices.email }}</td>\r\n            <td>{{ invoices.subtotal }}</td>\r\n            <td>{{ invoices.order_number }}</td>\r\n            <td>{{ invoices.billing_address }}</td>\r\n            <td>{{ invoices.grand_total_base }}</td>\r\n            <td>{{ invoices.grand_total_purchased }}</td>\r\n            <td><a :href=\"`/admin/edit/invoice/${invoices.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line camelcase\r\nimport invoices from '~/apollo/queries/sales/invoices'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      invoices: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    invoices: {\r\n      prefetch: true,\r\n      query: invoices\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Invoices'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\credit-memos.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\certificates.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Sales\\agreements.vue",["1383"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\surveys.vue",["1384","1385"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-survey\"><FormulateInput type=\"button\">Create A Survey</FormulateInput></a>        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table data-toggle=\"table\" id=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Survey ID</th>\r\n            <th>Survey Name</th>\r\n            <th>Description</th>\r\n            <th>Status</th>\r\n            <th>Assigned to</th>\r\n            <th>Dated Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"surveys in surveys\" :key=\"surveys.id\">\r\n          <tr>\r\n            <td>{{ surveys.id }}</td>\r\n            <td>{{ surveys.name }}</td>\r\n            <td>{{ surveys.description }}</td>\r\n            <td>{{ surveys.status }}</td>\r\n            <td>{{ surveys.assigned_to }}</td>\r\n            <td>{{ surveys.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/surveys/${surveys.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import surveys from '~/apollo/queries/reports/surveys'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      surveys: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    surveys: {\r\n      prefetch: true,\r\n      query: surveys\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Surveys'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\statistics.vue",["1386"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        \r\n      </div>\r\n    </nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Statistics ID</th>\r\n            <th>Name</th>\r\n            <th>Expiration</th>\r\n            <th>Coupons</th>\r\n            <th>Categories</th>\r\n            <th>Rewards</th>\r\n            <th>Products</th>\r\n            <th>Users</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"statistics in statistics\" :key=\"statistics\">\r\n          <tr>\r\n            <td>{{ statistics.id }}</td>\r\n            <td>{{ statistics.name }}</td>\r\n            <td>{{ statistics.expiration }}</td>\r\n            <td>{{ statistics.coupons }}</td>\r\n            <td>{{ statistics.categories }}</td>\r\n            <td>{{ statistics.rewards }}</td>\r\n            <td>{{ statistics.products }}</td>\r\n            <td>{{ statistics.users }}</td>\r\n            <td>Amet</td>\r\n            <td>Consectetur</td>\r\n            <td><a :href=\"`/admin/edit/statistic/${statistics.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import statistics from '~/apollo/queries/reports/statistics'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      statistics: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    statistics: {\r\n      prefetch: true,\r\n      query: statistics\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Statistics'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\sales-reports.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\reviews.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\products-reports.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\marketing-reports.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\cases.vue",["1387"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-case\"><FormulateInput type=\"button\">Create A Case</FormulateInput></a>        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table data-toggle=\"table\" id=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Case ID</th>\r\n            <th>Subject</th>\r\n            <th>Account Name</th>\r\n            <th>Priority</th>\r\n            <th>Status</th>\r\n            <th>Assigned to</th>\r\n            <th>Dated Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{ cases.id }}</td>\r\n            <td>{{ cases.subject }}</td>\r\n            <td>{{ cases.account_name }}</td>\r\n            <td>{{ cases.priority }}</td>\r\n            <td>{{ cases.status }}</td>\r\n            <td>{{ cases.assigned_to }}</td>\r\n            <td>{{ cases.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/cases/${cases.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import cases from '~/apollo/queries/reports/cases'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cases: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    cases: {\r\n      prefetch: true,\r\n      query: cases\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Cases'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\calendars.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\seo.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\reviews.vue",["1388"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-review\"><FormulateInput type=\"button\">Create A Review</FormulateInput></a>\r\n        \r\n</div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Customer Name</th>\r\n            <th>Review</th>\r\n            <th>Created On</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"reviews in reviews\" :key=\"reviews.id\">\r\n          <tr>\r\n            <td>{{ reviews.first_name }} {{ reviews.last_name }}</td>\r\n            <td>{{ reviews.content }}</td>\r\n            <td>{{ reviews.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/review/${reviews.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n // eslint-disable-next-line camelcase\r\n import reviews from '~/apollo/queries/marketing/reviews'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    reviews: {\r\n      prefetch: true,\r\n      query: reviews\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Reviews'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\newsletter.vue",["1389"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-newsletter\"><FormulateInput type=\"button\" label=\"Create A Newsletter\"></FormulateInput></a>\r\n          </div>\r\n          </nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Customer Email</th>\r\n            <th>Newsletter Created on</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"newsletter_subscribers in newsletter_subscribers\" :key=\"newsletter_subscribers.id\">\r\n          <tr>\r\n            <td>{{ newsletter_subscribers.id }}</td>\r\n            <td>{{ newsletter_subscribers.email }}</td>\r\n            <td>{{ newsletter_subscribers.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/agreement/${agreements.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n // eslint-disable-next-line camelcase\r\n import newsletter_subscribers from '~/apollo/queries/marketing/newsletter_subscribers'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newsletter_subscribers: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    newsletter_subscribers: {\r\n      prefetch: true,\r\n      query: newsletter_subscribers\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Customer Engagement'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\invitations.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\events.vue",["1390"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-event\"><FormulateInput type=\"button\">Add New Event</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n\r\n    <br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Event ID</th>\r\n            <th>Event Name</th>\r\n            <th>Event Dates</th>\r\n            <th>Event Ticket Count</th>\r\n            <th>Event Location</th>\r\n            <th>Event Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"events in events\" :key=\"events.id\">\r\n          <tr>\r\n            <td>{{ events.id }}</td>\r\n            <td>{{ events.name }}</td>\r\n            <td>{{ events.start }} - {{ events.end }}</td>\r\n            <td>{{ events.tickets }}</td>\r\n            <td>{{ events.city }} {{ events.state }} {{ events.country }}</td>\r\n            <td>{{ events.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/event/${events.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport events from '~/apollo/queries/marketing/events'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      events: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    events: {\r\n      prefetch: true,\r\n      query: events\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Events'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\contracts.vue",["1391"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-contract\"><FormulateInput type=\"button\">Add New Contract</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n    <br>\r\n    \r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Contract Title</th>\r\n            <th>Status</th>\r\n            <th>Contract Manager</th>\r\n            <th>Account</th>\r\n            <th>Contract Value</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"contracts in contracts\" :key=\"contracts.id\">\r\n          <tr>\r\n            <td>{{ contracts.contract_title }}</td>\r\n            <td>{{ contracts.status }}</td>\r\n            <td>{{ contracts.contract_manager }}</td>\r\n            <td>{{ contracts.account }}</td>\r\n            <td>{{ contracts.contract_value }}</td>\r\n            <td>{{ contracts.start_date }}</td>\r\n            <td>{{ contracts.end_date }}</td>\r\n            <td><a :href=\"`/admin/edit/contracts/${contracts.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import contracts from '~/apollo/queries/marketing/contracts'\r\n\r\nexport default {\r\n   data() {\r\n    return {\r\n      contracts: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    contracts: {\r\n      prefetch: true,\r\n      query: contracts\r\n    },\r\n  }, \r\n    head: {\r\n      title: 'Contracts'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\communications.vue",["1392"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/email\"><FormulateInput type=\"button\" label=\"Send Email\"></FormulateInput></a>\r\n        <a class=\"navbar-brand\" href=\"/admin/marketing/email/email-designer\"><FormulateInput type=\"button\" style=\"float:right; right: 15px; position: absolute;\" label=\"Email Designer\"></FormulateInput></a>\r\n        \r\n      </div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Customer Email</th>\r\n            <th>Email Subject</th>\r\n            <th>Email Created On</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"emails in emails\" :key=\"emails.id\">\r\n          <tr>\r\n            <td>{{ emails.id }}</td>\r\n            <td>{{ emails.email }}</td>\r\n            <td>{{ emails.subject }}</td>\r\n            <td>{{ emails.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/email/${emails.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n // eslint-disable-next-line camelcase\r\n import emails from '~/apollo/queries/marketing/emails'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      emails: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    emails: {\r\n      prefetch: true,\r\n      query: emails\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Communications'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\tasks.vue",["1393"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-task\"><FormulateInput type=\"button\">Add A Task</FormulateInput></a>\r\n      </div>\r\n    </nav>\r\n    <br>\r\n    \r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Subject</th>\r\n            <th>Contact</th>\r\n            <th>Related to</th>\r\n            <th>Due Date</th>\r\n            <th>Priority</th>\r\n            <th>Assigned User</th>\r\n            <th>Date Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"tasks in tasks\" :key=\"tasks.id\">\r\n          <tr>\r\n            <td>{{ tasks.subject }}</td>\r\n            <td>{{ tasks.contact }}</td>\r\n            <td>{{ tasks.related_to }}</td>\r\n            <td>{{ tasks.due_date }}</td>\r\n            <td>{{ tasks.priority }}</td>\r\n            <td>{{ tasks.assigned_to }}</td>\r\n            <td>{{ tasks.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/tasks/${tasks.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import tasks from '~/apollo/queries/customers/tasks'\r\n\r\nexport default {\r\n   data() {\r\n    return {\r\n      tasks: [],\r\n      website: [],\r\n      categories: []\r\n    }\r\n  },\r\n  apollo: {\r\n    tasks: {\r\n      prefetch: true,\r\n      query: tasks\r\n    },\r\n  }, \r\n    head: {\r\n      title: 'Tasks'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\segments.vue",["1394","1395","1396"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-segment\"><FormulateInput type=\"button\">Add Segment</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n    <br>\r\n    \r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Segment</th>\r\n            <th>Status</th>\r\n            <th>Website</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"segments in segments\" :key=\"segments.id\">\r\n          <tr>\r\n            <td><FormulateInput id=\"segmentID\" type=\"text\" name=\" id\" /></td>\r\n            <td><FormulateInput type=\"text\" name=\"segment\" /></td>\r\n            <td><FormulateInput type=\"text\" name=\"status\" /></td>\r\n            <td><FormulateInput type=\"select\" :options=\"categories.name\" id=\"segmentStatus\" name=\"status\">\r\n                </FormulateInput></td>\r\n            <td><FormulateInput type=\"select\" :options=\"website.name\" id=\"segmentWebsite\" name=\"website\">\r\n                </FormulateInput></td>\r\n          </tr>\r\n          <tr>\r\n            <td>{{ segments.id }}</td>\r\n            <td>{{ segments.name }}</td>\r\n            <td>{{ segments.status }}</td>\r\n            <td>{{ segments.website }}</td>\r\n            <td><a :href=\"`/admin/edit/segments/${segments.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import segments from '~/apollo/queries/customers/segments'\r\n import website from '~/apollo/queries/shop/website'\r\n import categories from '~/apollo/queries/shop/categories'\r\n\r\nexport default {\r\n   data() {\r\n    return {\r\n      segments: [],\r\n      website: [],\r\n      categories: []\r\n    }\r\n  },\r\n  apollo: {\r\n    segments: {\r\n      prefetch: true,\r\n      query: segments\r\n    },\r\n    website: {\r\n      prefetch: true,\r\n      query: website\r\n    },\r\n    categories: {\r\n      prefetch: true,\r\n      query: categories\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Customers Segments'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\opportunities.vue",["1397"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-opportunity\"><FormulateInput type=\"button\">Create A New Opportunity</FormulateInput></a>\r\n      </div>\r\n    </nav>\r\n    <br>\r\n    \r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Account Name</th>\r\n            <th>Sales Stage</th>\r\n            <th>Amount</th>\r\n            <th>Close</th>\r\n            <th>User</th>\r\n            <th>Date Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"opportunities in opportunities\" :key=\"opportunities.id\">\r\n          <tr>\r\n            <td>{{ opportunities.name }}</td>\r\n            <td>{{ opportunities.account_name }}</td>\r\n            <td>{{ opportunities.sales_stage }}</td>\r\n            <td>{{ opportunities.amount }}</td>\r\n            <td>{{ opportunities.expected_close_date }}</td>\r\n            <td>{{ opportunities.assigned_to }}</td>\r\n            <td>{{ opportunities.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/opportunities/${opportunities.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import opportunities from '~/apollo/queries/customers/opportunities'\r\n\r\nexport default {\r\n   data() {\r\n    return {\r\n      opportunities: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    opportunities: {\r\n      prefetch: true,\r\n      query: opportunities\r\n    },\r\n  }, \r\n    head: {\r\n      title: 'Oppurtunities'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\online-customers.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\meetings.vue",["1398"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-meeting\"><FormulateInput type=\"button\">Create New Meeting</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n    <br>\r\n    \r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Subject</th>\r\n            <th>Contact</th>\r\n            <th>Related To</th>\r\n            <th>Start Date</th>\r\n            <th>Assigned User</th>\r\n            <th>Location</th>\r\n            <th>Reminders</th>\r\n            <th>Date Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"meetings in meetings\" :key=\"meetings.id\">\r\n          <tr>\r\n            <td>{{ meetings.subject }}</td>\r\n            <td>{{ meetings.invitees }}</td>\r\n            <td>{{ meetings.related_to }}</td>\r\n            <td>{{ meetings.start_date }}</td>\r\n            <td>{{ meetings.assigned_to }}</td>\r\n            <td>{{ meetings.location }}</td>\r\n            <td>{{ meetings.reminders }}</td>\r\n            <td>{{ meetings.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/meetings/${meetings.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import meetings from '~/apollo/queries/customers/meetings'\r\n\r\nexport default {\r\n   data() {\r\n    return {\r\n      meetings: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    meetings: {\r\n      prefetch: true,\r\n      query: meetings\r\n    },\r\n  }, \r\n    head: {\r\n      title: 'Meetings'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\leads.vue",["1399"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-lead\"><FormulateInput type=\"button\">Add New Lead</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n    <br>\r\n    \r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Status</th>\r\n            <th>Account Name</th>\r\n            <th>Office Phone</th>\r\n            <th>Email</th>\r\n            <th>User</th>\r\n            <th>Date Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"leads in leads\" :key=\"leads.id\">\r\n          <tr>\r\n            <td>{{ leads.customer_name }}</td>\r\n            <td>{{ leads.status }}</td>\r\n            <td>{{ leads.account_name }}</td>\r\n            <td>{{ leads.office_phone }}</td>\r\n            <td>{{ leads.email }}</td>\r\n            <td>{{ leads.referred_by }}</td>\r\n            <td>{{ leads.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/leads/${leads.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import leads from '~/apollo/queries/customers/leads'\r\n\r\nexport default {\r\n   data() {\r\n    return {\r\n      leads: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    leads: {\r\n      prefetch: true,\r\n      query: leads\r\n    },\r\n  }, \r\n    head: {\r\n      title: 'Leads'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\customer-groups.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Customers\\all-customers.vue",["1400"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/customers/customer/newcustomer\"><FormulateInput type=\"button\">Add New Customer</FormulateInput></a>\r\n        \r\n      </div>\r\n    </nav>\r\n\r\n    <br>\r\n    <div class=\"table table-responsive\">\r\n      <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>Customer ID</th>\r\n            <th>Customer First Name</th>\r\n            <th>Customer Last Name</th>\r\n            <th>Customer Email</th>\r\n            <th>Customer Since</th>\r\n            <th>Customer Active</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"customers in customers\" :key=\"customers.id\">\r\n          <tr>\r\n            <td>{{ customers.id }}</td>\r\n            <td>{{ customers.first_name }}</td>\r\n            <td>{{ customers.last_name }}</td>\r\n            <td>{{ customers.email }}</td>\r\n            <td>{{ customers.customer_since }}</td>\r\n            <td>{{ customers.customer_group }}</td>\r\n            <td><a :href=\"`/admin/edit/customer/${customers.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport customers from '~/apollo/queries/customers/customers'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      customers: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    customers: {\r\n      prefetch: true,\r\n      query: customers\r\n    }\r\n  },\r\n    head: {\r\n      title: 'Customers'\r\n    }\r\n  }\r\n\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-rewards.vue",["1401","1402","1403","1404"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\colormode.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\ottotracker.vue",["1405","1406"],"<template>\r\n  <div>\r\n    <section data-bs-version=\"5.1\" class=\"info3 cid-t6HE9SrOd7\" id=\"info3-1\">\r\n      <div class=\"mbr-overlay\" style=\"opacity: 0.6; background-color: rgb(68, 121, 217);\">\r\n      </div>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"card col-12 col-lg-10\">\r\n            <div class=\"card-wrapper\">\r\n              <div class=\"card-box align-center\">\r\n                <h4 class=\"card-title mbr-fonts-style align-center mb-4 display-1\">\r\n                  <strong>IT Dashboard</strong></h4>\r\n                <p class=\"mbr-text mbr-fonts-style mb-4 display-7\">\r\n                  A powerful system that combines the resources and tools of I.T.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section data-bs-version=\"5.1\" class=\"info2 cid-t6LQqjFfOw\" id=\"info2-2\">\r\n      <div class=\"align-center container-fluid\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"card col-12 col-lg-6\">\r\n            <div class=\"wrapper\">\r\n              <h3 class=\"mbr-section-title mb-4 mbr-fonts-style display-5\">\r\n                <strong>OOTO Tracker</strong></h3>\r\n              <p class=\"mbr-text mb-4 mbr-fonts-style display-4\" style=\"font-size:25px;\">\r\n                The OOTO Tracker has you covered. Leave your login, your warehouse ID, and dates you need to take off\r\n                for. </p>\r\n              <div class=\"mbr-section-btn\"><a class=\"btn btn-white display-4\" href=\"/admin/system/ooto\">Schedule Out of\r\n                  Office</a></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-lg-6\">\r\n            <div class=\"wrapper\">\r\n              <h3 class=\"mbr-section-title mbr-fonts-style mb-4 display-5\">\r\n                <strong>Handoff Reports</strong></h3>\r\n              <p class=\"mbr-text mbr-fonts-style mb-4 display-4\" style=\"font-size:25px;\">\r\n                New checklist feature is here, no more quips. Keep tabs on your weekly handoffs here.</p>\r\n              <div class=\"mbr-section-btn\"><a class=\"btn btn-white display-4\" href=\"/admin/standard-work/checklists\">Check It\r\n                  Out</a></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <br><br>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\visitsdisplay.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\layouts\\error.vue",["1407","1408","1409"],"<template>\r\n  <div v-if=\"error.statusCode === 404\">\r\n    <section data-bs-version=\"5.1\" class=\"header6 cid-t6MvM5y84W mbr-fullscreen\" id=\"header6-3\">\r\n\r\n\r\n\r\n      <div class=\"mbr-overlay\" style=\"opacity: 0.2; background-color: rgb(68, 121, 217);\"></div>\r\n\r\n      <div class=\"align-center container\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-12 col-lg-10\">\r\n            <h1 class=\"mbr-section-title mbr-fonts-style mbr-white mb-3 display-1\"><strong>404</strong></h1>\r\n\r\n            <p class=\"mbr-text mbr-white mbr-fonts-style display-7\">\r\n              Oops look like you went the wrong way. Go back and try again.</p>\r\n            <div class=\"mbr-section-btn mt-3\"><a class=\"btn btn-danger display-4\" href=\"/\">Go Home</a></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  \r\n  props: ['error'],\r\n  components: 'dashboard',\r\n  head: {\r\n    title: '404 - Error Page'\r\n  }\r\n}\r\n</script>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-deepdive.vue",["1410","1411","1412","1413","1414"],"<template>\r\n  <div>\r\n    <FormulateForm method=\"POST\" @submit.prevent enctype=\"multipart/form-data\">\r\n      <div class=\"table table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <th scope=\"col\" class=\"deepdiveAddOptions\">\r\n                <li>\r\n                  <FormulateInput type=\"submit\" label=\"Save\" @click=\"addDeepdive\" />\r\n                </li>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Login</td>\r\n              <td>\r\n                <FormulateInput v-model=\"login\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Start Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"start_date\" type=\"text\" required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">End Date</td>\r\n              <td>\r\n                <FormulateInput v-model=\"end_date\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Attendees</td>\r\n              <td>\r\n                <FormulateInput v-model=\"attendees\" type=\"text\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style=\"text-align: right;\">Description</td>\r\n              <td>\r\n                <div class=\"form-check form-switch\">\r\n                  <client-only>\r\n                    <vue-simplemde id=\"longDescription\" v-model=\"content\" />\r\n                  </client-only>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </FormulateForm>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gql from \"graphql-tag\";\r\n\r\n  import {\r\n    deepdive\r\n  } from \"~/apollo/queries/reports/deepdive\";\r\n\r\n  const ADD_DEEPDIVE = gql `\r\n    mutation ($login:String!,$whid:String!,$start_date:String!,$content:String!,$end_date:String!,$attendees:String){\r\n    deepdive(objects: {login: $login, whid: $whid, start_date: $start_date, content: $content, end_date: $end_date, attendees: $attendees}) {\r\n        affected_rows\r\n        returning {\r\n            login\r\n            whid\r\n            start_date\r\n            content\r\n            end_date\r\n            attendees\r\n    }\r\n  }\r\n}`;\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        attendees: [],\r\n        login: \" \",\r\n        whid: \" \",\r\n        content: \" \",\r\n        end_date: \" \",\r\n        start_date: \" \",\r\n      }\r\n    },\r\n    methods: {\r\n      async addDeepdive() {\r\n        const login = this.login;\r\n        const content = this.content;\r\n        const whid = this.whid;\r\n        // eslint-disable-next-line camelcase\r\n        const start_date = this.start_date;\r\n        // eslint-disable-next-line camelcase\r\n        const end_date = this.end_date;\r\n        const attendees = this.attendees;\r\n        await this.$apollo.mutate({\r\n          mutation: ADD_DEEPDIVE,\r\n          variables: {\r\n            login,\r\n            whid,\r\n            start_date,\r\n            content,\r\n            end_date,\r\n            attendees,\r\n          },\r\n          update: (cache, {\r\n            data: {\r\n              insertDeepdive\r\n            }\r\n          }) => {\r\n            // Read data from cache for this query\r\n            try {\r\n              const insertedDeepdive = insertDeepdive.returning;\r\n              console.log(insertedDeepdive)\r\n              cache.writeQuery({\r\n                query: deepdive\r\n              })\r\n            } catch (err) {\r\n              console.error(err)\r\n            }\r\n          }\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: '../reports/deep-dive'\r\n          })\r\n        }).catch(err => console.log(err));\r\n        this.login = ' ';\r\n        this.whid = ' ';\r\n        this.start_date = ' ';\r\n        this.content = ' ';\r\n        this.end_date = ' ';\r\n        this.attendees = ' ';\r\n      },\r\n\r\n    },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n      title: 'Add New Deep Dive'\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  input,\r\n  select,\r\n  option {\r\n    padding: 5px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n</style>\r\n","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-ooto.vue",["1415","1416","1417","1418","1419"],"<template>\r\n    <div>\r\n        <FormulateForm method=\"POST\" @submit.prevent  enctype=\"multipart/form-data\">\r\n        <div class=\"table table-responsive\">\r\n            <table class=\"table\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                        </th>\r\n                        <th scope=\"col\" class=\"OotoAddOptions\">\r\n                            <li><FormulateInput type=\"submit\" label=\"Save\" @click=\"addOoto\" /></li>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Login</td>\r\n                        <td><FormulateInput v-model=\"login\" type=\"text\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">WHID</td>\r\n                        <td><FormulateInput v-model=\"whid\" type=\"text\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Start Date</td>\r\n                        <td><FormulateInput v-model=\"start_date\" type=\"date\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">End Date</td>\r\n                        <td><FormulateInput v-model=\"end_date\" type=\"date\" required /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Description</td>\r\n                        <td><FormulateInput v-model=\"description\" type=\"textarea\" /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </FormulateForm>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { ooto } from \"~/apollo/queries/system/ooto\";\r\n\r\nconst ADD_OOTO = gql`\r\n    mutation ($login:String!,$description:String!,$whid:String!,$start_date:String!,$end_date:String){\r\n    insert_ooto(objects: {login: $login, description: $description, whid: $whid, start_date: $start_date, end_date: $end_date}) {\r\n        affected_rows\r\n        returning {\r\n            login\r\n            description\r\n            whid\r\n            start_date\r\n            end_date\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        whid: \" \",\r\n        login: \" \",\r\n        description: \" \",\r\n        start_date: \" \",\r\n        end_date: \" \",\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n      async addOoto() {\r\n            const login = this.login;\r\n            // eslint-disable-next-line camelcase\r\n            const start_date = this.start_date;\r\n            const description = this.description;\r\n            const whid = this.whid;\r\n            // eslint-disable-next-line camelcase\r\n            const end_date = this.end_date;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_OOTO,\r\n                variables: {\r\n                    login,\r\n                    description,\r\n                    whid,\r\n                    start_date,\r\n                    end_date,\r\n                },\r\n        update: (cache, { data: { insertOoto }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedOoto = insertOoto.returning;\r\n                            console.log(insertedOoto)\r\n                            cache.writeQuery({\r\n                                query: ooto\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../system/ooto'})\r\n                }).catch(err => console.log(err));\r\n                this.login = ' ';\r\n                this.description = ' ';\r\n                this.whid = ' ';\r\n                this.start_date = ' ';\r\n                this.end_date = ' ';\r\n            },\r\n            \r\n        },\r\n    // eslint-disable-next-line vue/order-in-components\r\n    head: {\r\n        title: 'Add New OOTO'\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\ninput, select, option {\r\n    padding: 5px;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n</style>","C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-checklist.vue",["1420","1421","1422","1423","1424"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-schedule.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-eosr.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\ooto\\_id.vue",["1425","1426","1427"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\deep-dive\\_id.vue",["1428","1429","1430"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\team-scheduler.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\eosr.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Reports\\deep-dive.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Add-New\\add-new-emailtemplates.vue",["1431","1432","1433","1434"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\ooto.vue",["1435"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\settings\\paymentsettings.vue",["1436"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\settings\\providersettings.vue",["1437"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\fullfillment\\_id.vue",["1438","1439"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\email_template\\_id.vue",["1440","1441"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\pdf_template\\_id.vue",["1442","1443"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\import-management.vue",["1444"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\export-management.vue",["1445"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\import\\import-products.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\components\\import\\_id.vue",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\plugins\\extensions\\datatables.js",[],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\reward\\_id.vue",["1446","1447"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Marketing\\rewards.vue",["1448"],"<template>\r\n  <div>\r\n    <nav class=\"navbar navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/admin/add-new/add-new-rewards\"><FormulateInput type=\"button\" label=\"Create A Reward\"></FormulateInput></a>\r\n      </div>\r\n</nav>\r\n<br>\r\n    <div class=\"table table-responsive\">\r\n        <table id=\"table\" data-toggle=\"table\" class=\"table\">\r\n        <thead class=\"table table-dark\">\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Reward Name</th>\r\n            <th>Expiration</th>\r\n            <th>Level</th>\r\n            <th>URL</th>\r\n            <th>Created At</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"rewards in rewards\" :key=\"rewards.id\">\r\n          <tr>\r\n            <td>{{ rewards.id }}</td>\r\n            <td>{{ rewards.name }}</td>\r\n            <td>{{ rewards.expiration }}</td>\r\n            <td>{{ rewards.level }}</td>\r\n            <td>{{ rewards.slug }}</td>\r\n            <td>{{ rewards.created_at }}</td>\r\n            <td><a :href=\"`/admin/edit/reward/${rewards.id}`\">View</a></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n // eslint-disable-next-line camelcase\r\n import rewards from '~/apollo/queries/marketing/rewards'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      rewards: [],\r\n    }\r\n  },\r\n  apollo: {\r\n    rewards: {\r\n      prefetch: true,\r\n      query: rewards\r\n    }\r\n  }, \r\n    head: {\r\n      title: 'Rewards'\r\n    }\r\n  }\r\n\r\n</script>\r\n",["1449","1450","1451","1452"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\Edit\\knowledgebase\\_id.vue",["1453","1454"],"C:\\Users\\Basti\\OneDrive\\Documents\\My Websites\\Handmade Sites\\Javascript-Projects\\Nuxt-Projects\\Applications\\alternatenuxt\\client\\pages\\Admin\\System\\knowledgebase.vue",["1455"],{"ruleId":"1456","severity":1,"message":"1457","line":246,"column":10,"nodeType":"1458","endLine":246,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":448,"column":15,"nodeType":"1461","messageId":"1462","endLine":448,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":453,"column":15,"nodeType":"1461","messageId":"1462","endLine":453,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":460,"column":25,"nodeType":"1461","messageId":"1462","endLine":460,"endColumn":36},{"ruleId":"1463","replacedBy":"1464"},{"ruleId":"1465","replacedBy":"1466"},{"ruleId":"1467","replacedBy":"1468"},{"ruleId":"1469","replacedBy":"1470"},{"ruleId":"1456","severity":1,"message":"1457","line":244,"column":8,"nodeType":"1458","endLine":244,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":292,"column":29,"nodeType":"1461","messageId":"1462","endLine":292,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":69,"column":8,"nodeType":"1458","endLine":69,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":178,"column":15,"nodeType":"1461","messageId":"1462","endLine":178,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":183,"column":15,"nodeType":"1461","messageId":"1462","endLine":183,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":190,"column":25,"nodeType":"1461","messageId":"1462","endLine":190,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":60,"column":8,"nodeType":"1458","endLine":60,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":124,"column":29,"nodeType":"1461","messageId":"1462","endLine":124,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":130,"column":29,"nodeType":"1461","messageId":"1462","endLine":130,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":135,"column":33,"nodeType":"1461","messageId":"1462","endLine":135,"endColumn":44},{"ruleId":"1456","severity":1,"message":"1457","line":68,"column":8,"nodeType":"1458","endLine":68,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":116,"column":29,"nodeType":"1461","messageId":"1462","endLine":116,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":61,"column":8,"nodeType":"1458","endLine":61,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":109,"column":29,"nodeType":"1461","messageId":"1462","endLine":109,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":181,"column":10,"nodeType":"1458","endLine":181,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":309,"column":15,"nodeType":"1461","messageId":"1462","endLine":309,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":314,"column":15,"nodeType":"1461","messageId":"1462","endLine":314,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":321,"column":25,"nodeType":"1461","messageId":"1462","endLine":321,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":182,"column":8,"nodeType":"1458","endLine":182,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":230,"column":29,"nodeType":"1461","messageId":"1462","endLine":230,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":233,"column":10,"nodeType":"1458","endLine":233,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":393,"column":15,"nodeType":"1461","messageId":"1462","endLine":393,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":398,"column":15,"nodeType":"1461","messageId":"1462","endLine":398,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":405,"column":25,"nodeType":"1461","messageId":"1462","endLine":405,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":234,"column":8,"nodeType":"1458","endLine":234,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":282,"column":29,"nodeType":"1461","messageId":"1462","endLine":282,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":60,"column":8,"nodeType":"1458","endLine":60,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":127,"column":29,"nodeType":"1461","messageId":"1462","endLine":127,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":133,"column":29,"nodeType":"1461","messageId":"1462","endLine":133,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":138,"column":33,"nodeType":"1461","messageId":"1462","endLine":138,"endColumn":44},{"ruleId":"1456","severity":1,"message":"1457","line":61,"column":8,"nodeType":"1458","endLine":61,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":109,"column":29,"nodeType":"1461","messageId":"1462","endLine":109,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":89,"column":10,"nodeType":"1458","endLine":89,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":172,"column":15,"nodeType":"1461","messageId":"1462","endLine":172,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":177,"column":15,"nodeType":"1461","messageId":"1462","endLine":177,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":184,"column":25,"nodeType":"1461","messageId":"1462","endLine":184,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":61,"column":8,"nodeType":"1458","endLine":61,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":109,"column":29,"nodeType":"1461","messageId":"1462","endLine":109,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":197,"column":10,"nodeType":"1458","endLine":197,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":333,"column":15,"nodeType":"1461","messageId":"1462","endLine":333,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":338,"column":15,"nodeType":"1461","messageId":"1462","endLine":338,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":345,"column":25,"nodeType":"1461","messageId":"1462","endLine":345,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":198,"column":8,"nodeType":"1458","endLine":198,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":246,"column":29,"nodeType":"1461","messageId":"1462","endLine":246,"endColumn":40},{"ruleId":"1463","replacedBy":"1464"},{"ruleId":"1465","replacedBy":"1466"},{"ruleId":"1467","replacedBy":"1468"},{"ruleId":"1469","replacedBy":"1470"},{"ruleId":"1459","severity":1,"message":"1460","line":12,"column":9,"nodeType":"1461","messageId":"1462","endLine":12,"endColumn":20},{"ruleId":"1459","severity":1,"message":"1460","line":14,"column":9,"nodeType":"1461","messageId":"1462","endLine":14,"endColumn":20},{"ruleId":"1471","severity":1,"message":"1472","line":2,"column":56,"nodeType":"1473","endLine":2,"endColumn":68,"fix":"1474"},{"ruleId":"1471","severity":1,"message":"1475","line":9,"column":44,"nodeType":"1473","endLine":9,"endColumn":56,"fix":"1476"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1478"},{"ruleId":"1471","severity":1,"message":"1479","line":78,"column":74,"nodeType":"1473","endLine":78,"endColumn":89,"fix":"1480"},{"ruleId":"1456","severity":1,"message":"1457","line":88,"column":8,"nodeType":"1458","endLine":88,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":137,"column":29,"nodeType":"1461","messageId":"1462","endLine":137,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":143,"column":29,"nodeType":"1461","messageId":"1462","endLine":143,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":148,"column":33,"nodeType":"1461","messageId":"1462","endLine":148,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1481"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1483"},{"ruleId":"1471","severity":1,"message":"1484","line":23,"column":86,"nodeType":"1473","endLine":23,"endColumn":106,"fix":"1485"},{"ruleId":"1471","severity":1,"message":"1479","line":79,"column":74,"nodeType":"1473","endLine":79,"endColumn":89,"fix":"1486"},{"ruleId":"1456","severity":1,"message":"1457","line":103,"column":8,"nodeType":"1458","endLine":103,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":153,"column":29,"nodeType":"1461","messageId":"1462","endLine":153,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":159,"column":29,"nodeType":"1461","messageId":"1462","endLine":159,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":164,"column":33,"nodeType":"1461","messageId":"1462","endLine":164,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":4,"column":55,"nodeType":"1473","endLine":4,"endColumn":84,"fix":"1487"},{"ruleId":"1456","severity":1,"message":"1457","line":37,"column":8,"nodeType":"1458","endLine":37,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":78,"column":29,"nodeType":"1461","messageId":"1462","endLine":78,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":84,"column":29,"nodeType":"1461","messageId":"1462","endLine":84,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":89,"column":33,"nodeType":"1461","messageId":"1462","endLine":89,"endColumn":44},{"ruleId":"1488","severity":1,"message":"1489","line":94,"column":5,"nodeType":"1490","endLine":96,"endColumn":6,"fix":"1491"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1492"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1493"},{"ruleId":"1471","severity":1,"message":"1484","line":23,"column":86,"nodeType":"1473","endLine":23,"endColumn":106,"fix":"1494"},{"ruleId":"1471","severity":1,"message":"1479","line":79,"column":74,"nodeType":"1473","endLine":79,"endColumn":89,"fix":"1495"},{"ruleId":"1456","severity":1,"message":"1457","line":103,"column":8,"nodeType":"1458","endLine":103,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":153,"column":29,"nodeType":"1461","messageId":"1462","endLine":153,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":159,"column":29,"nodeType":"1461","messageId":"1462","endLine":159,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":164,"column":33,"nodeType":"1461","messageId":"1462","endLine":164,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1496"},{"ruleId":"1456","severity":1,"message":"1457","line":71,"column":8,"nodeType":"1458","endLine":71,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":119,"column":29,"nodeType":"1461","messageId":"1462","endLine":119,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":125,"column":29,"nodeType":"1461","messageId":"1462","endLine":125,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":130,"column":33,"nodeType":"1461","messageId":"1462","endLine":130,"endColumn":44},{"ruleId":"1488","severity":1,"message":"1497","line":138,"column":5,"nodeType":"1490","endLine":140,"endColumn":6,"fix":"1498"},{"ruleId":"1471","severity":1,"message":"1477","line":4,"column":55,"nodeType":"1473","endLine":4,"endColumn":84,"fix":"1499"},{"ruleId":"1471","severity":1,"message":"1479","line":63,"column":70,"nodeType":"1473","endLine":63,"endColumn":85,"fix":"1500"},{"ruleId":"1456","severity":1,"message":"1457","line":107,"column":8,"nodeType":"1458","endLine":107,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":162,"column":29,"nodeType":"1461","messageId":"1462","endLine":162,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":168,"column":29,"nodeType":"1461","messageId":"1462","endLine":168,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":173,"column":33,"nodeType":"1461","messageId":"1462","endLine":173,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1501"},{"ruleId":"1471","severity":1,"message":"1479","line":63,"column":74,"nodeType":"1473","endLine":63,"endColumn":89,"fix":"1502"},{"ruleId":"1456","severity":1,"message":"1457","line":107,"column":8,"nodeType":"1458","endLine":107,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":164,"column":29,"nodeType":"1461","messageId":"1462","endLine":164,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":170,"column":29,"nodeType":"1461","messageId":"1462","endLine":170,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":175,"column":33,"nodeType":"1461","messageId":"1462","endLine":175,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1503"},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":84,"nodeType":"1473","endLine":7,"endColumn":103,"fix":"1504"},{"ruleId":"1456","severity":1,"message":"1457","line":58,"column":8,"nodeType":"1458","endLine":58,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":107,"column":29,"nodeType":"1461","messageId":"1462","endLine":107,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":113,"column":29,"nodeType":"1461","messageId":"1462","endLine":113,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":118,"column":33,"nodeType":"1461","messageId":"1462","endLine":118,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1505"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":83,"nodeType":"1473","endLine":11,"endColumn":95,"fix":"1506"},{"ruleId":"1471","severity":1,"message":"1507","line":47,"column":19,"nodeType":"1473","endLine":47,"endColumn":31,"fix":"1508"},{"ruleId":"1471","severity":1,"message":"1509","line":47,"column":32,"nodeType":"1473","endLine":47,"endColumn":53,"fix":"1510"},{"ruleId":"1456","severity":1,"message":"1457","line":63,"column":8,"nodeType":"1458","endLine":63,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":107,"column":29,"nodeType":"1461","messageId":"1462","endLine":107,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":113,"column":29,"nodeType":"1461","messageId":"1462","endLine":113,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":118,"column":33,"nodeType":"1461","messageId":"1462","endLine":118,"endColumn":44},{"ruleId":"1488","severity":1,"message":"1511","line":125,"column":5,"nodeType":"1490","endLine":127,"endColumn":6,"fix":"1512"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1513"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1514"},{"ruleId":"1456","severity":1,"message":"1457","line":80,"column":8,"nodeType":"1458","endLine":80,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":124,"column":29,"nodeType":"1461","messageId":"1462","endLine":124,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":130,"column":29,"nodeType":"1461","messageId":"1462","endLine":130,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":135,"column":33,"nodeType":"1461","messageId":"1462","endLine":135,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1515"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1516"},{"ruleId":"1471","severity":1,"message":"1509","line":22,"column":57,"nodeType":"1473","endLine":22,"endColumn":76,"fix":"1517"},{"ruleId":"1456","severity":1,"message":"1457","line":33,"column":8,"nodeType":"1458","endLine":33,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":69,"column":29,"nodeType":"1461","messageId":"1462","endLine":69,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":75,"column":29,"nodeType":"1461","messageId":"1462","endLine":75,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":80,"column":33,"nodeType":"1461","messageId":"1462","endLine":80,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1518"},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":94,"nodeType":"1473","endLine":7,"endColumn":123,"fix":"1519"},{"ruleId":"1456","severity":1,"message":"1457","line":63,"column":8,"nodeType":"1458","endLine":63,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":117,"column":29,"nodeType":"1461","messageId":"1462","endLine":117,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":123,"column":29,"nodeType":"1461","messageId":"1462","endLine":123,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":128,"column":33,"nodeType":"1461","messageId":"1462","endLine":128,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":4,"column":55,"nodeType":"1473","endLine":4,"endColumn":84,"fix":"1520"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":84,"nodeType":"1473","endLine":12,"endColumn":96,"fix":"1521"},{"ruleId":"1471","severity":1,"message":"1479","line":63,"column":74,"nodeType":"1473","endLine":63,"endColumn":89,"fix":"1522"},{"ruleId":"1456","severity":1,"message":"1457","line":73,"column":8,"nodeType":"1458","endLine":73,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":115,"column":29,"nodeType":"1461","messageId":"1462","endLine":115,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":121,"column":29,"nodeType":"1461","messageId":"1462","endLine":121,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":126,"column":33,"nodeType":"1461","messageId":"1462","endLine":126,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1523"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":113,"nodeType":"1473","endLine":11,"endColumn":125,"fix":"1524"},{"ruleId":"1456","severity":1,"message":"1457","line":68,"column":8,"nodeType":"1458","endLine":68,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":163,"column":29,"nodeType":"1461","messageId":"1462","endLine":163,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":169,"column":29,"nodeType":"1461","messageId":"1462","endLine":169,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":174,"column":33,"nodeType":"1461","messageId":"1462","endLine":174,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1525"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1526"},{"ruleId":"1471","severity":1,"message":"1479","line":94,"column":74,"nodeType":"1473","endLine":94,"endColumn":89,"fix":"1527"},{"ruleId":"1456","severity":1,"message":"1457","line":104,"column":8,"nodeType":"1458","endLine":104,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":198,"column":29,"nodeType":"1461","messageId":"1462","endLine":198,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":204,"column":29,"nodeType":"1461","messageId":"1462","endLine":204,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":209,"column":33,"nodeType":"1461","messageId":"1462","endLine":209,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1528"},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":88,"nodeType":"1473","endLine":7,"endColumn":111,"fix":"1529"},{"ruleId":"1456","severity":1,"message":"1457","line":62,"column":8,"nodeType":"1458","endLine":62,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":115,"column":29,"nodeType":"1461","messageId":"1462","endLine":115,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":121,"column":29,"nodeType":"1461","messageId":"1462","endLine":121,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":126,"column":33,"nodeType":"1461","messageId":"1462","endLine":126,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1530"},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":86,"nodeType":"1473","endLine":7,"endColumn":107,"fix":"1531"},{"ruleId":"1471","severity":1,"message":"1507","line":78,"column":19,"nodeType":"1473","endLine":78,"endColumn":37,"fix":"1532"},{"ruleId":"1471","severity":1,"message":"1509","line":78,"column":38,"nodeType":"1473","endLine":78,"endColumn":65,"fix":"1533"},{"ruleId":"1471","severity":1,"message":"1479","line":106,"column":72,"nodeType":"1473","endLine":106,"endColumn":87,"fix":"1534"},{"ruleId":"1456","severity":1,"message":"1457","line":122,"column":8,"nodeType":"1458","endLine":122,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":239,"column":29,"nodeType":"1461","messageId":"1462","endLine":239,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":245,"column":29,"nodeType":"1461","messageId":"1462","endLine":245,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":250,"column":33,"nodeType":"1461","messageId":"1462","endLine":250,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1535"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":80,"nodeType":"1473","endLine":11,"endColumn":92,"fix":"1536"},{"ruleId":"1471","severity":1,"message":"1509","line":85,"column":19,"nodeType":"1473","endLine":85,"endColumn":45,"fix":"1537"},{"ruleId":"1456","severity":1,"message":"1457","line":98,"column":8,"nodeType":"1458","endLine":98,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":152,"column":29,"nodeType":"1461","messageId":"1462","endLine":152,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":158,"column":29,"nodeType":"1461","messageId":"1462","endLine":158,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":163,"column":33,"nodeType":"1461","messageId":"1462","endLine":163,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1538"},{"ruleId":"1471","severity":1,"message":"1482","line":14,"column":69,"nodeType":"1473","endLine":14,"endColumn":81,"fix":"1539"},{"ruleId":"1471","severity":1,"message":"1479","line":158,"column":64,"nodeType":"1473","endLine":158,"endColumn":79,"fix":"1540"},{"ruleId":"1471","severity":1,"message":"1509","line":194,"column":57,"nodeType":"1473","endLine":194,"endColumn":83,"fix":"1541"},{"ruleId":"1471","severity":1,"message":"1479","line":219,"column":61,"nodeType":"1473","endLine":219,"endColumn":75,"fix":"1542"},{"ruleId":"1456","severity":1,"message":"1457","line":230,"column":8,"nodeType":"1458","endLine":230,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":397,"column":15,"nodeType":"1461","messageId":"1462","endLine":397,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":402,"column":15,"nodeType":"1461","messageId":"1462","endLine":402,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":409,"column":25,"nodeType":"1461","messageId":"1462","endLine":409,"endColumn":36},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1543"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1544"},{"ruleId":"1471","severity":1,"message":"1484","line":23,"column":86,"nodeType":"1473","endLine":23,"endColumn":106,"fix":"1545"},{"ruleId":"1471","severity":1,"message":"1479","line":79,"column":74,"nodeType":"1473","endLine":79,"endColumn":89,"fix":"1546"},{"ruleId":"1456","severity":1,"message":"1457","line":103,"column":8,"nodeType":"1458","endLine":103,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":153,"column":29,"nodeType":"1461","messageId":"1462","endLine":153,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":159,"column":29,"nodeType":"1461","messageId":"1462","endLine":159,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":164,"column":33,"nodeType":"1461","messageId":"1462","endLine":164,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1547"},{"ruleId":"1471","severity":1,"message":"1479","line":103,"column":72,"nodeType":"1473","endLine":103,"endColumn":87,"fix":"1548"},{"ruleId":"1456","severity":1,"message":"1457","line":119,"column":8,"nodeType":"1458","endLine":119,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":237,"column":29,"nodeType":"1461","messageId":"1462","endLine":237,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":243,"column":29,"nodeType":"1461","messageId":"1462","endLine":243,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":248,"column":33,"nodeType":"1461","messageId":"1462","endLine":248,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1549"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":82,"nodeType":"1473","endLine":11,"endColumn":94,"fix":"1550"},{"ruleId":"1456","severity":1,"message":"1457","line":45,"column":8,"nodeType":"1458","endLine":45,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":88,"column":29,"nodeType":"1461","messageId":"1462","endLine":88,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":94,"column":29,"nodeType":"1461","messageId":"1462","endLine":94,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":99,"column":33,"nodeType":"1461","messageId":"1462","endLine":99,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1551"},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":84,"nodeType":"1473","endLine":7,"endColumn":103,"fix":"1552"},{"ruleId":"1456","severity":1,"message":"1457","line":59,"column":8,"nodeType":"1458","endLine":59,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":108,"column":29,"nodeType":"1461","messageId":"1462","endLine":108,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":114,"column":29,"nodeType":"1461","messageId":"1462","endLine":114,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":119,"column":33,"nodeType":"1461","messageId":"1462","endLine":119,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1553"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1554"},{"ruleId":"1471","severity":1,"message":"1509","line":22,"column":57,"nodeType":"1473","endLine":22,"endColumn":76,"fix":"1555"},{"ruleId":"1456","severity":1,"message":"1457","line":33,"column":8,"nodeType":"1458","endLine":33,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":69,"column":29,"nodeType":"1461","messageId":"1462","endLine":69,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":75,"column":29,"nodeType":"1461","messageId":"1462","endLine":75,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":80,"column":33,"nodeType":"1461","messageId":"1462","endLine":80,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1556"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1557"},{"ruleId":"1471","severity":1,"message":"1507","line":24,"column":19,"nodeType":"1473","endLine":24,"endColumn":35,"fix":"1558"},{"ruleId":"1471","severity":1,"message":"1509","line":24,"column":36,"nodeType":"1473","endLine":24,"endColumn":57,"fix":"1559"},{"ruleId":"1456","severity":1,"message":"1457","line":38,"column":8,"nodeType":"1458","endLine":38,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":86,"column":29,"nodeType":"1461","messageId":"1462","endLine":86,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":92,"column":29,"nodeType":"1461","messageId":"1462","endLine":92,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":97,"column":33,"nodeType":"1461","messageId":"1462","endLine":97,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1560"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":84,"nodeType":"1473","endLine":11,"endColumn":96,"fix":"1561"},{"ruleId":"1471","severity":1,"message":"1479","line":34,"column":78,"nodeType":"1473","endLine":34,"endColumn":93,"fix":"1562"},{"ruleId":"1456","severity":1,"message":"1457","line":44,"column":8,"nodeType":"1458","endLine":44,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":100,"column":29,"nodeType":"1461","messageId":"1462","endLine":100,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":106,"column":29,"nodeType":"1461","messageId":"1462","endLine":106,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":111,"column":33,"nodeType":"1461","messageId":"1462","endLine":111,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1563"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1564"},{"ruleId":"1456","severity":1,"message":"1457","line":40,"column":8,"nodeType":"1458","endLine":40,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":84,"column":29,"nodeType":"1461","messageId":"1462","endLine":84,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":90,"column":29,"nodeType":"1461","messageId":"1462","endLine":90,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":95,"column":33,"nodeType":"1461","messageId":"1462","endLine":95,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1565"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1566"},{"ruleId":"1471","severity":1,"message":"1507","line":47,"column":19,"nodeType":"1473","endLine":47,"endColumn":31,"fix":"1567"},{"ruleId":"1471","severity":1,"message":"1509","line":47,"column":32,"nodeType":"1473","endLine":47,"endColumn":53,"fix":"1568"},{"ruleId":"1456","severity":1,"message":"1457","line":63,"column":8,"nodeType":"1458","endLine":63,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":107,"column":29,"nodeType":"1461","messageId":"1462","endLine":107,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":113,"column":29,"nodeType":"1461","messageId":"1462","endLine":113,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":118,"column":33,"nodeType":"1461","messageId":"1462","endLine":118,"endColumn":44},{"ruleId":"1488","severity":1,"message":"1511","line":125,"column":5,"nodeType":"1490","endLine":127,"endColumn":6,"fix":"1569"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1570"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1571"},{"ruleId":"1471","severity":1,"message":"1484","line":23,"column":86,"nodeType":"1473","endLine":23,"endColumn":106,"fix":"1572"},{"ruleId":"1471","severity":1,"message":"1479","line":79,"column":74,"nodeType":"1473","endLine":79,"endColumn":89,"fix":"1573"},{"ruleId":"1456","severity":1,"message":"1457","line":103,"column":8,"nodeType":"1458","endLine":103,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":153,"column":29,"nodeType":"1461","messageId":"1462","endLine":153,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":159,"column":29,"nodeType":"1461","messageId":"1462","endLine":159,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":164,"column":33,"nodeType":"1461","messageId":"1462","endLine":164,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1574"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":79,"nodeType":"1473","endLine":11,"endColumn":91,"fix":"1575"},{"ruleId":"1471","severity":1,"message":"1507","line":43,"column":19,"nodeType":"1473","endLine":43,"endColumn":31,"fix":"1576"},{"ruleId":"1471","severity":1,"message":"1509","line":43,"column":32,"nodeType":"1473","endLine":43,"endColumn":49,"fix":"1577"},{"ruleId":"1456","severity":1,"message":"1457","line":59,"column":8,"nodeType":"1458","endLine":59,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":95,"column":29,"nodeType":"1461","messageId":"1462","endLine":95,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":101,"column":29,"nodeType":"1461","messageId":"1462","endLine":101,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":106,"column":33,"nodeType":"1461","messageId":"1462","endLine":106,"endColumn":44},{"ruleId":"1488","severity":1,"message":"1578","line":111,"column":5,"nodeType":"1490","endLine":113,"endColumn":6,"fix":"1579"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1580"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":83,"nodeType":"1473","endLine":11,"endColumn":95,"fix":"1581"},{"ruleId":"1456","severity":1,"message":"1457","line":48,"column":8,"nodeType":"1458","endLine":48,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":107,"column":29,"nodeType":"1461","messageId":"1462","endLine":107,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":113,"column":29,"nodeType":"1461","messageId":"1462","endLine":113,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":118,"column":33,"nodeType":"1461","messageId":"1462","endLine":118,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1582"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":83,"nodeType":"1473","endLine":11,"endColumn":95,"fix":"1583"},{"ruleId":"1456","severity":1,"message":"1457","line":32,"column":8,"nodeType":"1458","endLine":32,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":73,"column":29,"nodeType":"1461","messageId":"1462","endLine":73,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":79,"column":29,"nodeType":"1461","messageId":"1462","endLine":79,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":84,"column":33,"nodeType":"1461","messageId":"1462","endLine":84,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1584"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1585"},{"ruleId":"1471","severity":1,"message":"1484","line":23,"column":86,"nodeType":"1473","endLine":23,"endColumn":106,"fix":"1586"},{"ruleId":"1471","severity":1,"message":"1479","line":79,"column":74,"nodeType":"1473","endLine":79,"endColumn":89,"fix":"1587"},{"ruleId":"1456","severity":1,"message":"1457","line":103,"column":8,"nodeType":"1458","endLine":103,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":153,"column":29,"nodeType":"1461","messageId":"1462","endLine":153,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":159,"column":29,"nodeType":"1461","messageId":"1462","endLine":159,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":164,"column":33,"nodeType":"1461","messageId":"1462","endLine":164,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1588"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":71,"nodeType":"1473","endLine":12,"endColumn":83,"fix":"1589"},{"ruleId":"1456","severity":1,"message":"1457","line":93,"column":8,"nodeType":"1458","endLine":93,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":182,"column":15,"nodeType":"1461","messageId":"1462","endLine":182,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":187,"column":15,"nodeType":"1461","messageId":"1462","endLine":187,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":194,"column":25,"nodeType":"1461","messageId":"1462","endLine":194,"endColumn":36},{"ruleId":"1590","severity":1,"message":"1591","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":28},{"ruleId":"1590","severity":1,"message":"1593","line":20,"column":23,"nodeType":"1592","endLine":20,"endColumn":27},{"ruleId":"1456","severity":1,"message":"1457","line":94,"column":8,"nodeType":"1458","endLine":94,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":142,"column":29,"nodeType":"1461","messageId":"1462","endLine":142,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":83,"nodeType":"1473","endLine":11,"endColumn":95,"fix":"1594"},{"ruleId":"1456","severity":1,"message":"1457","line":33,"column":8,"nodeType":"1458","endLine":33,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":81,"column":29,"nodeType":"1461","messageId":"1462","endLine":81,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":106,"column":8,"nodeType":"1458","endLine":106,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":210,"column":15,"nodeType":"1461","messageId":"1462","endLine":210,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":215,"column":15,"nodeType":"1461","messageId":"1462","endLine":215,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":222,"column":25,"nodeType":"1461","messageId":"1462","endLine":222,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":68,"column":8,"nodeType":"1458","endLine":68,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":137,"column":15,"nodeType":"1461","messageId":"1462","endLine":137,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":142,"column":15,"nodeType":"1461","messageId":"1462","endLine":142,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":149,"column":25,"nodeType":"1461","messageId":"1462","endLine":149,"endColumn":36},{"ruleId":"1456","severity":1,"message":"1457","line":93,"column":10,"nodeType":"1458","endLine":93,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":187,"column":15,"nodeType":"1461","messageId":"1462","endLine":187,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":192,"column":15,"nodeType":"1461","messageId":"1462","endLine":192,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":199,"column":25,"nodeType":"1461","messageId":"1462","endLine":199,"endColumn":36},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1595"},{"ruleId":"1471","severity":1,"message":"1482","line":14,"column":74,"nodeType":"1473","endLine":14,"endColumn":86,"fix":"1596"},{"ruleId":"1456","severity":1,"message":"1457","line":101,"column":8,"nodeType":"1458","endLine":101,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":210,"column":15,"nodeType":"1461","messageId":"1462","endLine":210,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":215,"column":15,"nodeType":"1461","messageId":"1462","endLine":215,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":222,"column":25,"nodeType":"1461","messageId":"1462","endLine":222,"endColumn":36},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":83,"nodeType":"1473","endLine":11,"endColumn":95,"fix":"1597"},{"ruleId":"1456","severity":1,"message":"1457","line":49,"column":8,"nodeType":"1458","endLine":49,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":97,"column":29,"nodeType":"1461","messageId":"1462","endLine":97,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":2,"column":5,"nodeType":"1461","messageId":"1462","endLine":2,"endColumn":16},{"ruleId":"1459","severity":1,"message":"1460","line":3,"column":5,"nodeType":"1461","messageId":"1462","endLine":3,"endColumn":18},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":79,"nodeType":"1473","endLine":11,"endColumn":91,"fix":"1598"},{"ruleId":"1471","severity":1,"message":"1507","line":43,"column":19,"nodeType":"1473","endLine":43,"endColumn":31,"fix":"1599"},{"ruleId":"1456","severity":1,"message":"1457","line":60,"column":8,"nodeType":"1458","endLine":60,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":108,"column":29,"nodeType":"1461","messageId":"1462","endLine":108,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":81,"nodeType":"1473","endLine":11,"endColumn":93,"fix":"1600"},{"ruleId":"1471","severity":1,"message":"1507","line":47,"column":19,"nodeType":"1473","endLine":47,"endColumn":31,"fix":"1601"},{"ruleId":"1456","severity":1,"message":"1457","line":64,"column":8,"nodeType":"1458","endLine":64,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":112,"column":29,"nodeType":"1461","messageId":"1462","endLine":112,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":84,"nodeType":"1473","endLine":11,"endColumn":96,"fix":"1602"},{"ruleId":"1456","severity":1,"message":"1457","line":46,"column":8,"nodeType":"1458","endLine":46,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":94,"column":29,"nodeType":"1461","messageId":"1462","endLine":94,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1603"},{"ruleId":"1471","severity":1,"message":"1507","line":24,"column":19,"nodeType":"1473","endLine":24,"endColumn":35,"fix":"1604"},{"ruleId":"1456","severity":1,"message":"1457","line":39,"column":8,"nodeType":"1458","endLine":39,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":87,"column":29,"nodeType":"1461","messageId":"1462","endLine":87,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":84,"nodeType":"1473","endLine":7,"endColumn":103,"fix":"1605"},{"ruleId":"1456","severity":1,"message":"1457","line":60,"column":8,"nodeType":"1458","endLine":60,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":108,"column":29,"nodeType":"1461","messageId":"1462","endLine":108,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":82,"nodeType":"1473","endLine":11,"endColumn":94,"fix":"1606"},{"ruleId":"1456","severity":1,"message":"1457","line":46,"column":8,"nodeType":"1458","endLine":46,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":94,"column":29,"nodeType":"1461","messageId":"1462","endLine":94,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":111,"column":8,"nodeType":"1458","endLine":111,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":159,"column":29,"nodeType":"1461","messageId":"1462","endLine":159,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":69,"nodeType":"1473","endLine":12,"endColumn":81,"fix":"1607"},{"ruleId":"1456","severity":1,"message":"1457","line":231,"column":8,"nodeType":"1458","endLine":231,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":279,"column":29,"nodeType":"1461","messageId":"1462","endLine":279,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":80,"nodeType":"1473","endLine":11,"endColumn":92,"fix":"1608"},{"ruleId":"1456","severity":1,"message":"1457","line":99,"column":8,"nodeType":"1458","endLine":99,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":147,"column":29,"nodeType":"1461","messageId":"1462","endLine":147,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":86,"nodeType":"1473","endLine":7,"endColumn":107,"fix":"1609"},{"ruleId":"1471","severity":1,"message":"1507","line":78,"column":19,"nodeType":"1473","endLine":78,"endColumn":37,"fix":"1610"},{"ruleId":"1456","severity":1,"message":"1457","line":118,"column":8,"nodeType":"1458","endLine":118,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":167,"column":29,"nodeType":"1461","messageId":"1462","endLine":167,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":88,"nodeType":"1473","endLine":7,"endColumn":111,"fix":"1611"},{"ruleId":"1456","severity":1,"message":"1457","line":63,"column":8,"nodeType":"1458","endLine":63,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":111,"column":29,"nodeType":"1461","messageId":"1462","endLine":111,"endColumn":40},{"ruleId":"1488","severity":1,"message":"1612","line":327,"column":3,"nodeType":"1490","endLine":332,"endColumn":4},{"ruleId":"1471","severity":1,"message":"1472","line":3,"column":69,"nodeType":"1473","endLine":3,"endColumn":81,"fix":"1613"},{"ruleId":"1471","severity":1,"message":"1614","line":14,"column":135,"nodeType":"1473","endLine":14,"endColumn":147,"fix":"1615"},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":113,"nodeType":"1473","endLine":11,"endColumn":125,"fix":"1616"},{"ruleId":"1456","severity":1,"message":"1457","line":69,"column":8,"nodeType":"1458","endLine":69,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":117,"column":29,"nodeType":"1461","messageId":"1462","endLine":117,"endColumn":40},{"ruleId":"1590","severity":1,"message":"1617","line":14,"column":39,"nodeType":"1592","endLine":14,"endColumn":48},{"ruleId":"1590","severity":1,"message":"1618","line":14,"column":39,"nodeType":"1592","endLine":14,"endColumn":46},{"ruleId":"1590","severity":1,"message":"1617","line":14,"column":39,"nodeType":"1592","endLine":14,"endColumn":48},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":84,"nodeType":"1473","endLine":12,"endColumn":96,"fix":"1619"},{"ruleId":"1456","severity":1,"message":"1457","line":74,"column":8,"nodeType":"1458","endLine":74,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":122,"column":29,"nodeType":"1461","messageId":"1462","endLine":122,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":94,"nodeType":"1473","endLine":7,"endColumn":123,"fix":"1620"},{"ruleId":"1456","severity":1,"message":"1457","line":62,"column":8,"nodeType":"1458","endLine":62,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":112,"column":29,"nodeType":"1461","messageId":"1462","endLine":112,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":105,"column":8,"nodeType":"1458","endLine":105,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":153,"column":29,"nodeType":"1461","messageId":"1462","endLine":153,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":90,"nodeType":"1473","endLine":11,"endColumn":102,"fix":"1621"},{"ruleId":"1456","severity":1,"message":"1457","line":33,"column":8,"nodeType":"1458","endLine":33,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":84,"column":29,"nodeType":"1461","messageId":"1462","endLine":84,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":7,"column":84,"nodeType":"1473","endLine":7,"endColumn":103,"fix":"1622"},{"ruleId":"1456","severity":1,"message":"1457","line":59,"column":8,"nodeType":"1458","endLine":59,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":107,"column":29,"nodeType":"1461","messageId":"1462","endLine":107,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":11,"column":83,"nodeType":"1473","endLine":11,"endColumn":95,"fix":"1623"},{"ruleId":"1471","severity":1,"message":"1507","line":47,"column":19,"nodeType":"1473","endLine":47,"endColumn":31,"fix":"1624"},{"ruleId":"1456","severity":1,"message":"1457","line":64,"column":8,"nodeType":"1458","endLine":64,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":112,"column":29,"nodeType":"1461","messageId":"1462","endLine":112,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":108,"column":8,"nodeType":"1458","endLine":108,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":156,"column":29,"nodeType":"1461","messageId":"1462","endLine":156,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":72,"column":8,"nodeType":"1458","endLine":72,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":120,"column":29,"nodeType":"1461","messageId":"1462","endLine":120,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":108,"column":8,"nodeType":"1458","endLine":108,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":156,"column":29,"nodeType":"1461","messageId":"1462","endLine":156,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":38,"column":8,"nodeType":"1458","endLine":38,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":86,"column":29,"nodeType":"1461","messageId":"1462","endLine":86,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1625"},{"ruleId":"1456","severity":1,"message":"1457","line":104,"column":8,"nodeType":"1458","endLine":104,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":152,"column":29,"nodeType":"1461","messageId":"1462","endLine":152,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":89,"column":8,"nodeType":"1458","endLine":89,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":137,"column":29,"nodeType":"1461","messageId":"1462","endLine":137,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1626"},{"ruleId":"1471","severity":1,"message":"1482","line":12,"column":83,"nodeType":"1473","endLine":12,"endColumn":95,"fix":"1627"},{"ruleId":"1471","severity":1,"message":"1509","line":96,"column":81,"nodeType":"1473","endLine":96,"endColumn":108,"fix":"1628"},{"ruleId":"1471","severity":1,"message":"1479","line":124,"column":74,"nodeType":"1473","endLine":124,"endColumn":89,"fix":"1629"},{"ruleId":"1471","severity":1,"message":"1509","line":155,"column":19,"nodeType":"1473","endLine":155,"endColumn":45,"fix":"1630"},{"ruleId":"1471","severity":1,"message":"1631","line":176,"column":53,"nodeType":"1473","endLine":176,"endColumn":67,"fix":"1632"},{"ruleId":"1456","severity":1,"message":"1457","line":186,"column":8,"nodeType":"1458","endLine":186,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":344,"column":29,"nodeType":"1461","messageId":"1462","endLine":344,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":350,"column":29,"nodeType":"1461","messageId":"1462","endLine":350,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":355,"column":33,"nodeType":"1461","messageId":"1462","endLine":355,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1633","line":25,"column":86,"nodeType":"1473","endLine":25,"endColumn":98,"fix":"1634"},{"ruleId":"1471","severity":1,"message":"1633","line":33,"column":84,"nodeType":"1473","endLine":33,"endColumn":96,"fix":"1635"},{"ruleId":"1471","severity":1,"message":"1633","line":41,"column":84,"nodeType":"1473","endLine":41,"endColumn":96,"fix":"1636"},{"ruleId":"1471","severity":1,"message":"1633","line":49,"column":84,"nodeType":"1473","endLine":49,"endColumn":96,"fix":"1637"},{"ruleId":"1471","severity":1,"message":"1633","line":57,"column":84,"nodeType":"1473","endLine":57,"endColumn":96,"fix":"1638"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":51,"nodeType":"1473","endLine":3,"endColumn":80,"fix":"1639"},{"ruleId":"1471","severity":1,"message":"1507","line":78,"column":19,"nodeType":"1473","endLine":78,"endColumn":37,"fix":"1640"},{"ruleId":"1471","severity":1,"message":"1509","line":78,"column":38,"nodeType":"1473","endLine":78,"endColumn":65,"fix":"1641"},{"ruleId":"1471","severity":1,"message":"1479","line":105,"column":72,"nodeType":"1473","endLine":105,"endColumn":87,"fix":"1642"},{"ruleId":"1456","severity":1,"message":"1457","line":121,"column":8,"nodeType":"1458","endLine":121,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":239,"column":29,"nodeType":"1461","messageId":"1462","endLine":239,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":245,"column":29,"nodeType":"1461","messageId":"1462","endLine":245,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":250,"column":33,"nodeType":"1461","messageId":"1462","endLine":250,"endColumn":44},{"ruleId":"1488","severity":1,"message":"1643","line":69,"column":5,"nodeType":"1490","endLine":77,"endColumn":6,"fix":"1644"},{"ruleId":"1590","severity":1,"message":"1645","line":20,"column":23,"nodeType":"1592","endLine":20,"endColumn":32},{"ruleId":"1590","severity":1,"message":"1646","line":20,"column":23,"nodeType":"1592","endLine":20,"endColumn":31},{"ruleId":"1590","severity":1,"message":"1647","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":31},{"ruleId":"1590","severity":1,"message":"1648","line":21,"column":23,"nodeType":"1592","endLine":21,"endColumn":29},{"ruleId":"1590","severity":1,"message":"1649","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":30},{"ruleId":"1590","severity":1,"message":"1650","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":32},{"ruleId":"1590","severity":1,"message":"1651","line":21,"column":23,"nodeType":"1592","endLine":21,"endColumn":34},{"ruleId":"1590","severity":1,"message":"1652","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":29},{"ruleId":"1590","severity":1,"message":"1653","line":23,"column":23,"nodeType":"1592","endLine":23,"endColumn":33},{"ruleId":"1590","severity":1,"message":"1654","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":35},{"ruleId":"1590","severity":1,"message":"1655","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":32},{"ruleId":"1590","severity":1,"message":"1656","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":30},{"ruleId":"1471","severity":1,"message":"1657","line":10,"column":36,"nodeType":"1473","endLine":10,"endColumn":46,"fix":"1658"},{"ruleId":"1590","severity":1,"message":"1659","line":23,"column":23,"nodeType":"1592","endLine":23,"endColumn":29},{"ruleId":"1590","severity":1,"message":"1660","line":27,"column":23,"nodeType":"1592","endLine":27,"endColumn":31},{"ruleId":"1590","severity":1,"message":"1661","line":24,"column":23,"nodeType":"1592","endLine":24,"endColumn":33},{"ruleId":"1471","severity":1,"message":"1657","line":10,"column":36,"nodeType":"1473","endLine":10,"endColumn":46,"fix":"1662"},{"ruleId":"1590","severity":1,"message":"1663","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":30},{"ruleId":"1590","severity":1,"message":"1664","line":24,"column":23,"nodeType":"1592","endLine":24,"endColumn":33},{"ruleId":"1471","severity":1,"message":"1657","line":10,"column":36,"nodeType":"1473","endLine":10,"endColumn":46,"fix":"1665"},{"ruleId":"1590","severity":1,"message":"1618","line":20,"column":23,"nodeType":"1592","endLine":20,"endColumn":30},{"ruleId":"1590","severity":1,"message":"1666","line":19,"column":23,"nodeType":"1592","endLine":19,"endColumn":45},{"ruleId":"1590","severity":1,"message":"1667","line":24,"column":23,"nodeType":"1592","endLine":24,"endColumn":29},{"ruleId":"1590","severity":1,"message":"1668","line":25,"column":23,"nodeType":"1592","endLine":25,"endColumn":32},{"ruleId":"1590","severity":1,"message":"1669","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":29},{"ruleId":"1590","severity":1,"message":"1670","line":24,"column":23,"nodeType":"1592","endLine":24,"endColumn":28},{"ruleId":"1590","severity":1,"message":"1671","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":31},{"ruleId":"1471","severity":1,"message":"1672","line":27,"column":74,"nodeType":"1473","endLine":27,"endColumn":92,"fix":"1673"},{"ruleId":"1471","severity":1,"message":"1672","line":29,"column":71,"nodeType":"1473","endLine":29,"endColumn":90,"fix":"1674"},{"ruleId":"1590","severity":1,"message":"1675","line":24,"column":23,"nodeType":"1592","endLine":24,"endColumn":36},{"ruleId":"1590","severity":1,"message":"1676","line":26,"column":23,"nodeType":"1592","endLine":26,"endColumn":31},{"ruleId":"1590","severity":1,"message":"1677","line":25,"column":23,"nodeType":"1592","endLine":25,"endColumn":28},{"ruleId":"1590","severity":1,"message":"1617","line":24,"column":23,"nodeType":"1592","endLine":24,"endColumn":32},{"ruleId":"1456","severity":1,"message":"1457","line":80,"column":8,"nodeType":"1458","endLine":80,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":158,"column":15,"nodeType":"1461","messageId":"1462","endLine":158,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":163,"column":15,"nodeType":"1461","messageId":"1462","endLine":163,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":170,"column":25,"nodeType":"1461","messageId":"1462","endLine":170,"endColumn":36},{"ruleId":"1471","severity":1,"message":"1472","line":3,"column":65,"nodeType":"1473","endLine":3,"endColumn":77,"fix":"1678"},{"ruleId":"1471","severity":1,"message":"1472","line":23,"column":65,"nodeType":"1473","endLine":23,"endColumn":77,"fix":"1679"},{"ruleId":"1471","severity":1,"message":"1472","line":3,"column":82,"nodeType":"1473","endLine":3,"endColumn":96,"fix":"1680"},{"ruleId":"1681","severity":1,"message":"1682","line":27,"column":11,"nodeType":"1683","endLine":27,"endColumn":18},{"ruleId":"1488","severity":1,"message":"1684","line":28,"column":3,"nodeType":"1490","endLine":28,"endColumn":26,"fix":"1685"},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":50,"nodeType":"1473","endLine":3,"endColumn":79,"fix":"1686"},{"ruleId":"1456","severity":1,"message":"1457","line":60,"column":10,"nodeType":"1458","endLine":60,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":120,"column":15,"nodeType":"1461","messageId":"1462","endLine":120,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":125,"column":15,"nodeType":"1461","messageId":"1462","endLine":125,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":132,"column":25,"nodeType":"1461","messageId":"1462","endLine":132,"endColumn":36},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":55,"nodeType":"1473","endLine":3,"endColumn":84,"fix":"1687"},{"ruleId":"1456","severity":1,"message":"1457","line":44,"column":8,"nodeType":"1458","endLine":44,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":95,"column":29,"nodeType":"1461","messageId":"1462","endLine":95,"endColumn":40},{"ruleId":"1459","severity":1,"message":"1460","line":101,"column":29,"nodeType":"1461","messageId":"1462","endLine":101,"endColumn":42},{"ruleId":"1459","severity":1,"message":"1460","line":106,"column":33,"nodeType":"1461","messageId":"1462","endLine":106,"endColumn":44},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":50,"nodeType":"1473","endLine":3,"endColumn":79,"fix":"1688"},{"ruleId":"1456","severity":1,"message":"1457","line":60,"column":10,"nodeType":"1458","endLine":60,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":120,"column":15,"nodeType":"1461","messageId":"1462","endLine":120,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":125,"column":15,"nodeType":"1461","messageId":"1462","endLine":125,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":132,"column":25,"nodeType":"1461","messageId":"1462","endLine":132,"endColumn":36},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":93,"nodeType":"1473","endLine":3,"endColumn":122,"fix":"1689"},{"ruleId":"1456","severity":1,"message":"1457","line":45,"column":8,"nodeType":"1458","endLine":45,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":93,"column":29,"nodeType":"1461","messageId":"1462","endLine":93,"endColumn":40},{"ruleId":"1471","severity":1,"message":"1477","line":3,"column":99,"nodeType":"1473","endLine":3,"endColumn":128,"fix":"1690"},{"ruleId":"1456","severity":1,"message":"1457","line":61,"column":8,"nodeType":"1458","endLine":61,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":109,"column":29,"nodeType":"1461","messageId":"1462","endLine":109,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":93,"column":10,"nodeType":"1458","endLine":93,"endColumn":13},{"ruleId":"1459","severity":1,"message":"1460","line":187,"column":15,"nodeType":"1461","messageId":"1462","endLine":187,"endColumn":26},{"ruleId":"1459","severity":1,"message":"1460","line":192,"column":15,"nodeType":"1461","messageId":"1462","endLine":192,"endColumn":28},{"ruleId":"1459","severity":1,"message":"1460","line":199,"column":25,"nodeType":"1461","messageId":"1462","endLine":199,"endColumn":36},{"ruleId":"1590","severity":1,"message":"1691","line":26,"column":22,"nodeType":"1592","endLine":26,"endColumn":26},{"ruleId":"1590","severity":1,"message":"1692","line":23,"column":31,"nodeType":"1592","endLine":23,"endColumn":39},{"ruleId":"1590","severity":1,"message":"1693","line":22,"column":31,"nodeType":"1592","endLine":22,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":106,"column":8,"nodeType":"1458","endLine":106,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":154,"column":29,"nodeType":"1461","messageId":"1462","endLine":154,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":94,"column":8,"nodeType":"1458","endLine":94,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":142,"column":29,"nodeType":"1461","messageId":"1462","endLine":142,"endColumn":40},{"ruleId":"1456","severity":1,"message":"1457","line":118,"column":8,"nodeType":"1458","endLine":118,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":166,"column":29,"nodeType":"1461","messageId":"1462","endLine":166,"endColumn":40},{"ruleId":"1590","severity":1,"message":"1694","line":20,"column":31,"nodeType":"1592","endLine":20,"endColumn":38},{"ruleId":"1590","severity":1,"message":"1694","line":20,"column":31,"nodeType":"1592","endLine":20,"endColumn":38},{"ruleId":"1456","severity":1,"message":"1457","line":81,"column":8,"nodeType":"1458","endLine":81,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":129,"column":29,"nodeType":"1461","messageId":"1462","endLine":129,"endColumn":40},{"ruleId":"1590","severity":1,"message":"1695","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":30},{"ruleId":"1463","replacedBy":"1696"},{"ruleId":"1465","replacedBy":"1697"},{"ruleId":"1467","replacedBy":"1698"},{"ruleId":"1469","replacedBy":"1699"},{"ruleId":"1456","severity":1,"message":"1457","line":69,"column":8,"nodeType":"1458","endLine":69,"endColumn":11},{"ruleId":"1459","severity":1,"message":"1460","line":117,"column":29,"nodeType":"1461","messageId":"1462","endLine":117,"endColumn":40},{"ruleId":"1590","severity":1,"message":"1700","line":22,"column":23,"nodeType":"1592","endLine":22,"endColumn":36},"import/no-named-as-default","Using exported name 'gql' as identifier for default export.","ImportDefaultSpecifier","no-console","Unexpected console statement.","MemberExpression","unexpected","unicorn/no-array-instanceof",["1701"],"unicorn/prefer-exponentiation-operator",["1702"],"unicorn/prefer-starts-ends-with",["1703"],"unicorn/prefer-text-content",["1704"],"vue/attributes-order","Attribute \"id\" should go before \"class\".","VAttribute",{"range":"1705","text":"1706"},"Attribute \"v-if\" should go before \":message\".",{"range":"1707","text":"1708"},"Attribute \"enctype\" should go before \"@submit.prevent\".",{"range":"1709","text":"1710"},"Attribute \"v-model\" should go before \"name\".",{"range":"1711","text":"1712"},{"range":"1713","text":"1710"},"Attribute \"label\" should go before \"@click\".",{"range":"1714","text":"1715"},"Attribute \"v-model\" should go before \":options\".",{"range":"1716","text":"1717"},{"range":"1718","text":"1712"},{"range":"1719","text":"1710"},"vue/order-in-components","The \"head\" property should be above the \"methods\" property on line 61.","Property",{"range":"1720","text":"1721"},{"range":"1722","text":"1710"},{"range":"1723","text":"1715"},{"range":"1724","text":"1717"},{"range":"1725","text":"1712"},{"range":"1726","text":"1710"},"The \"head\" property should be above the \"methods\" property on line 99.",{"range":"1727","text":"1728"},{"range":"1729","text":"1710"},{"range":"1730","text":"1712"},{"range":"1731","text":"1710"},{"range":"1732","text":"1712"},{"range":"1733","text":"1710"},{"range":"1734","text":"1735"},{"range":"1736","text":"1710"},{"range":"1737","text":"1738"},"Attribute \"id\" should go before \"type\".",{"range":"1739","text":"1740"},"Attribute \"v-model\" should go before \"type\".",{"range":"1741","text":"1742"},"The \"head\" property should be above the \"methods\" property on line 89.",{"range":"1743","text":"1744"},{"range":"1745","text":"1710"},{"range":"1746","text":"1747"},{"range":"1748","text":"1710"},{"range":"1749","text":"1750"},{"range":"1751","text":"1752"},{"range":"1753","text":"1710"},{"range":"1754","text":"1755"},{"range":"1756","text":"1710"},{"range":"1757","text":"1758"},{"range":"1759","text":"1712"},{"range":"1760","text":"1710"},{"range":"1761","text":"1762"},{"range":"1763","text":"1710"},{"range":"1764","text":"1765"},{"range":"1766","text":"1712"},{"range":"1767","text":"1710"},{"range":"1768","text":"1769"},{"range":"1770","text":"1710"},{"range":"1771","text":"1772"},{"range":"1773","text":"1774"},{"range":"1775","text":"1776"},{"range":"1777","text":"1712"},{"range":"1778","text":"1710"},{"range":"1779","text":"1780"},{"range":"1781","text":"1782"},{"range":"1783","text":"1710"},{"range":"1784","text":"1785"},{"range":"1786","text":"1712"},{"range":"1787","text":"1782"},{"range":"1788","text":"1789"},{"range":"1790","text":"1710"},{"range":"1791","text":"1715"},{"range":"1792","text":"1717"},{"range":"1793","text":"1712"},{"range":"1794","text":"1710"},{"range":"1795","text":"1712"},{"range":"1796","text":"1710"},{"range":"1797","text":"1798"},{"range":"1799","text":"1710"},{"range":"1800","text":"1801"},{"range":"1802","text":"1710"},{"range":"1803","text":"1750"},{"range":"1804","text":"1752"},{"range":"1805","text":"1710"},{"range":"1806","text":"1807"},{"range":"1808","text":"1809"},{"range":"1810","text":"1811"},{"range":"1812","text":"1710"},{"range":"1813","text":"1814"},{"range":"1815","text":"1712"},{"range":"1816","text":"1710"},{"range":"1817","text":"1747"},{"range":"1818","text":"1710"},{"range":"1819","text":"1820"},{"range":"1821","text":"1740"},{"range":"1822","text":"1742"},{"range":"1823","text":"1824"},{"range":"1825","text":"1710"},{"range":"1826","text":"1715"},{"range":"1827","text":"1717"},{"range":"1828","text":"1712"},{"range":"1829","text":"1710"},{"range":"1830","text":"1831"},{"range":"1832","text":"1740"},{"range":"1833","text":"1834"},"The \"head\" property should be above the \"methods\" property on line 81.",{"range":"1835","text":"1836"},{"range":"1837","text":"1710"},{"range":"1838","text":"1839"},{"range":"1840","text":"1710"},{"range":"1841","text":"1842"},{"range":"1843","text":"1710"},{"range":"1844","text":"1715"},{"range":"1845","text":"1717"},{"range":"1846","text":"1712"},{"range":"1847","text":"1710"},{"range":"1848","text":"1849"},"vue/no-template-shadow","Variable 'pages' is already declared in the upper scope.","Identifier","Variable 'tags' is already declared in the upper scope.",{"range":"1850","text":"1842"},{"range":"1851","text":"1710"},{"range":"1852","text":"1853"},{"range":"1854","text":"1839"},{"range":"1855","text":"1831"},{"range":"1856","text":"1740"},{"range":"1857","text":"1820"},{"range":"1858","text":"1740"},{"range":"1859","text":"1814"},{"range":"1860","text":"1807"},{"range":"1861","text":"1809"},{"range":"1862","text":"1801"},{"range":"1863","text":"1798"},{"range":"1864","text":"1785"},{"range":"1865","text":"1780"},{"range":"1866","text":"1772"},{"range":"1867","text":"1774"},{"range":"1868","text":"1769"},"The \"data\" property should be above the \"computed\" property on line 324.",{"range":"1869","text":"1870"},"Attribute \":key\" should go before \"class\".",{"range":"1871","text":"1872"},{"range":"1873","text":"1762"},"Variable 'customers' is already declared in the upper scope.","Variable 'reviews' is already declared in the upper scope.",{"range":"1874","text":"1758"},{"range":"1875","text":"1755"},{"range":"1876","text":"1877"},{"range":"1878","text":"1735"},{"range":"1879","text":"1738"},{"range":"1880","text":"1740"},{"range":"1881","text":"1715"},{"range":"1882","text":"1710"},{"range":"1883","text":"1785"},{"range":"1884","text":"1885"},{"range":"1886","text":"1712"},{"range":"1887","text":"1782"},"Attribute \"v-model\" should go before \":uppy\".",{"range":"1888","text":"1889"},"Attribute \"id\" should go before \"name\".",{"range":"1890","text":"1891"},{"range":"1892","text":"1893"},{"range":"1894","text":"1893"},{"range":"1895","text":"1893"},{"range":"1896","text":"1893"},{"range":"1897","text":"1710"},{"range":"1898","text":"1774"},{"range":"1899","text":"1776"},{"range":"1900","text":"1712"},"The \"components\" property should be above the \"layout\" property on line 68.",{"range":"1901","text":"1902"},"Variable 'warehouse' is already declared in the upper scope.","Variable 'tax_rule' is already declared in the upper scope.","Variable 'tax_rate' is already declared in the upper scope.","Variable 'states' is already declared in the upper scope.","Variable 'coupons' is already declared in the upper scope.","Variable 'countries' is already declared in the upper scope.","Variable 'collections' is already declared in the upper scope.","Variable 'cities' is already declared in the upper scope.","Variable 'categories' is already declared in the upper scope.","Variable 'transactions' is already declared in the upper scope.","Variable 'shipments' is already declared in the upper scope.","Variable 'returns' is already declared in the upper scope.","Attribute \"id\" should go before \"data-toggle\".",{"range":"1903","text":"1904"},"Variable 'quotes' is already declared in the upper scope.","Variable 'invoices' is already declared in the upper scope.","Variable 'agreements' is already declared in the upper scope.",{"range":"1905","text":"1904"},"Variable 'surveys' is already declared in the upper scope.","Variable 'statistics' is already declared in the upper scope.",{"range":"1906","text":"1904"},"Variable 'newsletter_subscribers' is already declared in the upper scope.","Variable 'events' is already declared in the upper scope.","Variable 'contracts' is already declared in the upper scope.","Variable 'emails' is already declared in the upper scope.","Variable 'tasks' is already declared in the upper scope.","Variable 'segments' is already declared in the upper scope.","Attribute \"id\" should go before \":options\".",{"range":"1907","text":"1908"},{"range":"1909","text":"1910"},"Variable 'opportunities' is already declared in the upper scope.","Variable 'meetings' is already declared in the upper scope.","Variable 'leads' is already declared in the upper scope.",{"range":"1911","text":"1912"},{"range":"1913","text":"1914"},{"range":"1915","text":"1916"},"vue/require-prop-types","Prop \"error\" should define at least its type.","Literal","The \"components\" property should be above the \"props\" property on line 27.",{"range":"1917","text":"1918"},{"range":"1919","text":"1920"},{"range":"1921","text":"1710"},{"range":"1922","text":"1920"},{"range":"1923","text":"1710"},{"range":"1924","text":"1920"},"Variable 'ooto' is already declared in the upper scope.","Variable 'payments' is already declared in the upper scope.","Variable 'providers' is already declared in the upper scope.","Variable 'importm' is already declared in the upper scope.","Variable 'rewards' is already declared in the upper scope.",["1701"],["1702"],["1703"],["1704"],"Variable 'knowledgebase' is already declared in the upper scope.","unicorn/no-instanceof-array","prefer-exponentiation-operator","unicorn/prefer-string-starts-ends-with","unicorn/prefer-dom-node-text-content",[23,79],"id=\"form4-g\" class=\"form4 cid-t58K4mPmcD mbr-fullscreen\"",[401,430],"v-if=\"error\" :message=\"error\"",[60,106],"enctype=\"multipart/form-data\"  @submit.prevent",[4207,4238],"v-model=\"image\" name=\"headshot\"",[60,106],[571,603],"label=\"Save\" @click=\"addArticle\"",[1094,1141],"v-model=\"categories\" :options=\"categories.name\"",[4350,4381],[62,108],[2099,3504],"\r\n    head: {\r\n        title: 'Add New Attribute'\r\n    }, \r\n   /* eslint-disable camelcase */\r\n  methods: {\r\n      async addAttribute() {\r\n            const attribute_code = this.attribute_code;\r\n            const default_label = this.default_label;\r\n            const default_value = this.default_value;\r\n        \r\n            await this.$apollo.mutate({\r\n                mutation: ADD_ATTRIBUTES,\r\n                variables: {\r\n                    attribute_code,\r\n                    default_label,\r\n                    default_value,\r\n                 },\r\n        update: (cache, { data: { insertAttributes }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedAttribute = insertAttributes.returning;\r\n                            console.log(insertedAttribute)\r\n                            cache.writeQuery({\r\n                                query: attributes\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/attributes'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n            },\r\n        },",[60,106],[571,603],[1094,1141],[4350,4381],[60,106],[3928,5462],"\r\n    head: {\r\n        title: 'Add New City'\r\n    }, \r\n   \r\n  methods: {\r\n      async addCity() {\r\n            const name = this.name;\r\n            const state = this.state;\r\n            const country = this.country;\r\n            const postalCode = this.postalCode;\r\n            const description = this.description;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_CITIES,\r\n                variables: {\r\n                    name,\r\n                    state,\r\n                    country,\r\n                    postalCode,\r\n                    description,\r\n                 },\r\n        update: (cache, { data: { insertCities }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCity = insertCities.returning;\r\n                            console.log(insertedCity)\r\n                            cache.writeQuery({\r\n                                query: city\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/cities'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.state = ' ';\r\n                this.country = ' ';\r\n                this.postalCode = ' ';\r\n                this.description = ' ';\r\n            },\r\n        },",[104,150],[3160,3191],[60,106],[3206,3237],[54,100],[363,401],"label=\"Save Coupon\" @click=\"addCoupon\"",[60,106],[435,467],"label=\"Save\" @click=\"addCountry\"",[2321,2349],"id=\"tagDesc\" type=\"textarea\"",[2321,2371],"v-model=\"description\" type=\"textarea\" id=\"tagDesc\"",[3417,4853],"\r\n    head: {\r\n        title: 'Add New Country'\r\n    }, \r\n   \r\n  methods: {\r\n      async addCountry() {\r\n            const name = this.name;\r\n            const description = this.description;\r\n            const image = this.image;\r\n            const region = this.region;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_COUNTRIES,\r\n                variables: {\r\n                    name,\r\n                    description,\r\n                    image,\r\n                    region\r\n                 },\r\n        update: (cache, { data: { insertCountries }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedCountry = insertCountries.returning;\r\n                            console.log(insertedCountry)\r\n                            cache.writeQuery({\r\n                                query: countries\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/countries'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.description = ' ';\r\n                this.image = ' ';\r\n                this.region = ' ';\r\n            },\r\n        },",[60,106],[437,467],"label=\"Save\" @click=\"addStaff\"",[60,106],[439,469],"label=\"Save\" @click=\"addGroup\"",[943,974],"v-model=\"tax_class\" type=\"text\"",[54,100],[363,421],"label=\"Save Gift_Certificate\" @click=\"addGift_Certificate\"",[104,150],[478,511],"label=\"Save\" @click=\"addGlossary\"",[3164,3195],[60,106],[461,493],"label=\"Save\" @click=\"addInvoice\"",[60,106],[431,461],"label=\"Save\" @click=\"addEvent\"",[5028,5059],[54,100],[363,409],"label=\"Save Newsletter\" @click=\"addNewsletter\"",[54,100],[363,405],"label=\"Save Customer\" @click=\"addCustomer\"",[3907,3941],"id=\"aboutCustomer\" type=\"textarea\"",[3907,3969],"v-model=\"short_description\" type=\"textarea\" id=\"aboutCustomer\"",[5575,5606],[60,106],[430,459],"label=\"Save\" @click=\"addPage\"",[4650,4692],"v-model=\"meta_description\" type=\"textarea\"",[54,100],[535,567],"label=\"Save\" @click=\"addProduct\"",[6492,6523],[8418,8460],[9631,9657],"v-model=\"file\" name=\"file\"",[60,106],[571,603],[1094,1141],[4350,4381],[54,100],[5318,5349],[60,106],[433,464],"label=\"Save\" @click=\"addReturn\"",[54,100],[363,401],"label=\"Save Review\" @click=\"addReview\"",[60,106],[439,469],[943,974],[60,106],[517,549],"label=\"Save\" @click=\"addSegment\"",[1030,1062],"id=\"description\" type=\"textarea\"",[1030,1084],"v-model=\"description\" type=\"textarea\" id=\"description\"",[60,106],[435,468],"label=\"Save\" @click=\"addShipment\"",[1715,1746],[60,106],[437,467],[60,106],[432,462],"label=\"Save\" @click=\"addState\"",[2304,2332],[2304,2354],[3396,4816],"\r\n    head: {\r\n        title: 'Add New State'\r\n    }, \r\n   \r\n  methods: {\r\n      async addState() {\r\n            const name = this.name;\r\n            const description = this.description;\r\n            const image = this.image;\r\n            const country = this.country;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_COUNTRIES,\r\n                variables: {\r\n                    name,\r\n                    description,\r\n                    image,\r\n                    country\r\n                 },\r\n        update: (cache, { data: { insertStates }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedState = insertStates.returning;\r\n                            console.log(insertedState)\r\n                            cache.writeQuery({\r\n                                query: states\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../shop/states'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.description = ' ';\r\n                this.image = ' ';\r\n                this.country = ' ';\r\n            },\r\n        },",[60,106],[571,603],[1094,1141],[4350,4381],[60,106],[430,458],"label=\"Save\" @click=\"addTag\"",[2046,2074],[2046,2092],"v-model=\"excerpt\" type=\"textarea\" id=\"tagDesc\"",[2958,4133],"\r\n    head: {\r\n        title: 'Add New Tag'\r\n    }, \r\n   \r\n  methods: {\r\n      async addTag() {\r\n            const name = this.name;\r\n            const excerpt = this.excerpt;\r\n            await this.$apollo.mutate({\r\n                mutation: ADD_TAGS,\r\n                variables: {\r\n                    name,\r\n                    excerpt,\r\n                 },\r\n        update: (cache, { data: { insertTags }}) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedTag = insertTags.returning;\r\n                            console.log(insertedTag)\r\n                            cache.writeQuery({\r\n                                query: tags\r\n                            })\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({path: '../content/tags'})\r\n                }).catch(err => console.log(err));\r\n                this.name = ' ';\r\n                this.excerpt = ' ';\r\n            },\r\n        },",[60,106],[445,477],"label=\"Save\" @click=\"addTaxRate\"",[60,106],[445,477],"label=\"Save\" @click=\"addTaxRule\"",[60,106],[571,603],[1094,1141],[4350,4381],[54,100],[387,421],"label=\"Save\" @click=\"addWarehouse\"",[463,495],[54,100],[538,575],"label=\"Save\" @click=\"addFullfillment\"",[463,495],[433,461],[2048,2076],[441,471],[2315,2343],[453,486],[533,565],[1049,1081],[376,414],[447,478],[400,432],[437,466],[399,441],[4003,4037],[387,433],[38,103],"id=\"info3-a\" class=\"info3 cid-t0swL5imvs mbr-parallax-background\"",[1035,1121],":key=\"index\" class=\"mbr-text mbr-fonts-style mb-4 display-7 breadcrumb-item pageTitle\"",[476,508],[498,531],[398,456],[484,523],"label=\"Save\" @click=\"addCustomer_group\"",[375,413],[452,484],[2344,2372],[587,619],[60,106],[573,605],[5279,5322],"v-model=\"short_description\" type=\"textarea\"",[7053,7084],[9181,9223],[10460,10487],"v-model=\"file\" :uppy=\"uppy\"",[1325,1352],"id=\"input_1\" name=\"email_2\"",[1809,1835],"id=\"input_2\" name=\"text_3\"",[2303,2329],[2796,2822],[3313,3339],[54,100],[3913,3947],[3913,3975],[5319,5350],[3408,3586],"\r\n    components: {\r\n        toppicks,\r\n        Sales,\r\n        Marketings,\r\n        Customers,\r\n        Reports,\r\n        Shops,\r\n        Users\r\n    },\r\n    layout: 'dashboard',",[326,356],"id=\"table\" data-toggle=\"table\"",[328,358],[324,354],[969,1014],"id=\"segmentStatus\" :options=\"categories.name\"",[1117,1160],"id=\"segmentWebsite\" :options=\"website.name\"",[56,97],"id=\"info3-1\" class=\"info3 cid-t6HE9SrOd7\"",[865,906],"id=\"info2-2\" class=\"info2 cid-t6LQqjFfOw\"",[88,148],"id=\"header6-3\" class=\"header6 cid-t6MvM5y84W mbr-fullscreen\"",[881,934],"\r\n  components: 'dashboard',\r\n  \r\n  props: ['error'],",[54,99],"enctype=\"multipart/form-data\" @submit.prevent",[60,106],[54,99],[98,144],[103,148]]