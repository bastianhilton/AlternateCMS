(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{1240:function(f,h,r){"use strict";r.r(h);var c=function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("div",[n("nav",{staticClass:"navbar navbar-dark bg-dark"},[n("div",{staticClass:"container-fluid"},[n("a",{staticClass:"navbar-brand",attrs:{href:"/admin/add-new/add-new-warehouse"}},[n("FormulateInput",{attrs:{type:"button"}},[e._v("Create Warehouse")])],1)])]),e._v(" "),n("br"),e._v(" "),n("div",{staticClass:"table table-responsive"},[n("table",{staticClass:"table",attrs:{id:"table","data-toggle":"table"}},[e._m(0),e._v(" "),e._l(e.warehouse,function(o){return n("tbody",{key:o.id},[n("tr",[n("td",[e._v(e._s(o.name))]),e._v(" "),n("td",[e._v(e._s(o.shipping_zones))]),e._v(" "),n("td",[n("a",{attrs:{href:"/admin/edit/warehouse/"+o.id}},[e._v("Edit")])])])])})],2)])])},p=[function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("thead",{staticClass:"table table-dark"},[n("tr",[n("th",[e._v("Name")]),e._v(" "),n("th",[e._v("Shipping Zones")]),e._v(" "),n("th",[e._v("Actions")])])])}],u=r(595),l=r.n(u),v={data:function(){return{warehouse:[]}},apollo:{warehouse:{prefetch:!0,query:l.a}},head:{title:"Warehouses"}},k=v,a=r(31),i=Object(a.a)(k,c,p,!1,null,null,null),t=h.default=i.exports},595:function(f,h){var r={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"MyQuery"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"warehouse"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"created_at"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"country"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"city"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"category"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"postal"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"products"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isPublic"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:202}};r.loc.source={body:`query MyQuery {\r
  warehouse {\r
    id\r
    description\r
    created_at\r
    country\r
    city\r
    category\r
    image\r
    name\r
    postal\r
    products\r
    isPublic\r
    state\r
    status\r
  }\r
}\r
`,name:"GraphQL request",locationOffset:{line:1,column:1}};var c={};function p(a){return a.filter(function(i){if(i.kind!=="FragmentDefinition")return!0;var t=i.name.value;return c[t]?!1:(c[t]=!0,!0)})}function u(a,i){if(a.kind==="FragmentSpread")i.add(a.name.value);else if(a.kind==="VariableDefinition"){var t=a.type;t.kind==="NamedType"&&i.add(t.name.value)}a.selectionSet&&a.selectionSet.selections.forEach(function(e){u(e,i)}),a.variableDefinitions&&a.variableDefinitions.forEach(function(e){u(e,i)}),a.definitions&&a.definitions.forEach(function(e){u(e,i)})}var l={};(function(){r.definitions.forEach(function(i){if(i.name){var t=new Set;u(i,t),l[i.name.value]=t}})})();function v(a,i){for(var t=0;t<a.definitions.length;t++){var e=a.definitions[t];if(e.name&&e.name.value==i)return e}}function k(a,i){var t={kind:a.kind,definitions:[v(a,i)]};a.hasOwnProperty("loc")&&(t.loc=a.loc);var e=l[i]||new Set,s=new Set,n=new Set;for(e.forEach(function(d){n.add(d)});n.size>0;){var o=n;n=new Set,o.forEach(function(d){if(!s.has(d)){s.add(d);var m=l[d]||new Set;m.forEach(function(g){n.add(g)})}})}return s.forEach(function(d){var m=v(a,d);m&&t.definitions.push(m)}),t}f.exports=r,f.exports.MyQuery=k(r,"MyQuery")}}]);
