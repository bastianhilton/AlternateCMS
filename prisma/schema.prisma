generator typegraphql {
  provider           = "typegraphql-prisma"
  output             = "../prisma/generated/type-graphql"
  emitTranspiledCode = "true"
}

generator gen {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model articles {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  excerpt    String
  content    String?
  image      String?
  categories String?
  customers  String?
  users      String?
  published  DateTime? @default(now()) @db.Timestamptz(6)
  cust_id    Int       @default(autoincrement())
}

model cart_price_rules {
  id                                     Int       @id @default(autoincrement())
  rule                                   String?   @db.VarChar(255)
  description                            String?   @db.VarChar(255)
  active                                 Boolean?
  coupon                                 String?
  uses_per_customer                      String?
  priority                               String?
  start_date                             DateTime? @db.Date
  end_date                               DateTime? @db.Date
  status                                 String?
  website                                String?
  actions_apply                          String?
  actions_discount_amount                Decimal?  @db.Decimal
  actions_discard_subsequent_rules       Boolean?
  actions_max_qty_discount_is_applied_to Decimal?  @db.Decimal
  actions_discount_qty_step              Decimal?  @db.Decimal
  actions_apply_shipping_amount          Boolean?
}

model catalog_price_rule {
  id                               Int       @id @default(autoincrement())
  rule                             String?   @db.VarChar(255)
  description                      String?   @db.VarChar(255)
  active                           Boolean?
  customer_groups                  String?
  priority                         String?
  start_date                       DateTime? @db.Date
  end_date                         DateTime? @db.Date
  status                           String?
  website                          String?
  actions_apply                    String?
  actions_discount_amount          Decimal?  @db.Decimal
  actions_discard_subsequent_rules Boolean?
}

model categories {
  id               Int      @id @default(autoincrement())
  thumbnail        String?
  name             String   @db.VarChar(255)
  visibility       String?
  status           Boolean?
  websites         String?
  product          String?
  country          String?
  description      String?  @db.VarChar
  content          String?  @db.VarChar(255)
  image            String?
  meta_title       String?
  meta_keywords    String?
  meta_description String?
  meta_url         String?
}

model cities {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?
  state       String? @db.VarChar
  country     String? @db.VarChar
  postalCode  String?
  image       String?
}

model comments {
  id            Int       @id @default(autoincrement())
  customer_name String    @db.VarChar(255)
  description   String?   @db.VarChar(255)
  image         String?
  response      String?
  published     DateTime? @db.Timestamp(6)
  cust_id       Int       @default(autoincrement())
  customers     customers @relation(fields: [cust_id], references: [id])
}

model core_store {
  id          Int     @id @default(autoincrement())
  key         String? @db.VarChar(255)
  value       String?
  type        String? @db.VarChar(255)
  environment String? @db.VarChar(255)
  tag         String? @db.VarChar(255)
}

model countries {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?
  image       String?
  region      String?
}

model coupons {
  id                         BigInt    @id @default(autoincrement())
  name                       String
  excerpt                    String?
  discount                   String?
  image                      String?
  published                  DateTime? @default(now()) @db.Timestamp(6)
  expiration                 String?
  categories                 String?
  articles                   String?
  products                   String?
  customers                  String?
  users                      String?
  prod_id                    BigInt    @default(autoincrement())
  products_couponsToproducts products  @relation(fields: [prod_id], references: [id])
}

model credit_memos {
  credit_memo  String
  order_number Int       @default(autoincrement())
  created      DateTime? @default(now()) @db.Timestamp(6)
  bill_to_name String
  status       String?
  refunded     String?
  action       String?
  id           BigInt    @default(autoincrement())
  cust_id      Int       @default(autoincrement())
  prod_id      BigInt    @default(autoincrement())
  customers    customers @relation(fields: [cust_id], references: [id])
  products     products  @relation(fields: [prod_id], references: [id])

  @@id([credit_memo, id])
}

model currency_rates {
  import_service String   @id
  usd            Decimal? @db.Money
}

model currency_symbols {
  symbol       String   @id
  use_standard Boolean?
}

model customers {
  id                                       Int                      @id @default(autoincrement())
  thumbnail                                String?
  name_prefix                              String?
  first_name                               String
  middle_name                              String?
  last_name                                String
  email                                    String
  customer_group                           String?
  phone                                    String?
  zipcode                                  String?
  name_suffix                              String?
  websites                                 String?
  product                                  String?
  country                                  String?
  state                                    String?
  customer_since                           DateTime?                @default(now()) @db.Timestamptz(6)
  confirmed_email                          String?
  date_of_birth                            String?
  tax_vat_number                           String?
  gender                                   String?
  description                              String?
  short_description                        String?
  image                                    String?
  Address                                  String?
  address_two                              String?
  payment_type                             String?
  username                                 String?
  password                                 String?
  comments                                 comments[]
  credit_memos                             credit_memos[]
  customer_group_customer_groupTocustomers customer_group[]
  customer_payment                         customer_payment?
  emails                                   emails[]
  newsletter_subscribers                   newsletter_subscribers[]
  orders                                   orders[]
  quotes                                   quotes[]
  returns                                  returns[]
}

model gift_certificates {
  id             BigInt    @id @default(autoincrement())
  name           String
  excerpt        String?
  discount       String?
  image          String?
  published      DateTime? @default(now()) @db.Timestamp(6)
  special_offers String?
  rewards        String?
  coupons        String?
  expiration     String?
  categories     String?
  articles       String?
  products       String?
  customers      String?
  users          String?
  type           String?
}

model glossary {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  content   String?
  image     String?
  published DateTime? @db.Timestamp(6)
}

model invoices {
  invoice               Int       @default(autoincrement())
  order_number          BigInt    @default(autoincrement())
  invoice_date          DateTime? @default(now()) @db.Timestamp(6)
  bill_to_name          String
  billing_address       String?
  grand_total_base      String?
  grand_total_purchased String?
  status                String?
  shipping_address      String?
  customer_name         String?
  email                 String?
  customer_group        String?
  payment_method        String?
  shipping_information  String?
  subtotal              String?
  shipping_and_handling String?
  id                    BigInt    @id @default(autoincrement())
}

model newsletter_subscribers {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  customer_first_name String?
  customer_last_name  String?
  store               String?
  status              String?
  websites            String?
  created_at          DateTime? @default(now()) @db.Timestamp(6)
  cust_id             Int       @default(autoincrement())
  customers           customers @relation(fields: [cust_id], references: [id])
}

model orders {
  id                           Int            @id @default(autoincrement())
  purchase_point               Int?
  purchase_date                DateTime?      @db.Timestamp(6)
  bill_to_name                 String         @db.VarChar(255)
  ship_to_name                 String?        @db.VarChar(255)
  grand_total_base             Int?
  grand_total_purchased        Int?
  status                       Boolean?
  action                       Boolean?
  allocated_sources            String?
  braintree_transaction_source String?
  cust_id                      Int            @default(autoincrement())
  prod_id                      BigInt         @default(autoincrement())
  customers                    customers      @relation(fields: [cust_id], references: [id])
  products                     products       @relation(fields: [prod_id], references: [id])
  quotes                       quotes[]
  transactions                 transactions[]
}

model pages {
  id               Int      @id @default(autoincrement())
  enable_page      Boolean?
  title            String   @db.VarChar(255)
  content_title    String?  @db.VarChar(255)
  content          String?
  url_key          String?
  meta_title       String?
  meta_keywords    String?
  meta_description String?
}

model polls {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  excerpt     String?   @db.VarChar(255)
  description String?
  image       String?
  published   DateTime? @db.Timestamp(6)
  question    String?   @db.VarChar(255)
  response    String?   @db.VarChar(255)
  categories  String?
  articles    String?
  products    String?
  customers   String?
  users       String?
}

model product_attribute {
  id                                Int                     @id @default(autoincrement())
  default_label                     String?
  catalog_input_type_store_owner    String?
  values_required                   Boolean?
  attribute_code                    String?
  scope                             String?
  default_value                     String?
  unique_value                      Boolean?
  input_validation_store_owner      String?
  add_column_options                Boolean?
  filter_options                    Boolean?
  use_search                        Boolean?
  comparable_storefront             Boolean?
  layered_navigation                Boolean?
  search_results_layered_navigation Boolean?
  position                          String?
  promo_rule_conditions             Boolean?
  allow_html_tags_storefront        Boolean?
  visible_catalog_pages_storefront  Boolean?
  used_product_listing              Boolean?
  used_sorting_product_listing      Boolean?
  prod_id                           BigInt                  @default(autoincrement())
  products                          products                @relation(fields: [prod_id], references: [id])
  product_attribute_set             product_attribute_set[]
}

model product_attribute_set {
  id                Int               @id @default(autoincrement())
  name              String            @db.VarChar(255)
  based_on          String?
  attribute_id      Int               @default(autoincrement())
  product_attribute product_attribute @relation(fields: [attribute_id], references: [id])
}

model products {
  id                  BigInt              @id @default(autoincrement())
  sku                 BigInt              @unique @default(autoincrement())
  thumbnail           String?
  name                String
  type                String?
  attribute_set       String?
  price               String?
  quantity_per_source String?
  salable_quantity    String?
  visibility          String?
  status              Boolean?
  websites            String?
  product             String?
  tax_class           String?
  stock_status        String?
  weight              String?
  categories          String?
  created_at          DateTime?           @default(now()) @db.Timestamptz(6)
  country             String?
  size                String?
  format              String?
  height              String?
  content             String?
  short_description   String?
  image               String?
  meta_title          String?
  meta_keywords       String?
  meta_description    String?
  meta_url            String?
  file                String?
  manufacture         String?
  coupons             coupons[]
  credit_memos        credit_memos[]
  orders              orders[]
  product_attribute   product_attribute[]
  quotes              quotes[]
  rating              rating[]
  returns             returns[]
  tax_rate            tax_rate[]
  tax_rule            tax_rule[]
}

model quotes {
  id                          Int       @id @default(autoincrement())
  name                        String    @db.VarChar(255)
  excerpt                     String?   @db.VarChar(255)
  image                       String?
  published                   DateTime? @db.Timestamp(6)
  categories                  String?
  articles                    String?
  products                    String?
  customers                   String?
  users                       String?
  cust_id                     Int       @default(autoincrement())
  prod_id                     BigInt    @default(autoincrement())
  order_id                    Int       @default(autoincrement())
  customers_customersToquotes customers @relation(fields: [cust_id], references: [id])
  orders                      orders    @relation(fields: [order_id], references: [id])
  products_productsToquotes   products  @relation(fields: [prod_id], references: [id])
}

model rating {
  id                 Int      @id @default(autoincrement())
  default_value      String?
  default_store_view String?
  rating_visibility  String?
  active             Boolean?
  sort_order         Decimal? @db.Decimal
  prod_id            BigInt   @default(autoincrement())
  products           products @relation(fields: [prod_id], references: [id])
}

model reports {
  id             Int       @id @default(autoincrement())
  customer       String?
  email          String?
  products       String?
  quantity       Decimal?  @db.Decimal
  subtotal       String?
  applied_coupon String?
  created        DateTime? @default(now()) @db.Timestamp(6)
  updated        DateTime? @default(now()) @db.Timestamp(6)
  ip_address     String?
}

model reviews {
  id         Int       @id @default(autoincrement())
  first_name String?
  last_name  String?
  content    String?
  websites   String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  shop_id    Int       @default(autoincrement())
  comment_id Int       @default(autoincrement())
}

model reward_points {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  excerpt    String?   @db.VarChar(255)
  discount   Decimal?  @db.Money
  image      String?
  published  DateTime? @db.Timestamp(6)
  coupons    String?
  expiration DateTime? @db.Date
  categories String?
  articles   String?
  products   String?
  customers  String?
  users      String?
}

model role {
  id        Int    @id @default(autoincrement())
  role_name String @db.VarChar(255)
}

model shipments {
  product      String
  speed_grade  String
  ship_date    DateTime? @default(now()) @db.Timestamp(6)
  carrier_name String
  transit_time String?
  tracking_url String?
  image        String?
  id           BigInt    @id @default(autoincrement())
}

model shops {
  id                Int     @id @default(autoincrement())
  name              String  @db.VarChar(255)
  description       String?
  image             String?
  website           String? @db.VarChar(255)
  products          String?
  articles          String?
  customers         String?
  comments          String?
  coupons           String?
  categories        String?
  polls             String?
  quotes            String?
  reviews           String?
  gift_certificates String?
  rating            String?
  tags              String?
  users             String?
  invoices          String?
  reports           String?
  reward_points     String?
  special_discounts String?
  statistics        String?
  stocks            String?
}

model source {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(255)
  code            Int      @default(autoincrement())
  enabled         Boolean?
  description     String?  @db.VarChar(255)
  latitude        String?
  longitude       String?
  pickup_location Boolean?
  contact_name    String?  @db.VarChar(255)
  email           String?  @db.VarChar(255)
  phone           Decimal? @db.Decimal
  fax             Decimal? @db.Decimal
  country         String?
  state           String?
  city            String?
  street          String?
  postcode        Decimal? @db.Decimal
}

model special_discounts {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  excerpt    String?   @db.VarChar(255)
  discount   Decimal?  @db.Money
  image      String?
  published  DateTime? @db.Timestamp(6)
  rewards    String?
  coupons    String?
  expiration DateTime? @db.Date
  categories String?
  articles   String?
  products   String?
  customers  String?
  users      String?
}

model states {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?
  country     String?
  image       String?
}

model statistics {
  id             Int       @id @default(autoincrement())
  name           String    @db.VarChar(255)
  excerpt        String?   @db.VarChar(255)
  description    String?
  image          String?
  published      DateTime? @db.Timestamp(6)
  special_offers String?
  reports        String?
  rewards        String?
  coupons        String?
  expiration     DateTime? @db.Date
  categories     String?
  articles       String?
  products       String?
  customers      String?
  users          String?
}

model stocks {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  enabled     Boolean?
  description String?  @db.VarChar(255)
  website     String?
  sources     String?
}

model tags {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(255)
  excerpt    String? @db.VarChar(255)
  categories String?
  articles   String?
  products   String?
  customers  String?
  users      String?
}

model tax_rate {
  id                 Int      @id @default(autoincrement())
  tax_identifier     String
  zip_post_is_range  Boolean?
  postcode           String?
  state              String?
  country            String?
  rate_percent       String?
  default_store_view String?
  prod_id            BigInt   @default(autoincrement())
  products           products @relation(fields: [prod_id], references: [id])
}

model tax_rule {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(255)
  tax_rate String?
  prod_id  BigInt   @default(autoincrement())
  products products @relation(fields: [prod_id], references: [id])
}

model themes {
  id           Int      @id @default(autoincrement())
  title        String?
  parent_theme String?
  theme_path   String?
  action       String?
  website_id   BigInt   @default(autoincrement())
  websites     websites @relation(fields: [website_id], references: [id])
}

model transactions {
  id                    Int              @id @default(autoincrement())
  order_id              Int              @default(autoincrement())
  transaction_id        Int              @default(autoincrement())
  parent_transaction_id Int              @default(autoincrement())
  created               DateTime?        @default(now()) @db.Timestamp(6)
  payment_method        BigInt           @default(autoincrement())
  closed                String?
  orders                orders           @relation(fields: [order_id], references: [id])
  customer_payment      customer_payment @relation(fields: [payment_method], references: [id])
}

model upload_file {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255)
  alternativeText   String?   @db.VarChar(255)
  caption           String?   @db.VarChar(255)
  width             Int?
  height            Int?
  formats           Json?
  hash              String    @db.VarChar(255)
  ext               String?   @db.VarChar(255)
  mime              String    @db.VarChar(255)
  size              Decimal   @db.Decimal(10, 2)
  url               String    @db.VarChar(255)
  previewUrl        String?   @db.VarChar(255)
  provider          String    @db.VarChar(255)
  provider_metadata Json?
  created_by        Int?
  updated_by        Int?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
}

model upload_file_morph {
  id             Int     @id @default(autoincrement())
  upload_file_id Int?
  related_id     Int?
  related_type   String?
  field          String?
  order          Int?
}

model url_rewrites {
  id            Int      @id @default(autoincrement())
  request_path  String?
  description   String?  @db.VarChar(255)
  redirect_type Boolean?
  target_path   String?
  store         String?
}

model users {
  id               Int       @id @default(autoincrement())
  username         String
  first_name       String
  last_name        String?
  email            String
  password         String
  interface_locale String?
  value            String?
  permissions      String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
}

model agreements {
  id           Int       @id @default(autoincrement())
  reference_id Int       @default(autoincrement())
  created      DateTime? @default(now()) @db.Timestamp(6)
  updated      DateTime? @default(now()) @db.Timestamp(6)
  content      String?
  name         String?
  image        String?
  excerpt      String?
  type         String?
  user_id      Int       @default(autoincrement())
  shop_id      Int       @default(autoincrement())
}

model collections {
  id               BigInt    @id @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  name             String?
  description      String?
  image            String?
  product          String?
  meta_title       String?
  meta_keywords    String?
  meta_description String?
}

model customer_group {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  tax_class  String?
  cust_id    Int       @default(autoincrement())
  customers  customers @relation(fields: [cust_id], references: [id])
}

model emails {
  id         Int       @id @default(autoincrement())
  title      DateTime? @db.Date
  created_at DateTime? @default(now()) @db.Timestamp(6)
  subject    String?   @db.VarChar(255)
  content    String?
  recipients String?
  cust_id    Int       @default(autoincrement())
  customers  customers @relation(fields: [cust_id], references: [id])
}

model events {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  content    String?
  tickets    String?
  image      String?
  start      String?
  end        String?
  category   String?
  city       String?
  state      String?
  country    String?
  postalcode String?
}

model returns {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  name          String?
  validity      String?
  return_prefix String?
  prod_id       BigInt    @default(autoincrement())
  cust_id       Int       @default(autoincrement())
  customers     customers @relation(fields: [cust_id], references: [id])
  products      products  @relation(fields: [prod_id], references: [id])
}

model segments {
  id          BigInt    @id @unique @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String?
  description String?
  website     String?
  status      String?
  apply_to    String?
  customers   String?
}

model websites {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  url        String?
  shop       String?
  store      String?
  themes     themes[]
}

model customer_payment {
  id           BigInt         @id @default(autoincrement())
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  cust_id      Int            @unique @default(autoincrement())
  payment_info String?
  provider     String?
  account_no   BigInt         @unique @default(autoincrement())
  expiry       BigInt?
  customers    customers      @relation(fields: [cust_id], references: [id])
  transactions transactions[]
}

model general_settings {
  id                  BigInt    @id @default(autoincrement())
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  title               String?
  tagline             String?
  url                 String?
  email               String?
  access_restrictions String?
  restriction_mode    String?
  startup_page        String?
  landing_page        String?
  http_response       String?
  store_email         String?
  store_contact       String?
  store_contact_two   String?
  customer_support    String?
}

model sales_settings {
  id                         BigInt    @id @default(autoincrement())
  created_at                 DateTime? @default(now()) @db.Timestamptz(6)
  sales_email                String?
  hide_customer_ip           String?
  checkout_subtotal          String?
  checkout_discount          String?
  checkout_shipping          String?
  checkout_tax               String?
  checkout_fixed_product_tax String?
  checkout_grand_total       String?
  checkout_gift_cards        String?
  checkout_store_credit      String?
  allow_reorder              String?
  allow_zero_grandtotal      String?
  invoice_logo               String?
  invoice_html_print         String?
  invoice_address            String?
}

model shop_settings {
  id                       BigInt    @id @default(autoincrement())
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  store_name               String?
  store_phone              String?
  store_hours              String?
  country                  String?
  region                   String?
  zipcode                  String?
  city                     String?
  address                  String?
  address_two              String?
  vat_number               String?
  allow_state              String?
  state_required_for       String?
  allow_countries          String?
  default_country          String?
  optional_zip             String?
  european_union_countries String?
  top_destinations         String?
  base_currency            String?
  default_currency         String?
  allowed_currency         String?
}

model fullfillments {
  id             BigInt    @id @default(autoincrement())
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  name           String?
  shipping_zones String?
  company        String?
  address        String?
  address_two    String?
  city           String?
  state          String?
  zipcode        String?
  country        String?
  country_area   String?   @map("country area")
  phone          String?
  pickup         String?
  stock          String?
}
